!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACKNOWLEDGE	PTPWRd/constants.h	/^	ACKNOWLEDGE,$/;"	e	enum:__anon29
ADJ_FREQ_MAX	PTPWRd/dep/constants_dep.h	80;"	d
ALT1_DOMAIN_NUMBER	PTPWRd/constants.h	/^	ALT1_DOMAIN_NUMBER,$/;"	e	enum:__anon18
ALT2_DOMAIN_NUMBER	PTPWRd/constants.h	/^	ALT2_DOMAIN_NUMBER,$/;"	e	enum:__anon18
ALT3_DOMAIN_NUMBER	PTPWRd/constants.h	/^	ALT3_DOMAIN_NUMBER$/;"	e	enum:__anon18
ANNOUNCE	PTPWRd/constants.h	/^	ANNOUNCE,$/;"	e	enum:__anon25
ANNOUNCE_INTERVAL	libptpnetif/netif_test.c	103;"	d	file:
ANNOUNCE_INTERVAL_TIMER	PTPWRd/constants.h	/^	ANNOUNCE_INTERVAL_TIMER, \/**<\\brief Timer handling interval before master sends two announce messages*\/$/;"	e	enum:__anon23
ANNOUNCE_LENGTH	PTPWRd/constants.h	76;"	d
ANNOUNCE_RECEIPT_TIMER	PTPWRd/constants.h	/^	ANNOUNCE_RECEIPT_TIMER,\/**<\\brief Timer handling announce receipt timeout*\/$/;"	e	enum:__anon23
ANN_SUFIX	PTPWRd/constants.h	/^	ANN_SUFIX = 0x2000,$/;"	e	enum:__anon31
AR	Makefile	/^AR              = $(CROSS_COMPILE)ar$/;"	m
ARRAY_SIZE	libminipc/minipc-int.h	27;"	d
ARRAY_SIZE	libminipc/minipc-int.h	35;"	d
AS	Makefile	/^AS              = $(CROSS_COMPILE)as$/;"	m
ATOMIC_CLOCK	PTPWRd/constants.h	/^	ATOMIC_CLOCK=0x10,$/;"	e	enum:__anon20
A_better_by_topology_then_B	PTPWRd/constants.h	370;"	d
A_better_then_B	PTPWRd/constants.h	371;"	d
A_equals_B	PTPWRd/constants.h	375;"	d
AnnounceWRtlv	PTPWRd/datatypes.h	/^typedef Octet AnnounceWRtlv[WR_ANNOUNCE_TLV_LENGTH];$/;"	t
BSD_INTERFACE_FUNCTIONS	PTPWRd/dep/constants_dep.h	32;"	d
B_better_by_topology_then_A	PTPWRd/constants.h	373;"	d
B_better_then_A	PTPWRd/constants.h	372;"	d
Boolean	PTPWRd/dep/datatypes_dep.h	/^typedef enum {FALSE=0, TRUE} Boolean;$/;"	t	typeref:enum:__anon10
CALIBRATE	PTPWRd/constants.h	/^	CALIBRATE,$/;"	e	enum:__anon31
CALIBRATED	PTPWRd/constants.h	/^	CALIBRATED,$/;"	e	enum:__anon31
CALIBRATION_TIME	libptpnetif/netif_test.c	106;"	d	file:
CC	Makefile	/^CC              = $(CROSS_COMPILE)gcc$/;"	m
CFLAGS	Makefile	/^   CFLAGS = -ffreestanding -DPTPD_FREESTANDING -ffunction-sections -fdata-sections -Os -DWRPC_EXTRA_SLIM $(EXTRA_CFLAGS)$/;"	m
CHECKVARS	Makefile	/^   CHECKVARS = LINUX$/;"	m
CHECK_LINK	libminipc/minipc-int.h	103;"	d
CLOCK_IDENTITY_LENGTH	PTPWRd/dep/constants_dep.h	79;"	d
CLOCK_IDENTITY_LENGTH	PTPWRd/dep/constants_dep.h	87;"	d
COMMAND	PTPWRd/constants.h	/^	COMMAND,$/;"	e	enum:__anon29
CONSTANTS_DEP_H	PTPWRd/dep/constants_dep.h	5;"	d
CONSTANTS_H_	PTPWRd/constants.h	2;"	d
CORELIBS	Makefile	/^CORELIBS = libptpnetif.a libminipc.a $/;"	m
CPP	Makefile	/^CPP             = $(CC) -E$/;"	m
ClockIdentity	PTPWRd/datatypes.h	/^typedef Octet ClockIdentity[CLOCK_IDENTITY_LENGTH];$/;"	t
ClockQuality	PTPWRd/datatypes.h	/^} ClockQuality;$/;"	t	typeref:struct:__anon39
ControlNet	PTPWRd/constants.h	/^	ControlNet,$/;"	e	enum:__anon19
D	Makefile	/^D = PTPWRd$/;"	m
DAEMONE_MODE	PTPWRd/constants.h	16;"	d
DATATYPES_DEP_H_	PTPWRd/dep/datatypes_dep.h	2;"	d
DATATYPES_H_	PTPWRd/datatypes.h	2;"	d
DBGNPI	PTPWRd/dep/ptpd_dep.h	41;"	d
DBGNPI	PTPWRd/dep/ptpd_dep.h	43;"	d
DBGV	PTPWRd/dep/ptpd_dep.h	32;"	d
DBGV	PTPWRd/dep/ptpd_dep.h	34;"	d
DEFAULT_AI	PTPWRd/constants.h	31;"	d
DEFAULT_ANNOUNCE_INTERVAL	PTPWRd/constants.h	33;"	d
DEFAULT_ANNOUNCE_RECEIPT_TIMEOUT	PTPWRd/constants.h	40;"	d
DEFAULT_AP	PTPWRd/constants.h	30;"	d
DEFAULT_CLOCKCLASS_VALIDATE_TIMEOUT	PTPWRd/constants.h	46;"	d
DEFAULT_CLOCK_ACCURACY	PTPWRd/constants.h	44;"	d
DEFAULT_CLOCK_CLASS	PTPWRd/constants.h	48;"	d
DEFAULT_CLOCK_VARIANCE	PTPWRd/constants.h	52;"	d
DEFAULT_DELAYREQ_INTERVAL	PTPWRd/constants.h	37;"	d
DEFAULT_DELAY_MECHANISM	PTPWRd/constants.h	29;"	d
DEFAULT_DELAY_S	PTPWRd/constants.h	32;"	d
DEFAULT_DISABLE_FALLBACK_WHEN_WR_FAILS	PTPWRd/constants.h	62;"	d
DEFAULT_DOMAIN_NUMBER	PTPWRd/constants.h	28;"	d
DEFAULT_FOREIGN_MASTER_THRESHOLD	PTPWRd/constants.h	43;"	d
DEFAULT_FOREIGN_MASTER_TIME_WINDOW	PTPWRd/constants.h	42;"	d
DEFAULT_INBOUND_LATENCY	PTPWRd/constants.h	25;"	d
DEFAULT_MAX_FOREIGN_RECORDS	PTPWRd/constants.h	56;"	d
DEFAULT_MAX_FOREIGN_RECORDS	PTPWRd/constants.h	58;"	d
DEFAULT_NO_RESET_CLOCK	PTPWRd/constants.h	27;"	d
DEFAULT_OUTBOUND_LATENCY	PTPWRd/constants.h	26;"	d
DEFAULT_PARENTS_STATS	PTPWRd/constants.h	61;"	d
DEFAULT_PDELAYREQ_INTERVAL	PTPWRd/constants.h	36;"	d
DEFAULT_PRIORITY1	PTPWRd/constants.h	50;"	d
DEFAULT_PRIORITY2	PTPWRd/constants.h	51;"	d
DEFAULT_PTP_DOMAIN_ADDRESS	PTPWRd/dep/constants_dep.h	95;"	d
DEFAULT_QUALIFICATION_TIMEOUT	PTPWRd/constants.h	41;"	d
DEFAULT_STARTUP_MODE	PTPWRd/constants.h	20;"	d
DEFAULT_SYNC_INTERVAL	PTPWRd/constants.h	38;"	d
DEFAULT_SYNC_RECEIPT_TIMEOUT	PTPWRd/constants.h	39;"	d
DEFAULT_TO	libptpnetif/hal_client.c	9;"	d	file:
DEFAULT_UTC_OFFSET	PTPWRd/constants.h	34;"	d
DEFAULT_UTC_VALID	PTPWRd/constants.h	35;"	d
DELAYREQ_INTERVAL_TIMER	PTPWRd/constants.h	/^	DELAYREQ_INTERVAL_TIMER,\/**<\\brief Timer handling the delayReq Interva*\/$/;"	e	enum:__anon23
DELAY_DISABLED	PTPWRd/constants.h	/^	DELAY_DISABLED=0xFE$/;"	e	enum:__anon22
DELAY_REQ	PTPWRd/constants.h	/^	DELAY_REQ,$/;"	e	enum:__anon25
DELAY_REQ_LENGTH	PTPWRd/constants.h	80;"	d
DELAY_RESP	PTPWRd/constants.h	/^	DELAY_RESP,$/;"	e	enum:__anon25
DELAY_RESP_LENGTH	PTPWRd/constants.h	81;"	d
DFLT_DOMAIN_NUMBER	PTPWRd/constants.h	/^	DFLT_DOMAIN_NUMBER = 0,$/;"	e	enum:__anon18
DISABLED	PTPWRd/constants.h	/^	DISABLED,$/;"	e	enum:__anon21
DMTD_UPDATE_INTERVAL	libposix/wrapper_private.h	10;"	d
DMTD_UPDATE_INTERVAL	libptpnetif/ptpd_netif.c	36;"	d	file:
DSC_error	PTPWRd/constants.h	376;"	d
DeviceNet	PTPWRd/constants.h	/^	DeviceNet,$/;"	e	enum:__anon19
E2E	PTPWRd/constants.h	/^	E2E=1,$/;"	e	enum:__anon22
E2E_mode	PTPWRd/datatypes.h	/^	Boolean		E2E_mode;$/;"	m	struct:__anon61	access:public
EBest	PTPWRd/bmc.c	/^UInteger8 EBest(PtpPortDS *ptpPortDS )$/;"	f	signature:(PtpPortDS *ptpPortDS )
EBest	PTPWRd/ptpd.h	/^UInteger8 EBest(PtpPortDS *ptpPortDS );$/;"	p	signature:(PtpPortDS *ptpPortDS )
ERROR	PTPWRd/dep/ptpd_dep.h	21;"	d
ETHER_MTU	libptpnetif/ptpd_netif.c	35;"	d	file:
Ebest	PTPWRd/datatypes.h	/^	Integer16  Ebest;$/;"	m	struct:__anon57	access:public
Enumeration16	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned short Enumeration16;$/;"	t
Enumeration4	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned char Enumeration4;$/;"	t
Enumeration8	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned char Enumeration8;$/;"	t
ErBest	PTPWRd/bmc.c	/^UInteger8 ErBest(ForeignMasterRecord *foreignMaster,PtpPortDS *ptpPortDS )$/;"	f	signature:(ForeignMasterRecord *foreignMaster,PtpPortDS *ptpPortDS )
ErBest	PTPWRd/ptpd.h	/^UInteger8 ErBest(ForeignMasterRecord *foreignMaster,PtpPortDS *ptpPortDS );$/;"	p	signature:(ForeignMasterRecord *foreignMaster,PtpPortDS *ptpPortDS )
FALSE	PTPWRd/dep/datatypes_dep.h	/^typedef enum {FALSE=0, TRUE} Boolean;$/;"	e	enum:__anon10
FAULTY	PTPWRd/constants.h	/^	FAULTY,$/;"	e	enum:__anon21
FIX_ALPHA_FRACBITS	wrsw_hal/hal_exports.h	90;"	d
FLAG_FIELD_LENGTH	PTPWRd/dep/constants_dep.h	88;"	d
FOLLOW_UP	PTPWRd/constants.h	/^	FOLLOW_UP=0x8,$/;"	e	enum:__anon25
FOLLOW_UP_LENGTH	PTPWRd/constants.h	78;"	d
FREE_OBJS	Makefile	/^FREE_OBJS = libposix\/freestanding-startup.o$/;"	m
FaultRecord	PTPWRd/datatypes.h	/^} FaultRecord;$/;"	t	typeref:struct:__anon42
FixedDelta	PTPWRd/datatypes.h	/^} FixedDelta;$/;"	t	typeref:struct:__anon35
ForeignMasterRecord	PTPWRd/datatypes.h	/^} ForeignMasterRecord;$/;"	t	typeref:struct:__anon56
GET	PTPWRd/constants.h	/^	GET,$/;"	e	enum:__anon29
GPS	PTPWRd/constants.h	/^	GPS=0x20,$/;"	e	enum:__anon20
HAL_CONNECT_RETRIES	libptpnetif/ptpd_netif.c	177;"	d	file:
HAL_CONNECT_TIMEOUT	libptpnetif/ptpd_netif.c	178;"	d	file:
HAL_EXPORT_STRUCTURES	libptpnetif/hal_client.c	6;"	d	file:
HAL_MAX_PORTS	wrsw_hal/hal_exports.h	6;"	d
HAL_TIMING_MODE_BC	wrsw_hal/hal_exports.h	63;"	d
HAL_TIMING_MODE_FREE_MASTER	wrsw_hal/hal_exports.h	62;"	d
HAL_TIMING_MODE_GRAND_MASTER	wrsw_hal/hal_exports.h	61;"	d
HAND_SET	PTPWRd/constants.h	/^	HAND_SET=0x60,$/;"	e	enum:__anon20
HEADER_LENGTH	PTPWRd/constants.h	75;"	d
HEXP_CAL_CMD_CHECK_IDLE	wrsw_hal/hal_exports.h	11;"	d
HEXP_CAL_CMD_RX_MEASURE	wrsw_hal/hal_exports.h	20;"	d
HEXP_CAL_CMD_TX_MEASURE	wrsw_hal/hal_exports.h	17;"	d
HEXP_CAL_CMD_TX_PATTERN	wrsw_hal/hal_exports.h	14;"	d
HEXP_CAL_RESP_BUSY	wrsw_hal/hal_exports.h	24;"	d
HEXP_CAL_RESP_ERROR	wrsw_hal/hal_exports.h	26;"	d
HEXP_CAL_RESP_OK	wrsw_hal/hal_exports.h	25;"	d
HEXP_DMPLL	wrsw_hal/hal_exports.h	47;"	d
HEXP_EXTSRC_CMD_CHECK	wrsw_hal/hal_exports.h	53;"	d
HEXP_EXTSRC_STATUS_LOCKED	wrsw_hal/hal_exports.h	55;"	d
HEXP_EXTSRC_STATUS_NOSRC	wrsw_hal/hal_exports.h	57;"	d
HEXP_FREQ	wrsw_hal/hal_exports.h	49;"	d
HEXP_HPLL	wrsw_hal/hal_exports.h	46;"	d
HEXP_LOCK_CMD_CHECK	wrsw_hal/hal_exports.h	29;"	d
HEXP_LOCK_CMD_ENABLE_TRACKING	wrsw_hal/hal_exports.h	30;"	d
HEXP_LOCK_CMD_START	wrsw_hal/hal_exports.h	28;"	d
HEXP_LOCK_STATUS_BUSY	wrsw_hal/hal_exports.h	33;"	d
HEXP_LOCK_STATUS_BUSY	wrsw_hal/hal_exports.h	56;"	d
HEXP_LOCK_STATUS_LOCKED	wrsw_hal/hal_exports.h	32;"	d
HEXP_LOCK_STATUS_NONE	wrsw_hal/hal_exports.h	34;"	d
HEXP_OFF	wrsw_hal/hal_exports.h	44;"	d
HEXP_ON	wrsw_hal/hal_exports.h	43;"	d
HEXP_PHASE	wrsw_hal/hal_exports.h	50;"	d
HEXP_PORT_MODE_NON_WR	wrsw_hal/hal_exports.h	87;"	d
HEXP_PORT_MODE_WR_MASTER	wrsw_hal/hal_exports.h	85;"	d
HEXP_PORT_MODE_WR_M_AND_S	wrsw_hal/hal_exports.h	84;"	d
HEXP_PORT_MODE_WR_SLAVE	wrsw_hal/hal_exports.h	86;"	d
HEXP_PPSG_CMD_ADJUST_NSEC	wrsw_hal/hal_exports.h	39;"	d
HEXP_PPSG_CMD_ADJUST_PHASE	wrsw_hal/hal_exports.h	37;"	d
HEXP_PPSG_CMD_ADJUST_UTC	wrsw_hal/hal_exports.h	38;"	d
HEXP_PPSG_CMD_GET	wrsw_hal/hal_exports.h	36;"	d
HEXP_PPSG_CMD_POLL	wrsw_hal/hal_exports.h	40;"	d
HEXP_PPSG_CMD_SET_VALID	wrsw_hal/hal_exports.h	41;"	d
IEE_802_3	PTPWRd/constants.h	/^	UDP_IPV6,IEE_802_3,$/;"	e	enum:__anon19
IFACE_NAME_LEN	libptpnetif/ptpd_netif.h	30;"	d
IFACE_NAME_LENGTH	PTPWRd/dep/constants_dep.h	74;"	d
IFCONF_LENGTH	PTPWRd/dep/constants_dep.h	76;"	d
IF_NAMESIZE	PTPWRd/dep/constants_dep.h	21;"	d
INET_ADDRSTRLEN	PTPWRd/dep/constants_dep.h	22;"	d
INIT	PTPWRd/constants.h	/^	INIT,$/;"	e	enum:__anon33
INITIALIZING	PTPWRd/constants.h	/^	INITIALIZING=1,$/;"	e	enum:__anon21
INTERNAL_OSCILLATOR	PTPWRd/constants.h	/^	INTERNAL_OSCILLATOR=0xA0$/;"	e	enum:__anon20
Integer16	PTPWRd/dep/datatypes_dep.h	/^typedef signed short Integer16;$/;"	t
Integer32	PTPWRd/dep/datatypes_dep.h	/^typedef signed int Integer32;$/;"	t
Integer64	PTPWRd/dep/datatypes_dep.h	/^} Integer64;$/;"	t	typeref:struct:__anon12
Integer8	PTPWRd/dep/datatypes_dep.h	/^typedef signed char Integer8;$/;"	t
IntervalTimer	PTPWRd/datatypes.h	/^} IntervalTimer;$/;"	t	typeref:struct:__anon55
LD	Makefile	/^LD              = $(CROSS_COMPILE)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = #-L. -lminipc -lptpnetif$/;"	m
LINK_POLL_INTERVAL	libptpnetif/netif_test.c	104;"	d	file:
LISTENING	PTPWRd/constants.h	/^	LISTENING,$/;"	e	enum:__anon21
LOCK	PTPWRd/constants.h	/^	LOCK,$/;"	e	enum:__anon31
LOCKED	PTPWRd/constants.h	/^	LOCKED,$/;"	e	enum:__anon31
LOCK_CHECK_INTERVAL	libptpnetif/netif_test.c	107;"	d	file:
MANAGEMENT	PTPWRd/constants.h	/^	MANAGEMENT,$/;"	e	enum:__anon25
MANAGEMENT_LENGTH	PTPWRd/constants.h	84;"	d
MANUFACTURER_ID	PTPWRd/constants.h	22;"	d
MASTER	PTPWRd/constants.h	/^	MASTER,$/;"	e	enum:__anon21
MAX_PAYLOAD	libposix/wrapper_private.h	8;"	d
MAX_PORT_NUMBER	PTPWRd/constants.h	125;"	d
MAX_PORT_NUMBER	PTPWRd/constants.h	127;"	d
MINIPC_ARG_ENCODE	libminipc/minipc.h	49;"	d
MINIPC_ARG_END	libminipc/minipc.h	52;"	d
MINIPC_ATYPE_DOUBLE	libminipc/minipc.h	/^	MINIPC_ATYPE_DOUBLE,	\/* float is promoted to double *\/$/;"	e	enum:minipc_at
MINIPC_ATYPE_ERROR	libminipc/minipc.h	/^	MINIPC_ATYPE_ERROR = 0xffff,$/;"	e	enum:minipc_at
MINIPC_ATYPE_INT	libminipc/minipc.h	/^	MINIPC_ATYPE_INT = 1,$/;"	e	enum:minipc_at
MINIPC_ATYPE_INT64	libminipc/minipc.h	/^	MINIPC_ATYPE_INT64,$/;"	e	enum:minipc_at
MINIPC_ATYPE_NONE	libminipc/minipc.h	/^	MINIPC_ATYPE_NONE = 0,	\/* used as terminator *\/$/;"	e	enum:minipc_at
MINIPC_ATYPE_STRING	libminipc/minipc.h	/^	MINIPC_ATYPE_STRING,	\/* size of strings is strlen() each time *\/$/;"	e	enum:minipc_at
MINIPC_ATYPE_STRUCT	libminipc/minipc.h	/^	MINIPC_ATYPE_STRUCT$/;"	e	enum:minipc_at
MINIPC_BASE_PATH	libminipc/minipc.h	32;"	d
MINIPC_DEFAULT_POLL	libminipc/minipc.h	35;"	d
MINIPC_FLAG_VERBOSE	libminipc/minipc.h	67;"	d
MINIPC_GET_ANUM	libminipc/minipc-int.h	115;"	d
MINIPC_GET_ASIZE	libminipc/minipc.h	51;"	d
MINIPC_GET_ATYPE	libminipc/minipc.h	50;"	d
MINIPC_MAX_ARGUMENTS	libminipc/minipc.h	25;"	d
MINIPC_MAX_CLIENTS	libminipc/minipc.h	24;"	d
MINIPC_MAX_EXPORT	libminipc/minipc.h	28;"	d
MINIPC_MAX_NAME	libminipc/minipc.h	23;"	d
MINIPC_MAX_REPLY	libminipc/minipc.h	26;"	d
MIN_PORT_NUMBER	PTPWRd/constants.h	130;"	d
MM_STARTING_BOUNDARY_HOPS	PTPWRd/dep/constants_dep.h	98;"	d
MPC_FLAG_CLIENT	libminipc/minipc-int.h	72;"	d
MPC_FLAG_DEVMEM	libminipc/minipc-int.h	74;"	d
MPC_FLAG_SERVER	libminipc/minipc-int.h	71;"	d
MPC_FLAG_SHMEM	libminipc/minipc-int.h	73;"	d
MPC_MAGIC	libminipc/minipc-int.h	69;"	d
MPC_TIMEOUT	libminipc/minipc-int.h	96;"	d
MPC_USER_FLAGS	libminipc/minipc-int.h	75;"	d
MsgAnnounce	PTPWRd/datatypes.h	/^}MsgAnnounce;$/;"	t	typeref:struct:__anon44
MsgDelayReq	PTPWRd/datatypes.h	/^}MsgDelayReq;$/;"	t	typeref:struct:__anon46
MsgDelayResp	PTPWRd/datatypes.h	/^}MsgDelayResp;$/;"	t	typeref:struct:__anon47
MsgFollowUp	PTPWRd/datatypes.h	/^}MsgFollowUp;$/;"	t	typeref:struct:__anon48
MsgHeader	PTPWRd/datatypes.h	/^} MsgHeader;$/;"	t	typeref:struct:__anon43
MsgManagement	PTPWRd/datatypes.h	/^}MsgManagement;$/;"	t	typeref:struct:__anon53
MsgPDelayReq	PTPWRd/datatypes.h	/^}MsgPDelayReq;$/;"	t	typeref:struct:__anon49
MsgPDelayResp	PTPWRd/datatypes.h	/^}MsgPDelayResp;$/;"	t	typeref:struct:__anon50
MsgPDelayRespFollowUp	PTPWRd/datatypes.h	/^}MsgPDelayRespFollowUp;$/;"	t	typeref:struct:__anon51
MsgSignaling	PTPWRd/datatypes.h	/^}MsgSignaling;$/;"	t	typeref:struct:__anon52
MsgSync	PTPWRd/datatypes.h	/^}MsgSync;$/;"	t	typeref:struct:__anon45
NET_ADDRESS_LENGTH	PTPWRd/dep/constants_dep.h	75;"	d
NM	Makefile	/^NM              = $(CROSS_COMPILE)nm$/;"	m
NONDAEMONE_MODE	PTPWRd/constants.h	17;"	d
NON_SLAVE	PTPWRd/constants.h	/^	NON_SLAVE	= 0x0,$/;"	e	enum:__anon32
NON_WR	PTPWRd/constants.h	/^	NON_WR      = 0x0,$/;"	e	enum:__anon27
NOTIFY	PTPWRd/dep/ptpd_dep.h	23;"	d
NOT_SEND_CALIBRATION_PATTERN	PTPWRd/constants.h	155;"	d
NO_ADJUST	PTPWRd/constants.h	69;"	d
NTP	PTPWRd/constants.h	/^	NTP=0x50,$/;"	e	enum:__anon20
NULL_WR_TLV	PTPWRd/constants.h	/^	NULL_WR_TLV = 0x0000,$/;"	e	enum:__anon31
NUMBER_PORTS	PTPWRd/constants.h	65;"	d
NetPath	PTPWRd/dep/datatypes_dep.h	/^} NetPath;$/;"	t	typeref:struct:__anon16
Nibble	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned char Nibble;$/;"	t
OBJCOPY	Makefile	/^OBJCOPY         = $(CROSS_COMPILE)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP         = $(CROSS_COMPILE)objdump$/;"	m
OBJS	Makefile	/^OBJS = $D\/arith.o$/;"	m
OTHER	PTPWRd/constants.h	/^	OTHER=0x90,$/;"	e	enum:__anon20
OUR_ETHERTYPE	libptpnetif/netif_test.c	109;"	d	file:
OUR_MCAST_ADDR	libptpnetif/netif_test.c	110;"	d	file:
Octet	PTPWRd/dep/datatypes_dep.h	/^typedef char Octet;$/;"	t
P2P	PTPWRd/constants.h	/^	P2P=2,$/;"	e	enum:__anon22
P2P_mode	PTPWRd/datatypes.h	/^    Boolean     P2P_mode;$/;"	m	struct:__anon61	access:public
PACKED	libptpnetif/ptpd_netif.h	23;"	d
PACKET_SIZE	PTPWRd/dep/constants_dep.h	90;"	d
PASSIVE	PTPWRd/constants.h	/^	PASSIVE,$/;"	e	enum:__anon21
PDELAYREQ_INTERVAL_TIMER	PTPWRd/constants.h	/^	PDELAYREQ_INTERVAL_TIMER=0,\/**<\\brief Timer handling the PdelayReq Interval*\/$/;"	e	enum:__anon23
PDELAY_REQ	PTPWRd/constants.h	/^	PDELAY_REQ,$/;"	e	enum:__anon25
PDELAY_REQ_LENGTH	PTPWRd/constants.h	79;"	d
PDELAY_RESP	PTPWRd/constants.h	/^	PDELAY_RESP,$/;"	e	enum:__anon25
PDELAY_RESP_FOLLOW_UP	PTPWRd/constants.h	/^	PDELAY_RESP_FOLLOW_UP,$/;"	e	enum:__anon25
PDELAY_RESP_FOLLOW_UP_LENGTH	PTPWRd/constants.h	83;"	d
PDELAY_RESP_LENGTH	PTPWRd/constants.h	82;"	d
PEER_PTP_DOMAIN_ADDRESS	PTPWRd/dep/constants_dep.h	96;"	d
PERROR	PTPWRd/dep/ptpd_dep.h	22;"	d
PHYS_PORT_ANY	libptpnetif/ptpd_netif.h	25;"	d
PORT_ADDRESS_LENGTH	PTPWRd/dep/constants_dep.h	85;"	d
POSIX_OBJS	Makefile	/^POSIX_OBJS = $D\/dep\/startup.o$/;"	m
PPS_WIDTH	libposix/ptpd-wrappers.h	54;"	d
PRE_MASTER	PTPWRd/constants.h	/^	PRE_MASTER,$/;"	e	enum:__anon21
PRIMARY_SLAVE	PTPWRd/constants.h	/^	PRIMARY_SLAVE 	,$/;"	e	enum:__anon32
PROFINET	PTPWRd/constants.h	/^	PROFINET$/;"	e	enum:__anon19
PTP	PTPWRd/constants.h	/^	PTP=0x40,$/;"	e	enum:__anon20
PTPDEXP_COMMAND_MAN_ADJUST_PHASE	PTPWRd/ptpd_exports.h	29;"	d
PTPDEXP_COMMAND_TRACKING	PTPWRd/ptpd_exports.h	28;"	d
PTPD_DBG	PTPWRd/dep/ptpd_dep.h	31;"	d
PTPD_DEP_H_	PTPWRd/dep/ptpd_dep.h	2;"	d
PTPD_FLAGS_MULTICAST	libptpnetif/ptpd_netif.h	12;"	d
PTPD_FREESTANDING	Makefile	/^PTPD_FREESTANDING ?= $(shell .\/check-freestanding $(CC))$/;"	m
PTPD_H_	PTPWRd/ptpd.h	22;"	d
PTPD_NETIF_ERROR	libptpnetif/ptpd_netif.h	18;"	d
PTPD_NETIF_NOT_FOUND	libptpnetif/ptpd_netif.h	20;"	d
PTPD_NETIF_NOT_READY	libptpnetif/ptpd_netif.h	19;"	d
PTPD_NETIF_OK	libptpnetif/ptpd_netif.h	17;"	d
PTPD_NETIF_READY	libptpnetif/ptpd_netif.h	15;"	d
PTPD_NETIF_RX	libptpnetif/ptpd_netif.h	28;"	d
PTPD_NETIF_TX	libptpnetif/ptpd_netif.h	27;"	d
PTPD_SOCK_RAW_ETHERNET	libptpnetif/ptpd_netif.h	9;"	d
PTPD_SOCK_UDP	libptpnetif/ptpd_netif.h	10;"	d
PTPD_TRACE	PTPWRd/dep/trace.h	35;"	d
PTPD_TRACE_MASK	PTPWRd/dep/trace.h	5;"	d
PTPD_TRACE_NOPTPDATADS	PTPWRd/dep/trace.h	57;"	d
PTPText	PTPWRd/datatypes.h	/^} PTPText;$/;"	t	typeref:struct:__anon41
PTP_DEFAULT	PTPWRd/constants.h	/^	PTP_DEFAULT$/;"	e	enum:__anon26
PTP_DISABLED	PTPWRd/constants.h	/^	PTP_INITIALIZING=0,	PTP_FAULTY,		PTP_DISABLED,$/;"	e	enum:__anon24
PTP_ETHER	PTPWRd/constants.h	/^	PTP_ETHER,$/;"	e	enum:__anon26
PTP_EVENT_PORT	PTPWRd/dep/constants_dep.h	92;"	d
PTP_EXPORT_STRUCTURES	PTPWRd/ptpd_exports.c	8;"	d	file:
PTP_FAULTY	PTPWRd/constants.h	/^	PTP_INITIALIZING=0,	PTP_FAULTY,		PTP_DISABLED,$/;"	e	enum:__anon24
PTP_GENERAL_PORT	PTPWRd/dep/constants_dep.h	93;"	d
PTP_INITIALIZING	PTPWRd/constants.h	/^	PTP_INITIALIZING=0,	PTP_FAULTY,		PTP_DISABLED,$/;"	e	enum:__anon24
PTP_LISTENING	PTPWRd/constants.h	/^	PTP_LISTENING,		PTP_PRE_MASTER,		PTP_MASTER,$/;"	e	enum:__anon24
PTP_MASTER	PTPWRd/constants.h	/^	PTP_LISTENING,		PTP_PRE_MASTER,		PTP_MASTER,$/;"	e	enum:__anon24
PTP_MULTICAST_ADDR	PTPWRd/dep/net.c	/^const mac_addr_t PTP_MULTICAST_ADDR = {0x01, 0x1b, 0x19, 0 , 0, 0};$/;"	v
PTP_PASSIVE	PTPWRd/constants.h	/^	PTP_PASSIVE,		PTP_UNCALIBRATED,	PTP_SLAVE$/;"	e	enum:__anon24
PTP_PRE_MASTER	PTPWRd/constants.h	/^	PTP_LISTENING,		PTP_PRE_MASTER,		PTP_MASTER,$/;"	e	enum:__anon24
PTP_SLAVE	PTPWRd/constants.h	/^	PTP_PASSIVE,		PTP_UNCALIBRATED,	PTP_SLAVE$/;"	e	enum:__anon24
PTP_UNCALIBRATED	PTPWRd/constants.h	/^	PTP_PASSIVE,		PTP_UNCALIBRATED,	PTP_SLAVE$/;"	e	enum:__anon24
PTP_UNICAST_ADDR	PTPWRd/dep/net.c	/^const mac_addr_t PTP_UNICAST_ADDR   = {0x01, 0x1b, 0x19, 0 , 0, 0};$/;"	v
PTP_UUID_LENGTH	PTPWRd/dep/constants_dep.h	86;"	d
PTYPE_ANNOUNCE	libptpnetif/netif_test.c	18;"	d	file:
PTYPE_ANNOUNCE_RESP	libptpnetif/netif_test.c	19;"	d	file:
PTYPE_CAL_DONE	libptpnetif/netif_test.c	23;"	d	file:
PTYPE_CAL_REQ	libptpnetif/netif_test.c	22;"	d	file:
PTYPE_DELAY_REQ	libptpnetif/netif_test.c	27;"	d	file:
PTYPE_DELAY_RESP	libptpnetif/netif_test.c	28;"	d	file:
PTYPE_LOCK_ACK	libptpnetif/netif_test.c	21;"	d	file:
PTYPE_LOCK_REQUEST	libptpnetif/netif_test.c	20;"	d	file:
PTYPE_REMOTE_RESET	libptpnetif/netif_test.c	24;"	d	file:
PTYPE_SYNC	libptpnetif/netif_test.c	25;"	d	file:
PTYPE_SYNC_FOLLOWUP	libptpnetif/netif_test.c	26;"	d	file:
PdelayFollowupHeader	PTPWRd/datatypes.h	/^    MsgHeader       PdelayFollowupHeader;$/;"	m	struct:__anon58	access:public
PdelayReqHeader	PTPWRd/datatypes.h	/^	MsgHeader	    PdelayReqHeader;$/;"	m	struct:__anon58	access:public
PdelayRespHeader	PTPWRd/datatypes.h	/^    MsgHeader       PdelayRespHeader;$/;"	m	struct:__anon58	access:public
PortAdress	PTPWRd/datatypes.h	/^} PortAdress;$/;"	t	typeref:struct:__anon38
PortIdentity	PTPWRd/datatypes.h	/^} PortIdentity;$/;"	t	typeref:struct:__anon37
PtpClockDS	PTPWRd/datatypes.h	/^} PtpClockDS;$/;"	t	typeref:struct:__anon57
PtpPortDS	PTPWRd/datatypes.h	/^} PtpPortDS;$/;"	t	typeref:struct:__anon58
RESPONSE	PTPWRd/constants.h	/^	RESPONSE,$/;"	e	enum:__anon29
RE_INIT	PTPWRd/constants.h	/^	RE_INIT,$/;"	e	enum:__anon33
RunTimeOpts	PTPWRd/datatypes.h	/^} RunTimeOpts;$/;"	t	typeref:struct:__anon61
SAY	Makefile	/^   SAY := $(shell echo "CPU is freestanding" > \/dev\/tty)$/;"	m
SAY	Makefile	/^   SAY := $(shell echo "CPU is hosted" > \/dev\/tty)$/;"	m
SCM_TIMESTAMPING	compat.h	7;"	d
SCREEN_BUFSZ	PTPWRd/dep/constants_dep.h	102;"	d
SCREEN_MAXSZ	PTPWRd/dep/constants_dep.h	103;"	d
SECONDARY_SLAVE	PTPWRd/constants.h	/^	SECONDARY_SLAVE ,$/;"	e	enum:__anon32
SEND_CALIBRATION_PATTERN	PTPWRd/constants.h	154;"	d
SET	PTPWRd/constants.h	/^	SET,$/;"	e	enum:__anon29
SIGNALING	PTPWRd/constants.h	/^	SIGNALING,$/;"	e	enum:__anon25
SLAVE	PTPWRd/constants.h	/^	SLAVE$/;"	e	enum:__anon21
SLAVE_ONLY	PTPWRd/constants.h	68;"	d
SLAVE_PRESENT	PTPWRd/constants.h	/^	SLAVE_PRESENT	= 0x1000,$/;"	e	enum:__anon31
SLAVE_PRIORITY_0	libptpnetif/ptpd_netif.h	33;"	d
SLAVE_PRIORITY_1	libptpnetif/ptpd_netif.h	34;"	d
SLAVE_PRIORITY_2	libptpnetif/ptpd_netif.h	35;"	d
SLAVE_PRIORITY_3	libptpnetif/ptpd_netif.h	36;"	d
SLAVE_PRIORITY_4	libptpnetif/ptpd_netif.h	37;"	d
SOCKQ_SIZE	libposix/wrapper_private.h	7;"	d
SOCKS_NUM	libposix/wrapper_private.h	9;"	d
SO_TIMESTAMPING	compat.h	6;"	d
STRIP	Makefile	/^STRIP           = $(CROSS_COMPILE)strip$/;"	m
ST_INIT	libptpnetif/netif_test.c	50;"	d	file:
ST_M_CALIBRATE	libptpnetif/netif_test.c	54;"	d	file:
ST_M_RX_CALIBRATE	libptpnetif/netif_test.c	64;"	d	file:
ST_M_SEND_ANNOUNCE	libptpnetif/netif_test.c	53;"	d	file:
ST_M_SEND_SYNC	libptpnetif/netif_test.c	60;"	d	file:
ST_M_TX_CALIBRATE	libptpnetif/netif_test.c	62;"	d	file:
ST_M_WAIT_CALIBRATE	libptpnetif/netif_test.c	58;"	d	file:
ST_M_WAIT_COMMAND	libptpnetif/netif_test.c	63;"	d	file:
ST_M_WAIT_SLAVE_LOCK	libptpnetif/netif_test.c	57;"	d	file:
ST_S_CALIBRATE	libptpnetif/netif_test.c	55;"	d	file:
ST_S_RX_CALIBRATE	libptpnetif/netif_test.c	66;"	d	file:
ST_S_START_CALIBRATION	libptpnetif/netif_test.c	67;"	d	file:
ST_S_TX_CALIBRATE	libptpnetif/netif_test.c	65;"	d	file:
ST_S_WAIT_ANNOUNCE	libptpnetif/netif_test.c	52;"	d	file:
ST_S_WAIT_DELAY_RESP	libptpnetif/netif_test.c	69;"	d	file:
ST_S_WAIT_FOLLOWUP	libptpnetif/netif_test.c	61;"	d	file:
ST_S_WAIT_LOCK	libptpnetif/netif_test.c	59;"	d	file:
ST_S_WAIT_SYNC	libptpnetif/netif_test.c	56;"	d	file:
ST_WAIT_LINK	libptpnetif/netif_test.c	51;"	d	file:
SUBDOMAIN_ADDRESS_LENGTH	PTPWRd/dep/constants_dep.h	84;"	d
SYNC	PTPWRd/constants.h	/^	SYNC=0x0,$/;"	e	enum:__anon25
SYNC_INTERVAL	libptpnetif/netif_test.c	105;"	d	file:
SYNC_INTERVAL_TIMER	PTPWRd/constants.h	/^	SYNC_INTERVAL_TIMER,\/**<\\brief Timer handling Interval between master sends two Syncs messages *\/$/;"	e	enum:__anon23
SYNC_LENGTH	PTPWRd/constants.h	77;"	d
TARGETS	Makefile	/^   TARGETS :=  ptpd #ptpd-freestanding.o$/;"	m
TARGETS	Makefile	/^   TARGETS := ptpd-freestanding$/;"	m
TERRESTRIAL_RADIO	PTPWRd/constants.h	/^	TERRESTRIAL_RADIO=0x30,$/;"	e	enum:__anon20
TIMER_ARRAY_SIZE	PTPWRd/constants.h	/^	TIMER_ARRAY_SIZE  \/* this one is non-spec *\/$/;"	e	enum:__anon23
TLV	PTPWRd/datatypes.h	/^} TLV;$/;"	t	typeref:struct:__anon40
TLV_TYPE_ORG_EXTENSION	PTPWRd/constants.h	141;"	d
TOPDIR	Makefile	/^TOPDIR=$(shell \/bin\/pwd)$/;"	m
TRACE_ALL	PTPWRd/dep/trace.h	24;"	d
TRACE_ARITH	PTPWRd/dep/trace.h	19;"	d
TRACE_BMC	PTPWRd/dep/trace.h	15;"	d
TRACE_ERROR	PTPWRd/dep/trace.h	16;"	d
TRACE_MSG	PTPWRd/dep/trace.h	12;"	d
TRACE_NET	PTPWRd/dep/trace.h	11;"	d
TRACE_PROTO	PTPWRd/dep/trace.h	9;"	d
TRACE_PTPD_MAIN	PTPWRd/dep/trace.h	20;"	d
TRACE_SERVO	PTPWRd/dep/trace.h	14;"	d
TRACE_SPECIAL_DBG	PTPWRd/dep/trace.h	21;"	d
TRACE_STARTUP	PTPWRd/dep/trace.h	18;"	d
TRACE_SYS	PTPWRd/dep/trace.h	13;"	d
TRACE_WRPC	PTPWRd/dep/trace.h	22;"	d
TRACE_WR_IPC	PTPWRd/dep/trace.h	17;"	d
TRACE_WR_PROTO	PTPWRd/dep/trace.h	10;"	d
TRUE	PTPWRd/dep/datatypes_dep.h	/^typedef enum {FALSE=0, TRUE} Boolean;$/;"	e	enum:__anon10
TWO_STEP_FLAG	PTPWRd/constants.h	67;"	d
TimeInternal	PTPWRd/datatypes.h	/^} TimeInternal;$/;"	t	typeref:struct:__anon54
TimeInterval	PTPWRd/datatypes.h	/^} TimeInterval;$/;"	t	typeref:struct:__anon34
Timestamp	PTPWRd/datatypes.h	/^} Timestamp;$/;"	t	typeref:struct:__anon36
UDP_IPV4	PTPWRd/constants.h	/^	UDP_IPV4=1,$/;"	e	enum:__anon19
UDP_IPV6	PTPWRd/constants.h	/^	UDP_IPV6,IEE_802_3,$/;"	e	enum:__anon19
UInteger16	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned short UInteger16;$/;"	t
UInteger32	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned int UInteger32;$/;"	t
UInteger4	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned char UInteger4;$/;"	t
UInteger48	PTPWRd/dep/datatypes_dep.h	/^} UInteger48;$/;"	t	typeref:struct:__anon11
UInteger64	PTPWRd/dep/datatypes_dep.h	/^} UInteger64;$/;"	t	typeref:struct:__anon13
UInteger8	PTPWRd/dep/datatypes_dep.h	/^typedef unsigned char UInteger8;$/;"	t
UNCALIBRATED	PTPWRd/constants.h	/^	UNCALIBRATED,$/;"	e	enum:__anon21
VERSION_PTP	PTPWRd/constants.h	66;"	d
WRSW_HAL_SERVER_ADDR	wrsw_hal/hal_exports.h	8;"	d
WRS_CALIBRATED	PTPWRd/constants.h	/^	WRS_CALIBRATION,  WRS_CALIBRATED,  WRS_RESP_CALIB_REQ ,WRS_WR_LINK_ON,$/;"	e	enum:__anon30
WRS_CALIBRATION	PTPWRd/constants.h	/^	WRS_CALIBRATION,  WRS_CALIBRATED,  WRS_RESP_CALIB_REQ ,WRS_WR_LINK_ON,$/;"	e	enum:__anon30
WRS_CALIBRATION_1	PTPWRd/constants.h	/^	WRS_CALIBRATION_1,$/;"	e	enum:__anon30
WRS_CALIBRATION_2	PTPWRd/constants.h	/^	WRS_CALIBRATION_2,$/;"	e	enum:__anon30
WRS_CALIBRATION_3	PTPWRd/constants.h	/^	WRS_CALIBRATION_3,$/;"	e	enum:__anon30
WRS_CALIBRATION_4	PTPWRd/constants.h	/^	WRS_CALIBRATION_4,$/;"	e	enum:__anon30
WRS_CALIBRATION_5	PTPWRd/constants.h	/^	WRS_CALIBRATION_5,$/;"	e	enum:__anon30
WRS_CALIBRATION_6	PTPWRd/constants.h	/^	WRS_CALIBRATION_6,$/;"	e	enum:__anon30
WRS_CALIBRATION_7	PTPWRd/constants.h	/^	WRS_CALIBRATION_7,$/;"	e	enum:__anon30
WRS_CALIBRATION_8	PTPWRd/constants.h	/^	WRS_CALIBRATION_8,$/;"	e	enum:__anon30
WRS_IDLE	PTPWRd/constants.h	/^	WRS_IDLE,$/;"	e	enum:__anon30
WRS_LOCKED	PTPWRd/constants.h	/^	WRS_PRESENT = 0,  WRS_S_LOCK, WRS_M_LOCK,  WRS_LOCKED,$/;"	e	enum:__anon30
WRS_M_LOCK	PTPWRd/constants.h	/^	WRS_PRESENT = 0,  WRS_S_LOCK, WRS_M_LOCK,  WRS_LOCKED,$/;"	e	enum:__anon30
WRS_PRESENT	PTPWRd/constants.h	/^	WRS_PRESENT = 0,  WRS_S_LOCK, WRS_M_LOCK,  WRS_LOCKED,$/;"	e	enum:__anon30
WRS_RESP_CALIB_REQ	PTPWRd/constants.h	/^	WRS_CALIBRATION,  WRS_CALIBRATED,  WRS_RESP_CALIB_REQ ,WRS_WR_LINK_ON,$/;"	e	enum:__anon30
WRS_RESP_CALIB_REQ_1	PTPWRd/constants.h	/^	WRS_RESP_CALIB_REQ_1,$/;"	e	enum:__anon30
WRS_RESP_CALIB_REQ_2	PTPWRd/constants.h	/^	WRS_RESP_CALIB_REQ_2,$/;"	e	enum:__anon30
WRS_RESP_CALIB_REQ_3	PTPWRd/constants.h	/^	WRS_RESP_CALIB_REQ_3,$/;"	e	enum:__anon30
WRS_S_LOCK	PTPWRd/constants.h	/^	WRS_PRESENT = 0,  WRS_S_LOCK, WRS_M_LOCK,  WRS_LOCKED,$/;"	e	enum:__anon30
WRS_S_LOCK_1	PTPWRd/constants.h	/^	WRS_S_LOCK_1,$/;"	e	enum:__anon30
WRS_S_LOCK_2	PTPWRd/constants.h	/^	WRS_S_LOCK_2,$/;"	e	enum:__anon30
WRS_WR_LINK_ON	PTPWRd/constants.h	/^	WRS_CALIBRATION,  WRS_CALIBRATED,  WRS_RESP_CALIB_REQ ,WRS_WR_LINK_ON,$/;"	e	enum:__anon30
WR_ANNOUNCE_LENGTH	PTPWRd/constants.h	119;"	d
WR_ANNOUNCE_TLV_LENGTH	PTPWRd/constants.h	117;"	d
WR_CMD	PTPWRd/constants.h	/^	WR_CMD, \/\/White Rabbit$/;"	e	enum:__anon29
WR_DEFAULT_CAL_PATTERN	PTPWRd/constants.h	108;"	d
WR_DEFAULT_CAL_PATTERN_LEN	PTPWRd/constants.h	109;"	d
WR_DEFAULT_CAL_PERIOD	PTPWRd/constants.h	107;"	d
WR_DEFAULT_INIT_REPEAT	PTPWRd/constants.h	113;"	d
WR_DEFAULT_PHY_CALIBRATION_REQUIRED	PTPWRd/constants.h	152;"	d
WR_DEFAULT_STATE_REPEAT	PTPWRd/constants.h	112;"	d
WR_DEFAULT_STATE_TIMEOUT_MS	PTPWRd/constants.h	111;"	d
WR_IS_CALIBRATED	PTPWRd/constants.h	100;"	d
WR_IS_WR_MODE	PTPWRd/constants.h	101;"	d
WR_MANAGEMENT_LENGTH	PTPWRd/constants.h	121;"	d
WR_MANAGEMENT_TLV_LENGTH	PTPWRd/constants.h	120;"	d
WR_MASTER	PTPWRd/constants.h	/^	WR_MASTER = PTPD_NETIF_TX, \/\/ just for convenient useage with ptpd_netif interface$/;"	e	enum:__anon28
WR_MASTER_CLOCK_CLASS	PTPWRd/constants.h	135;"	d
WR_MASTER_ONLY_CLOCK_CLASS	PTPWRd/constants.h	137;"	d
WR_MASTER_PRIORITY1	PTPWRd/constants.h	106;"	d
WR_MODE_AUTO	PTPWRd/constants.h	/^	WR_MODE_AUTO= 0x4, \/\/ only for ptpx - not in the spec$/;"	e	enum:__anon27
WR_MODE_ON	PTPWRd/constants.h	/^	WR_MODE_ON,	$/;"	e	enum:__anon31
WR_M_AND_S	PTPWRd/constants.h	/^	WR_M_AND_S  = 0x3,$/;"	e	enum:__anon27
WR_M_ONLY	PTPWRd/constants.h	/^	WR_M_ONLY   = 0x1,$/;"	e	enum:__anon27
WR_NODE	PTPWRd/constants.h	99;"	d
WR_NODE_MODE	PTPWRd/constants.h	102;"	d
WR_PORT_NUMBER	PTPWRd/constants.h	132;"	d
WR_PRIORITY1	PTPWRd/constants.h	143;"	d
WR_PROTOCOL_H_	PTPWRd/wr_protocol.h	2;"	d
WR_SERVO_OFFSET_STABILITY_THRESHOLD	PTPWRd/dep/wr_servo.c	26;"	d	file:
WR_SIGNALING_MSG_BASE_LENGTH	PTPWRd/constants.h	149;"	d
WR_SLAVE	PTPWRd/constants.h	/^	WR_SLAVE  = PTPD_NETIF_RX, \/\/ just for convenient useage with ptpd_netif interface$/;"	e	enum:__anon28
WR_SLAVE_CLOCK_CLASS	PTPWRd/constants.h	134;"	d
WR_SYNC_NSEC	PTPWRd/dep/wr_servo.c	19;"	d	file:
WR_SYNC_NSEC	libptpnetif/netif_test.c	494;"	d	file:
WR_SYNC_PHASE	PTPWRd/dep/wr_servo.c	21;"	d	file:
WR_SYNC_PHASE	libptpnetif/netif_test.c	496;"	d	file:
WR_SYNC_TAI	PTPWRd/dep/wr_servo.c	20;"	d	file:
WR_SYNC_TAI	libptpnetif/netif_test.c	495;"	d	file:
WR_S_ONLY	PTPWRd/constants.h	/^	WR_S_ONLY   = 0x2, $/;"	e	enum:__anon27
WR_TIMER_ARRAY_SIZE	PTPWRd/constants.h	/^	WR_TIMER_ARRAY_SIZE, \/\/number of states which has timeouts$/;"	e	enum:__anon30
WR_TLV_MAGIC_NUMBER	PTPWRd/constants.h	146;"	d
WR_TLV_ORGANIZATION_ID	PTPWRd/constants.h	145;"	d
WR_TLV_TYPE	PTPWRd/constants.h	104;"	d
WR_TLV_WR_VERSION_NUMBER	PTPWRd/constants.h	147;"	d
WR_TRACK_PHASE	PTPWRd/dep/wr_servo.c	22;"	d	file:
WR_TRACK_PHASE	libptpnetif/netif_test.c	497;"	d	file:
WR_WAIT_OFFSET_STABLE	PTPWRd/dep/wr_servo.c	24;"	d	file:
WR_WAIT_SYNC_IDLE	PTPWRd/dep/wr_servo.c	23;"	d	file:
WR_WAIT_SYNC_IDLE	libptpnetif/netif_test.c	498;"	d	file:
ZERO_ADDR	PTPWRd/dep/net.c	/^const mac_addr_t ZERO_ADDR          = {0x00, 0x00, 0x00, 0x00, 0x001, 0x00};$/;"	v
_PTPD_DPRINTF	PTPWRd/dep/trace.h	29;"	d
_PTPD_DPRINTF	PTPWRd/dep/trace.h	31;"	d
__HAL_CLIENT_H	libptpnetif/hal_client.h	3;"	d
__HAL_EXPORTS_H	wrsw_hal/hal_exports.h	2;"	d
__MINIPC_ARG_ENCODE	libminipc/minipc.h	48;"	d
__MINIPC_H__	libminipc/minipc.h	14;"	d
__MINIPC_INT_H__	libminipc/minipc-int.h	14;"	d
__PTPD_EXPORTS_H	PTPWRd/ptpd_exports.h	2;"	d
__PTPD_NETIF_H	libptpnetif/ptpd_netif.h	4;"	d
__PTPD_TRACE_H	PTPWRd/dep/trace.h	2;"	d
__PTPD_WRAPPERS_H__	libposix/ptpd-wrappers.h	5;"	d
__WRAPPER_PRIVATE_H	libposix/wrapper_private.h	4;"	d
__anon11::lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon11	access:public
__anon11::msb	PTPWRd/dep/datatypes_dep.h	/^	unsigned short msb;$/;"	m	struct:__anon11	access:public
__anon12::lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon12	access:public
__anon12::msb	PTPWRd/dep/datatypes_dep.h	/^	int msb;$/;"	m	struct:__anon12	access:public
__anon13::lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon13	access:public
__anon13::msb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int msb;$/;"	m	struct:__anon13	access:public
__anon14::nsec_prev	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon14	access:public
__anon14::y	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon14	access:public
__anon15::nsec_prev	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon15	access:public
__anon15::s_exp	PTPWRd/dep/datatypes_dep.h	/^	Integer32  s_exp;$/;"	m	struct:__anon15	access:public
__anon15::y	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon15	access:public
__anon16::ifaceName	PTPWRd/dep/datatypes_dep.h	/^	char ifaceName[IFACE_NAME_LENGTH];$/;"	m	struct:__anon16	access:public
__anon16::multicastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t multicastAddr;$/;"	m	struct:__anon16	access:public
__anon16::peerMulticastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t peerMulticastAddr;$/;"	m	struct:__anon16	access:public
__anon16::selfAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t selfAddr;$/;"	m	struct:__anon16	access:public
__anon16::unicastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t unicastAddr;$/;"	m	struct:__anon16	access:public
__anon16::wrSock	PTPWRd/dep/datatypes_dep.h	/^	wr_socket_t *wrSock;$/;"	m	struct:__anon16	access:public
__anon17::clock_period_ps	PTPWRd/dep/datatypes_dep.h	/^	int32_t clock_period_ps;$/;"	m	struct:__anon17	access:public
__anon17::cur_setpoint	PTPWRd/dep/datatypes_dep.h	/^	int32_t cur_setpoint;$/;"	m	struct:__anon17	access:public
__anon17::delta_ms	PTPWRd/dep/datatypes_dep.h	/^	int64_t delta_ms;$/;"	m	struct:__anon17	access:public
__anon17::delta_ms_prev	PTPWRd/dep/datatypes_dep.h	/^	int64_t delta_ms_prev;$/;"	m	struct:__anon17	access:public
__anon17::delta_rx_m	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_rx_m;$/;"	m	struct:__anon17	access:public
__anon17::delta_rx_s	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_rx_s;$/;"	m	struct:__anon17	access:public
__anon17::delta_tx_m	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_tx_m;$/;"	m	struct:__anon17	access:public
__anon17::delta_tx_s	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_tx_s;$/;"	m	struct:__anon17	access:public
__anon17::fiber_fix_alpha	PTPWRd/dep/datatypes_dep.h	/^	int32_t fiber_fix_alpha;$/;"	m	struct:__anon17	access:public
__anon17::if_name	PTPWRd/dep/datatypes_dep.h	/^	char if_name[16];$/;"	m	struct:__anon17	access:public
__anon17::last_tics	PTPWRd/dep/datatypes_dep.h	/^	uint64_t last_tics;$/;"	m	struct:__anon17	access:public
__anon17::missed_iters	PTPWRd/dep/datatypes_dep.h	/^	int missed_iters;$/;"	m	struct:__anon17	access:public
__anon17::mu	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t mu;$/;"	m	struct:__anon17	access:public
__anon17::next_state	PTPWRd/dep/datatypes_dep.h	/^	int next_state;$/;"	m	struct:__anon17	access:public
__anon17::nsec_offset	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t nsec_offset;$/;"	m	struct:__anon17	access:public
__anon17::prev_t4	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t prev_t4;$/;"	m	struct:__anon17	access:public
__anon17::state	PTPWRd/dep/datatypes_dep.h	/^	int state;$/;"	m	struct:__anon17	access:public
__anon17::t1	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
__anon17::t2	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
__anon17::t3	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
__anon17::t4	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
__anon1::ethertype	libptpnetif/ptpd_netif.h	/^    uint16_t ethertype;$/;"	m	struct:__anon1	access:public
__anon1::family	libptpnetif/ptpd_netif.h	/^    int family;$/;"	m	struct:__anon1	access:public
__anon1::if_name	libptpnetif/ptpd_netif.h	/^    char if_name[IFACE_NAME_LEN];$/;"	m	struct:__anon1	access:public
__anon1::ip	libptpnetif/ptpd_netif.h	/^    ipv4_addr_t ip;$/;"	m	struct:__anon1	access:public
__anon1::mac	libptpnetif/ptpd_netif.h	/^    mac_addr_t mac;$/;"	m	struct:__anon1	access:public
__anon1::mac_dest	libptpnetif/ptpd_netif.h	/^    mac_addr_t mac_dest;$/;"	m	struct:__anon1	access:public
__anon1::physical_port	libptpnetif/ptpd_netif.h	/^    uint16_t physical_port;$/;"	m	struct:__anon1	access:public
__anon1::port	libptpnetif/ptpd_netif.h	/^    uint16_t port;$/;"	m	struct:__anon1	access:public
__anon2::__anon3::master_delta_rx	libptpnetif/netif_test.c	/^    uint32_t master_delta_rx;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon3::master_delta_tx	libptpnetif/netif_test.c	/^    uint32_t master_delta_tx;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon3::t1	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon3::t2	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon3::t3	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon3::t4	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
__anon2::__anon4::is_master	libptpnetif/netif_test.c	/^    int is_master;$/;"	m	struct:__anon2::__anon4	file:	access:public
__anon2::__anon5::ok	libptpnetif/netif_test.c	/^    int ok;$/;"	m	struct:__anon2::__anon5	file:	access:public
__anon2::announce	libptpnetif/netif_test.c	/^  } announce;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon4	file:	access:public
__anon2::announce_resp	libptpnetif/netif_test.c	/^  } announce_resp;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon5	file:	access:public
__anon2::delay	libptpnetif/netif_test.c	/^  } delay;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon3	file:	access:public
__anon2::ptype	libptpnetif/netif_test.c	/^  int ptype;$/;"	m	struct:__anon2	file:	access:public
__anon2::seq	libptpnetif/netif_test.c	/^  int seq;$/;"	m	struct:__anon2	file:	access:public
__anon34::scaledNanoseconds	PTPWRd/datatypes.h	/^	Integer64 scaledNanoseconds;$/;"	m	struct:__anon34	access:public
__anon35::scaledPicoseconds	PTPWRd/datatypes.h	/^	UInteger64 scaledPicoseconds;$/;"	m	struct:__anon35	access:public
__anon36::nanosecondsField	PTPWRd/datatypes.h	/^	UInteger32 nanosecondsField;$/;"	m	struct:__anon36	access:public
__anon36::secondsField	PTPWRd/datatypes.h	/^	UInteger48 secondsField;$/;"	m	struct:__anon36	access:public
__anon37::clockIdentity	PTPWRd/datatypes.h	/^	ClockIdentity clockIdentity;$/;"	m	struct:__anon37	access:public
__anon37::portNumber	PTPWRd/datatypes.h	/^	UInteger16 portNumber;$/;"	m	struct:__anon37	access:public
__anon38::adressField	PTPWRd/datatypes.h	/^	Octet* adressField;$/;"	m	struct:__anon38	access:public
__anon38::adressLength	PTPWRd/datatypes.h	/^	UInteger16 adressLength;$/;"	m	struct:__anon38	access:public
__anon38::networkProtocol	PTPWRd/datatypes.h	/^	Enumeration16 networkProtocol;$/;"	m	struct:__anon38	access:public
__anon39::clockAccuracy	PTPWRd/datatypes.h	/^	Enumeration8 clockAccuracy;$/;"	m	struct:__anon39	access:public
__anon39::clockClass	PTPWRd/datatypes.h	/^	UInteger8 clockClass;$/;"	m	struct:__anon39	access:public
__anon39::offsetScaledLogVariance	PTPWRd/datatypes.h	/^	UInteger16 offsetScaledLogVariance;$/;"	m	struct:__anon39	access:public
__anon40::lengthField	PTPWRd/datatypes.h	/^	UInteger16 lengthField;$/;"	m	struct:__anon40	access:public
__anon40::tlvType	PTPWRd/datatypes.h	/^	Enumeration16 tlvType;$/;"	m	struct:__anon40	access:public
__anon40::valueField	PTPWRd/datatypes.h	/^	Octet* valueField;$/;"	m	struct:__anon40	access:public
__anon41::lengthField	PTPWRd/datatypes.h	/^	UInteger8 lengthField;$/;"	m	struct:__anon41	access:public
__anon41::textField	PTPWRd/datatypes.h	/^	Octet* textField;$/;"	m	struct:__anon41	access:public
__anon42::faultDescription	PTPWRd/datatypes.h	/^	PTPText faultDescription;$/;"	m	struct:__anon42	access:public
__anon42::faultName	PTPWRd/datatypes.h	/^	PTPText faultName;$/;"	m	struct:__anon42	access:public
__anon42::faultRecordLength	PTPWRd/datatypes.h	/^	UInteger16 faultRecordLength;$/;"	m	struct:__anon42	access:public
__anon42::faultTime	PTPWRd/datatypes.h	/^	Timestamp faultTime;$/;"	m	struct:__anon42	access:public
__anon42::faultValue	PTPWRd/datatypes.h	/^	PTPText faultValue;$/;"	m	struct:__anon42	access:public
__anon42::severityCode	PTPWRd/datatypes.h	/^	Enumeration8 severityCode;$/;"	m	struct:__anon42	access:public
__anon43::controlField	PTPWRd/datatypes.h	/^	UInteger8 controlField;$/;"	m	struct:__anon43	access:public
__anon43::correctionfield	PTPWRd/datatypes.h	/^	Integer64 correctionfield;$/;"	m	struct:__anon43	access:public
__anon43::domainNumber	PTPWRd/datatypes.h	/^	UInteger8 domainNumber;$/;"	m	struct:__anon43	access:public
__anon43::flagField	PTPWRd/datatypes.h	/^	Octet flagField[2];$/;"	m	struct:__anon43	access:public
__anon43::logMessageInterval	PTPWRd/datatypes.h	/^	Integer8 logMessageInterval;$/;"	m	struct:__anon43	access:public
__anon43::messageLength	PTPWRd/datatypes.h	/^	UInteger16 messageLength;$/;"	m	struct:__anon43	access:public
__anon43::messageType	PTPWRd/datatypes.h	/^	Enumeration4 messageType;$/;"	m	struct:__anon43	access:public
__anon43::sequenceId	PTPWRd/datatypes.h	/^	UInteger16 sequenceId;$/;"	m	struct:__anon43	access:public
__anon43::sourcePortIdentity	PTPWRd/datatypes.h	/^	PortIdentity sourcePortIdentity;$/;"	m	struct:__anon43	access:public
__anon43::transportSpecific	PTPWRd/datatypes.h	/^	Nibble transportSpecific;$/;"	m	struct:__anon43	access:public
__anon43::versionPTP	PTPWRd/datatypes.h	/^	UInteger4 versionPTP;$/;"	m	struct:__anon43	access:public
__anon44::currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16 currentUtcOffset;$/;"	m	struct:__anon44	access:public
__anon44::grandmasterClockQuality	PTPWRd/datatypes.h	/^	ClockQuality grandmasterClockQuality;$/;"	m	struct:__anon44	access:public
__anon44::grandmasterIdentity	PTPWRd/datatypes.h	/^	ClockIdentity grandmasterIdentity;$/;"	m	struct:__anon44	access:public
__anon44::grandmasterPriority1	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority1;$/;"	m	struct:__anon44	access:public
__anon44::grandmasterPriority2	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority2;$/;"	m	struct:__anon44	access:public
__anon44::originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon44	access:public
__anon44::stepsRemoved	PTPWRd/datatypes.h	/^	UInteger16 stepsRemoved;$/;"	m	struct:__anon44	access:public
__anon44::timeSource	PTPWRd/datatypes.h	/^	Enumeration8 timeSource;$/;"	m	struct:__anon44	access:public
__anon44::wr_flags	PTPWRd/datatypes.h	/^	UInteger8 wr_flags;$/;"	m	struct:__anon44	access:public
__anon45::originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon45	access:public
__anon46::originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon46	access:public
__anon47::receiveTimestamp	PTPWRd/datatypes.h	/^	Timestamp receiveTimestamp;$/;"	m	struct:__anon47	access:public
__anon47::requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon47	access:public
__anon48::preciseOriginTimestamp	PTPWRd/datatypes.h	/^	Timestamp preciseOriginTimestamp;$/;"	m	struct:__anon48	access:public
__anon49::originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon49	access:public
__anon50::requestReceiptTimestamp	PTPWRd/datatypes.h	/^	Timestamp requestReceiptTimestamp;$/;"	m	struct:__anon50	access:public
__anon50::requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon50	access:public
__anon51::requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon51	access:public
__anon51::responseOriginTimestamp	PTPWRd/datatypes.h	/^	Timestamp responseOriginTimestamp;$/;"	m	struct:__anon51	access:public
__anon52::targetPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity targetPortIdentity;$/;"	m	struct:__anon52	access:public
__anon52::tlv	PTPWRd/datatypes.h	/^	char* tlv;$/;"	m	struct:__anon52	access:public
__anon53::actionField	PTPWRd/datatypes.h	/^	Enumeration4 actionField;$/;"	m	struct:__anon53	access:public
__anon53::boundaryHops	PTPWRd/datatypes.h	/^	UInteger8 boundaryHops;$/;"	m	struct:__anon53	access:public
__anon53::startingBoundaryHops	PTPWRd/datatypes.h	/^	UInteger8 startingBoundaryHops;$/;"	m	struct:__anon53	access:public
__anon53::targetPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity targetPortIdentity;$/;"	m	struct:__anon53	access:public
__anon53::tlv	PTPWRd/datatypes.h	/^	char* tlv;$/;"	m	struct:__anon53	access:public
__anon54::correct	PTPWRd/datatypes.h	/^	int correct;$/;"	m	struct:__anon54	access:public
__anon54::nanoseconds	PTPWRd/datatypes.h	/^	Integer32 nanoseconds;$/;"	m	struct:__anon54	access:public
__anon54::phase	PTPWRd/datatypes.h	/^	Integer32 phase;$/;"	m	struct:__anon54	access:public
__anon54::seconds	PTPWRd/datatypes.h	/^	Integer32 seconds;$/;"	m	struct:__anon54	access:public
__anon55::interval	PTPWRd/datatypes.h	/^	int interval;$/;"	m	struct:__anon55	access:public
__anon55::name	PTPWRd/datatypes.h	/^	char name [16];$/;"	m	struct:__anon55	access:public
__anon55::t_start	PTPWRd/datatypes.h	/^	unsigned long long t_start;$/;"	m	struct:__anon55	access:public
__anon56::announce	PTPWRd/datatypes.h	/^	MsgAnnounce  announce;$/;"	m	struct:__anon56	access:public
__anon56::foreignMasterAnnounceMessages	PTPWRd/datatypes.h	/^	UInteger16 foreignMasterAnnounceMessages;$/;"	m	struct:__anon56	access:public
__anon56::foreignMasterPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity foreignMasterPortIdentity;$/;"	m	struct:__anon56	access:public
__anon56::header	PTPWRd/datatypes.h	/^	MsgHeader    header;$/;"	m	struct:__anon56	access:public
__anon56::receptionPortNumber	PTPWRd/datatypes.h	/^	UInteger16 receptionPortNumber;$/;"	m	struct:__anon56	access:public
__anon57::Ebest	PTPWRd/datatypes.h	/^	Integer16  Ebest;$/;"	m	struct:__anon57	access:public
__anon57::bestForeign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *bestForeign;$/;"	m	struct:__anon57	access:public
__anon57::clockClassValidityTimeout	PTPWRd/datatypes.h	/^	UInteger8 clockClassValidityTimeout;$/;"	m	struct:__anon57	access:public
__anon57::clockClassValidityTimer	PTPWRd/datatypes.h	/^	IntervalTimer clockClassValidityTimer;$/;"	m	struct:__anon57	access:public
__anon57::clockQuality	PTPWRd/datatypes.h	/^	ClockQuality clockQuality;$/;"	m	struct:__anon57	access:public
__anon57::currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16 currentUtcOffset;$/;"	m	struct:__anon57	access:public
__anon57::currentUtcOffsetValid	PTPWRd/datatypes.h	/^	Boolean currentUtcOffsetValid;$/;"	m	struct:__anon57	access:public
__anon57::domainNumber	PTPWRd/datatypes.h	/^	UInteger8 domainNumber;$/;"	m	struct:__anon57	access:public
__anon57::frequencyTraceable	PTPWRd/datatypes.h	/^	Boolean frequencyTraceable;$/;"	m	struct:__anon57	access:public
__anon57::globalStateDecisionEvent	PTPWRd/datatypes.h	/^	Boolean globalStateDecisionEvent;$/;"	m	struct:__anon57	access:public
__anon57::grandmasterClockQuality	PTPWRd/datatypes.h	/^	ClockQuality grandmasterClockQuality;$/;"	m	struct:__anon57	access:public
__anon57::grandmasterIdentity	PTPWRd/datatypes.h	/^	ClockIdentity grandmasterIdentity;$/;"	m	struct:__anon57	access:public
__anon57::grandmasterPriority1	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority1;$/;"	m	struct:__anon57	access:public
__anon57::grandmasterPriority2	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority2;$/;"	m	struct:__anon57	access:public
__anon57::leap59	PTPWRd/datatypes.h	/^	Boolean leap59;$/;"	m	struct:__anon57	access:public
__anon57::leap61	PTPWRd/datatypes.h	/^	Boolean leap61;$/;"	m	struct:__anon57	access:public
__anon57::meanPathDelay	PTPWRd/datatypes.h	/^	TimeInternal meanPathDelay;$/;"	m	struct:__anon57	access:public
__anon57::numberPorts	PTPWRd/datatypes.h	/^	UInteger16 numberPorts;$/;"	m	struct:__anon57	access:public
__anon57::observedParentClockPhaseChangeRate	PTPWRd/datatypes.h	/^	Integer32 observedParentClockPhaseChangeRate;$/;"	m	struct:__anon57	access:public
__anon57::observedParentOffsetScaledLogVariance	PTPWRd/datatypes.h	/^	UInteger16 observedParentOffsetScaledLogVariance;$/;"	m	struct:__anon57	access:public
__anon57::offsetFromMaster	PTPWRd/datatypes.h	/^	TimeInternal offsetFromMaster;$/;"	m	struct:__anon57	access:public
__anon57::parentPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity parentPortIdentity;$/;"	m	struct:__anon57	access:public
__anon57::parentStats	PTPWRd/datatypes.h	/^	Boolean parentStats;$/;"	m	struct:__anon57	access:public
__anon57::primarySlavePortNumber	PTPWRd/datatypes.h	/^	UInteger16 primarySlavePortNumber;$/;"	m	struct:__anon57	access:public
__anon57::priority1	PTPWRd/datatypes.h	/^	UInteger8 priority1;$/;"	m	struct:__anon57	access:public
__anon57::priority2	PTPWRd/datatypes.h	/^	UInteger8 priority2;$/;"	m	struct:__anon57	access:public
__anon57::ptpTimescale	PTPWRd/datatypes.h	/^	Boolean ptpTimescale;$/;"	m	struct:__anon57	access:public
__anon57::secondBestForeign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *secondBestForeign;$/;"	m	struct:__anon57	access:public
__anon57::secondarySlavePortNumber	PTPWRd/datatypes.h	/^	UInteger16 secondarySlavePortNumber;$/;"	m	struct:__anon57	access:public
__anon57::stepsRemoved	PTPWRd/datatypes.h	/^	UInteger16 stepsRemoved;$/;"	m	struct:__anon57	access:public
__anon57::timeSource	PTPWRd/datatypes.h	/^	Enumeration8 timeSource;$/;"	m	struct:__anon57	access:public
__anon57::timeTraceable	PTPWRd/datatypes.h	/^	Boolean timeTraceable;$/;"	m	struct:__anon57	access:public
__anon57::twoStepFlag	PTPWRd/datatypes.h	/^	Boolean twoStepFlag;$/;"	m	struct:__anon57	access:public
__anon58::PdelayFollowupHeader	PTPWRd/datatypes.h	/^    MsgHeader       PdelayFollowupHeader;$/;"	m	struct:__anon58	access:public
__anon58::PdelayReqHeader	PTPWRd/datatypes.h	/^	MsgHeader	    PdelayReqHeader;$/;"	m	struct:__anon58	access:public
__anon58::PdelayRespHeader	PTPWRd/datatypes.h	/^    MsgHeader       PdelayRespHeader;$/;"	m	struct:__anon58	access:public
__anon58::__anon59::announce	PTPWRd/datatypes.h	/^		MsgAnnounce  announce;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::follow	PTPWRd/datatypes.h	/^		MsgFollowUp  follow;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::manage	PTPWRd/datatypes.h	/^		MsgManagement  manage;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::preq	PTPWRd/datatypes.h	/^		MsgPDelayReq  preq;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::presp	PTPWRd/datatypes.h	/^		MsgPDelayResp  presp;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::prespfollow	PTPWRd/datatypes.h	/^		MsgPDelayRespFollowUp  prespfollow;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::req	PTPWRd/datatypes.h	/^		MsgDelayReq  req;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::resp	PTPWRd/datatypes.h	/^		MsgDelayResp resp;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::signaling	PTPWRd/datatypes.h	/^		MsgSignaling signaling;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon59::sync	PTPWRd/datatypes.h	/^		MsgSync  sync;$/;"	m	union:__anon58::__anon59	access:public
__anon58::__anon60::announceInterval	PTPWRd/datatypes.h	/^		IntervalTimer announceInterval;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::__anon60::announceReceipt	PTPWRd/datatypes.h	/^		IntervalTimer announceReceipt;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::__anon60::delayReq	PTPWRd/datatypes.h	/^		IntervalTimer delayReq;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::__anon60::pdelayReq	PTPWRd/datatypes.h	/^		IntervalTimer pdelayReq;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::__anon60::pdelayResp	PTPWRd/datatypes.h	/^        IntervalTimer pdelayResp;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::__anon60::sync	PTPWRd/datatypes.h	/^		IntervalTimer sync;$/;"	m	struct:__anon58::__anon60	access:public
__anon58::announceReceiptTimeout	PTPWRd/datatypes.h	/^	UInteger8 announceReceiptTimeout;$/;"	m	struct:__anon58	access:public
__anon58::calPeriod	PTPWRd/datatypes.h	/^	UInteger32 calPeriod;\/\/[us]$/;"	m	struct:__anon58	access:public
__anon58::calRetry	PTPWRd/datatypes.h	/^	UInteger8 calRetry;$/;"	m	struct:__anon58	access:public
__anon58::calibrated	PTPWRd/datatypes.h	/^	Boolean calibrated;$/;"	m	struct:__anon58	access:public
__anon58::clockIdentity	PTPWRd/datatypes.h	/^	ClockIdentity clockIdentity; \/\/TODO(5): should be in clockDS$/;"	m	struct:__anon58	access:public
__anon58::currentWRstateCnt	PTPWRd/datatypes.h	/^	UInteger8 currentWRstateCnt;$/;"	m	struct:__anon58	access:public
__anon58::current_rx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t current_rx_ts;$/;"	m	struct:__anon58	access:public
__anon58::current_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t current_tx_ts;$/;"	m	struct:__anon58	access:public
__anon58::delayMS	PTPWRd/datatypes.h	/^	TimeInternal    delayMS;$/;"	m	struct:__anon58	access:public
__anon58::delayMechanism	PTPWRd/datatypes.h	/^	Enumeration8 delayMechanism;$/;"	m	struct:__anon58	access:public
__anon58::delayReqHeader	PTPWRd/datatypes.h	/^	MsgHeader		delayReqHeader;$/;"	m	struct:__anon58	access:public
__anon58::delayReq_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t delayReq_tx_ts;  \/\/ t3 S (E2E)$/;"	m	struct:__anon58	access:public
__anon58::delaySM	PTPWRd/datatypes.h	/^	TimeInternal	delaySM;$/;"	m	struct:__anon58	access:public
__anon58::delay_req_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  delay_req_receive_time;$/;"	m	struct:__anon58	access:public
__anon58::delay_req_send_time	PTPWRd/datatypes.h	/^	TimeInternal  delay_req_send_time;$/;"	m	struct:__anon58	access:public
__anon58::deltaRx	PTPWRd/datatypes.h	/^	FixedDelta deltaRx; $/;"	m	struct:__anon58	access:public
__anon58::deltaTx	PTPWRd/datatypes.h	/^	FixedDelta deltaTx; $/;"	m	struct:__anon58	access:public
__anon58::doRestart	PTPWRd/datatypes.h	/^	Boolean doRestart;$/;"	m	struct:__anon58	access:public
__anon58::foreign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *foreign;$/;"	m	struct:__anon58	access:public
__anon58::foreign_record_best	PTPWRd/datatypes.h	/^	Integer16  foreign_record_best;$/;"	m	struct:__anon58	access:public
__anon58::foreign_record_i	PTPWRd/datatypes.h	/^	Integer16  foreign_record_i;$/;"	m	struct:__anon58	access:public
__anon58::isSecondarySlave	PTPWRd/datatypes.h	/^	Boolean isSecondarySlave;$/;"	m	struct:__anon58	access:public
__anon58::lastSyncCorrectionField	PTPWRd/datatypes.h	/^    TimeInternal    lastSyncCorrectionField;$/;"	m	struct:__anon58	access:public
__anon58::linkUP	PTPWRd/datatypes.h	/^	Boolean linkUP;$/;"	m	struct:__anon58	access:public
__anon58::logAnnounceInterval	PTPWRd/datatypes.h	/^	Integer8 logAnnounceInterval;$/;"	m	struct:__anon58	access:public
__anon58::logMinDelayReqInterval	PTPWRd/datatypes.h	/^	Integer8 logMinDelayReqInterval;$/;"	m	struct:__anon58	access:public
__anon58::logMinPdelayReqInterval	PTPWRd/datatypes.h	/^	Integer8 logMinPdelayReqInterval;$/;"	m	struct:__anon58	access:public
__anon58::logSyncInterval	PTPWRd/datatypes.h	/^	Integer8 logSyncInterval;$/;"	m	struct:__anon58	access:public
__anon58::master_to_slave_delay	PTPWRd/datatypes.h	/^	TimeInternal  master_to_slave_delay;$/;"	m	struct:__anon58	access:public
__anon58::max_foreign_records	PTPWRd/datatypes.h	/^	Integer16  max_foreign_records;$/;"	m	struct:__anon58	access:public
__anon58::message_activity	PTPWRd/datatypes.h	/^	Boolean message_activity;$/;"	m	struct:__anon58	access:public
__anon58::msgIbuf	PTPWRd/datatypes.h	/^	Octet msgIbuf[PACKET_SIZE];$/;"	m	struct:__anon58	access:public
__anon58::msgObuf	PTPWRd/datatypes.h	/^	Octet msgObuf[PACKET_SIZE];$/;"	m	struct:__anon58	access:public
__anon58::msgTmp	PTPWRd/datatypes.h	/^	} msgTmp;$/;"	m	struct:__anon58	typeref:union:__anon58::__anon59	access:public
__anon58::msgTmpHeader	PTPWRd/datatypes.h	/^	MsgHeader msgTmpHeader;$/;"	m	struct:__anon58	access:public
__anon58::msgTmpManagementId	PTPWRd/datatypes.h	/^	Enumeration16 msgTmpManagementId;	$/;"	m	struct:__anon58	access:public
__anon58::msgTmpWrMessageID	PTPWRd/datatypes.h	/^	Enumeration16 msgTmpWrMessageID;	$/;"	m	struct:__anon58	access:public
__anon58::netPath	PTPWRd/datatypes.h	/^	NetPath netPath;$/;"	m	struct:__anon58	access:public
__anon58::number_foreign_records	PTPWRd/datatypes.h	/^	UInteger16 number_foreign_records;$/;"	m	struct:__anon58	access:public
__anon58::observed_drift	PTPWRd/datatypes.h	/^	Integer32 	observed_drift;$/;"	m	struct:__anon58	access:public
__anon58::ofm_filt	PTPWRd/datatypes.h	/^	offset_from_master_filter  ofm_filt;$/;"	m	struct:__anon58	access:public
__anon58::otherNodeCalPeriod	PTPWRd/datatypes.h	/^	UInteger32 otherNodeCalPeriod;   $/;"	m	struct:__anon58	access:public
__anon58::otherNodeCalRetry	PTPWRd/datatypes.h	/^	UInteger8 otherNodeCalRetry;$/;"	m	struct:__anon58	access:public
__anon58::otherNodeCalSendPattern	PTPWRd/datatypes.h	/^	UInteger16 otherNodeCalSendPattern; $/;"	m	struct:__anon58	access:public
__anon58::otherNodeDeltaRx	PTPWRd/datatypes.h	/^	FixedDelta otherNodeDeltaRx; 	$/;"	m	struct:__anon58	access:public
__anon58::otherNodeDeltaTx	PTPWRd/datatypes.h	/^	FixedDelta otherNodeDeltaTx; $/;"	m	struct:__anon58	access:public
__anon58::owd_filt	PTPWRd/datatypes.h	/^	one_way_delay_filter  owd_filt;$/;"	m	struct:__anon58	access:public
__anon58::pDelayReq_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t pDelayReq_tx_ts; \/\/ t3 S (P2P)$/;"	m	struct:__anon58	access:public
__anon58::pDelayResp_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t pDelayResp_tx_ts;\/\/ t5 M (P2P)$/;"	m	struct:__anon58	access:public
__anon58::parentCalibrated	PTPWRd/datatypes.h	/^	Boolean parentCalibrated;$/;"	m	struct:__anon58	access:public
__anon58::parentIsWRnode	PTPWRd/datatypes.h	/^	Boolean parentIsWRnode;$/;"	m	struct:__anon58	access:public
__anon58::parentWrConfig	PTPWRd/datatypes.h	/^	Enumeration8 parentWrConfig; $/;"	m	struct:__anon58	access:public
__anon58::parentWrModeON	PTPWRd/datatypes.h	/^	Boolean parentWrModeON; $/;"	m	struct:__anon58	access:public
__anon58::parentWrNodeMode	PTPWRd/datatypes.h	/^	Enumeration8 parentWrNodeMode; $/;"	m	struct:__anon58	access:public
__anon58::pdelayMS	PTPWRd/datatypes.h	/^	TimeInternal	pdelayMS;$/;"	m	struct:__anon58	access:public
__anon58::pdelaySM	PTPWRd/datatypes.h	/^	TimeInternal	pdelaySM;$/;"	m	struct:__anon58	access:public
__anon58::pdelay_req_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_req_receive_time;$/;"	m	struct:__anon58	access:public
__anon58::pdelay_req_send_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_req_send_time;$/;"	m	struct:__anon58	access:public
__anon58::pdelay_resp_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_resp_receive_time;$/;"	m	struct:__anon58	access:public
__anon58::pdelay_resp_send_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_resp_send_time;$/;"	m	struct:__anon58	access:public
__anon58::peerMeanPathDelay	PTPWRd/datatypes.h	/^	TimeInternal peerMeanPathDelay;$/;"	m	struct:__anon58	access:public
__anon58::phyCalibrationRequired	PTPWRd/datatypes.h	/^	Boolean phyCalibrationRequired;$/;"	m	struct:__anon58	access:public
__anon58::portIdentity	PTPWRd/datatypes.h	/^	PortIdentity portIdentity;$/;"	m	struct:__anon58	access:public
__anon58::portState	PTPWRd/datatypes.h	/^	Enumeration8 portState;$/;"	m	struct:__anon58	access:public
__anon58::port_communication_technology	PTPWRd/datatypes.h	/^	UInteger8 port_communication_technology;$/;"	m	struct:__anon58	access:public
__anon58::port_uuid_field	PTPWRd/datatypes.h	/^	Octet port_uuid_field[PTP_UUID_LENGTH];$/;"	m	struct:__anon58	access:public
__anon58::ptpClockDS	PTPWRd/datatypes.h	/^	PtpClockDS *ptpClockDS;$/;"	m	struct:__anon58	access:public
__anon58::record_update	PTPWRd/datatypes.h	/^	Boolean  record_update;$/;"	m	struct:__anon58	access:public
__anon58::recvPDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  recvPDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::recvPDelayRespSequenceId	PTPWRd/datatypes.h	/^    UInteger16  recvPDelayRespSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::recvSyncSequenceId	PTPWRd/datatypes.h	/^	UInteger16  recvSyncSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::scalled_alpha	PTPWRd/datatypes.h	/^	UInteger32 scalled_alpha;	 \/\/ not used :-($/;"	m	struct:__anon58	access:public
__anon58::secondaryForeignMaster	PTPWRd/datatypes.h	/^	ForeignMasterRecord secondaryForeignMaster;$/;"	m	struct:__anon58	access:public
__anon58::sentAnnounceSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentAnnounceSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::sentDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::sentPDelayReq	PTPWRd/datatypes.h	/^	Boolean     sentPDelayReq;$/;"	m	struct:__anon58	access:public
__anon58::sentPDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentPDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::sentPDelayRespSequenceId	PTPWRd/datatypes.h	/^    UInteger16  sentPDelayRespSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::sentSyncSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentSyncSequenceId;$/;"	m	struct:__anon58	access:public
__anon58::slave_to_master_delay	PTPWRd/datatypes.h	/^	TimeInternal  slave_to_master_delay;$/;"	m	struct:__anon58	access:public
__anon58::sync_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  sync_receive_time;$/;"	m	struct:__anon58	access:public
__anon58::synch_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t synch_tx_ts;     \/\/ t1 M$/;"	m	struct:__anon58	access:public
__anon58::timers	PTPWRd/datatypes.h	/^	} timers;$/;"	m	struct:__anon58	typeref:struct:__anon58::__anon60	access:public
__anon58::versionNumber	PTPWRd/datatypes.h	/^	UInteger4 versionNumber;$/;"	m	struct:__anon58	access:public
__anon58::waitingForDelayFollowUp	PTPWRd/datatypes.h	/^    Boolean  waitingForDelayFollowUp;$/;"	m	struct:__anon58	access:public
__anon58::waitingForFollow	PTPWRd/datatypes.h	/^	Boolean  waitingForFollow;$/;"	m	struct:__anon58	access:public
__anon58::wrConfig	PTPWRd/datatypes.h	/^	Enumeration8 wrConfig;	$/;"	m	struct:__anon58	access:public
__anon58::wrMode	PTPWRd/datatypes.h	/^	Enumeration8 wrMode; $/;"	m	struct:__anon58	access:public
__anon58::wrModeON	PTPWRd/datatypes.h	/^	Boolean wrModeON; $/;"	m	struct:__anon58	access:public
__anon58::wrPortState	PTPWRd/datatypes.h	/^	Enumeration8  wrPortState;$/;"	m	struct:__anon58	access:public
__anon58::wrSlaveRole	PTPWRd/datatypes.h	/^	Enumeration8 wrSlaveRole;$/;"	m	struct:__anon58	access:public
__anon58::wrStateRetry	PTPWRd/datatypes.h	/^	UInteger8 wrStateRetry;$/;"	m	struct:__anon58	access:public
__anon58::wrStateTimeout	PTPWRd/datatypes.h	/^	UInteger32 wrStateTimeout; $/;"	m	struct:__anon58	access:public
__anon58::wrTimeouts	PTPWRd/datatypes.h	/^	int wrTimeouts[WR_TIMER_ARRAY_SIZE];$/;"	m	struct:__anon58	access:public
__anon58::wrTimers	PTPWRd/datatypes.h	/^	IntervalTimer wrTimers[WR_TIMER_ARRAY_SIZE];$/;"	m	struct:__anon58	access:public
__anon58::wr_servo	PTPWRd/datatypes.h	/^	wr_servo_state_t wr_servo;$/;"	m	struct:__anon58	access:public
__anon61::E2E_mode	PTPWRd/datatypes.h	/^	Boolean		E2E_mode;$/;"	m	struct:__anon61	access:public
__anon61::P2P_mode	PTPWRd/datatypes.h	/^    Boolean     P2P_mode;$/;"	m	struct:__anon61	access:public
__anon61::ai	PTPWRd/datatypes.h	/^	Integer16	ap, ai;$/;"	m	struct:__anon61	access:public
__anon61::announceInterval	PTPWRd/datatypes.h	/^	Integer8	announceInterval;$/;"	m	struct:__anon61	access:public
__anon61::ap	PTPWRd/datatypes.h	/^	Integer16	ap, ai;$/;"	m	struct:__anon61	access:public
__anon61::autoPortDiscovery	PTPWRd/datatypes.h	/^	Boolean 	autoPortDiscovery;$/;"	m	struct:__anon61	access:public
__anon61::calPeriod	PTPWRd/datatypes.h	/^	UInteger32	calPeriod;$/;"	m	struct:__anon61	access:public
__anon61::clockQuality	PTPWRd/datatypes.h	/^	ClockQuality	clockQuality;$/;"	m	struct:__anon61	access:public
__anon61::csvStats	PTPWRd/datatypes.h	/^	Boolean		csvStats;$/;"	m	struct:__anon61	access:public
__anon61::currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16	currentUtcOffset;$/;"	m	struct:__anon61	access:public
__anon61::disableFallbackIfWRFails	PTPWRd/datatypes.h	/^	Boolean  disableFallbackIfWRFails;$/;"	m	struct:__anon61	access:public
__anon61::displayStats	PTPWRd/datatypes.h	/^	Boolean		displayStats;$/;"	m	struct:__anon61	access:public
__anon61::domainNumber	PTPWRd/datatypes.h	/^	UInteger8	domainNumber;$/;"	m	struct:__anon61	access:public
__anon61::ethernet_mode	PTPWRd/datatypes.h	/^	Boolean		ethernet_mode;$/;"	m	struct:__anon61	access:public
__anon61::ifaceName	PTPWRd/datatypes.h	/^	Octet		ifaceName[MAX_PORT_NUMBER][IFACE_NAME_LENGTH];$/;"	m	struct:__anon61	access:public
__anon61::inboundLatency	PTPWRd/datatypes.h	/^	TimeInternal	inboundLatency, outboundLatency;$/;"	m	struct:__anon61	access:public
__anon61::masterOnly	PTPWRd/datatypes.h	/^	Boolean		masterOnly;$/;"	m	struct:__anon61	access:public
__anon61::max_foreign_records	PTPWRd/datatypes.h	/^	Integer16	max_foreign_records;$/;"	m	struct:__anon61	access:public
__anon61::noAdjust	PTPWRd/datatypes.h	/^	Boolean		noAdjust;$/;"	m	struct:__anon61	access:public
__anon61::noResetClock	PTPWRd/datatypes.h	/^	Boolean		noResetClock;$/;"	m	struct:__anon61	access:public
__anon61::offset_first_updated	PTPWRd/datatypes.h	/^	Boolean		offset_first_updated;$/;"	m	struct:__anon61	access:public
__anon61::outboundLatency	PTPWRd/datatypes.h	/^	TimeInternal	inboundLatency, outboundLatency;$/;"	m	struct:__anon61	access:public
__anon61::overrideClockIdentity	PTPWRd/datatypes.h	/^	UInteger8	overrideClockIdentity;$/;"	m	struct:__anon61	access:public
__anon61::phyCalibrationRequired	PTPWRd/datatypes.h	/^	Boolean 	phyCalibrationRequired;$/;"	m	struct:__anon61	access:public
__anon61::portNumber	PTPWRd/datatypes.h	/^	UInteger16	portNumber;$/;"	m	struct:__anon61	access:public
__anon61::primarySource	PTPWRd/datatypes.h	/^	Boolean		primarySource;$/;"	m	struct:__anon61	access:public
__anon61::priority1	PTPWRd/datatypes.h	/^	UInteger8	priority1;$/;"	m	struct:__anon61	access:public
__anon61::priority2	PTPWRd/datatypes.h	/^	UInteger8	priority2;$/;"	m	struct:__anon61	access:public
__anon61::s	PTPWRd/datatypes.h	/^	Integer16	s;$/;"	m	struct:__anon61	access:public
__anon61::syncInterval	PTPWRd/datatypes.h	/^	Integer8	syncInterval;$/;"	m	struct:__anon61	access:public
__anon61::unicastAddress	PTPWRd/datatypes.h	/^	Octet		unicastAddress[NET_ADDRESS_LENGTH];$/;"	m	struct:__anon61	access:public
__anon61::wrConfig	PTPWRd/datatypes.h	/^	Enumeration8 	wrConfig;	$/;"	m	struct:__anon61	access:public
__anon61::wrStateRetry	PTPWRd/datatypes.h	/^	UInteger8 	wrStateRetry;$/;"	m	struct:__anon61	access:public
__anon61::wrStateTimeout	PTPWRd/datatypes.h	/^	UInteger32 	wrStateTimeout;$/;"	m	struct:__anon61	access:public
__anon62::dstmac	libposix/wrapper_private.h	/^  uint8_t dstmac[6];$/;"	m	struct:__anon62	access:public
__anon62::ethtype	libposix/wrapper_private.h	/^  uint16_t ethtype;$/;"	m	struct:__anon62	access:public
__anon62::srcmac	libposix/wrapper_private.h	/^  uint8_t srcmac[6];$/;"	m	struct:__anon62	access:public
__anon63::start_tics	libposix/wrapper_private.h	/^	uint64_t start_tics;$/;"	m	struct:__anon63	access:public
__anon63::timeout	libposix/wrapper_private.h	/^	uint64_t timeout;$/;"	m	struct:__anon63	access:public
__anon64::buf	libposix/wrapper_private.h	/^  uint8_t buf[SOCKQ_SIZE];$/;"	m	struct:__anon64	access:public
__anon64::head	libposix/wrapper_private.h	/^  uint8_t head, tail;$/;"	m	struct:__anon64	access:public
__anon64::n	libposix/wrapper_private.h	/^  uint8_t n;$/;"	m	struct:__anon64	access:public
__anon64::tail	libposix/wrapper_private.h	/^  uint8_t head, tail;$/;"	m	struct:__anon64	access:public
__anon65::adjust_nsec	wrsw_hal/hal_exports.h	/^  int32_t adjust_nsec;$/;"	m	struct:__anon65	access:public
__anon65::adjust_phase_shift	wrsw_hal/hal_exports.h	/^  int32_t adjust_phase_shift;$/;"	m	struct:__anon65	access:public
__anon65::adjust_utc	wrsw_hal/hal_exports.h	/^  int64_t adjust_utc;$/;"	m	struct:__anon65	access:public
__anon65::current_nsec	wrsw_hal/hal_exports.h	/^  uint32_t current_nsec;$/;"	m	struct:__anon65	access:public
__anon65::current_phase_shift	wrsw_hal/hal_exports.h	/^  uint32_t current_phase_shift;$/;"	m	struct:__anon65	access:public
__anon65::current_utc	wrsw_hal/hal_exports.h	/^  uint64_t current_utc;$/;"	m	struct:__anon65	access:public
__anon65::port_name	wrsw_hal/hal_exports.h	/^  char port_name[16];$/;"	m	struct:__anon65	access:public
__anon65::pps_valid	wrsw_hal/hal_exports.h	/^	int pps_valid;$/;"	m	struct:__anon65	access:public
__anon66::clock_period	wrsw_hal/hal_exports.h	/^  uint32_t clock_period; \/\/ reference lock period in picoseconds$/;"	m	struct:__anon66	access:public
__anon66::delta_rx	wrsw_hal/hal_exports.h	/^  uint32_t delta_rx;$/;"	m	struct:__anon66	access:public
__anon66::delta_tx	wrsw_hal/hal_exports.h	/^  uint32_t delta_tx;$/;"	m	struct:__anon66	access:public
__anon66::fiber_fix_alpha	wrsw_hal/hal_exports.h	/^  int32_t fiber_fix_alpha;$/;"	m	struct:__anon66	access:public
__anon66::hw_addr	wrsw_hal/hal_exports.h	/^  uint8_t hw_addr[6];$/;"	m	struct:__anon66	access:public
__anon66::hw_index	wrsw_hal/hal_exports.h	/^  int hw_index;$/;"	m	struct:__anon66	access:public
__anon66::is_locked	wrsw_hal/hal_exports.h	/^  int is_locked;$/;"	m	struct:__anon66	access:public
__anon66::lock_priority	wrsw_hal/hal_exports.h	/^  int lock_priority;$/;"	m	struct:__anon66	access:public
__anon66::mode	wrsw_hal/hal_exports.h	/^  int mode;$/;"	m	struct:__anon66	access:public
__anon66::phase_setpoint	wrsw_hal/hal_exports.h	/^  uint32_t phase_setpoint; \/\/ DMPLL phase setpoint (picoseconds)$/;"	m	struct:__anon66	access:public
__anon66::phase_val	wrsw_hal/hal_exports.h	/^  uint32_t phase_val;$/;"	m	struct:__anon66	access:public
__anon66::phase_val_valid	wrsw_hal/hal_exports.h	/^  int phase_val_valid;$/;"	m	struct:__anon66	access:public
__anon66::rx_calibrated	wrsw_hal/hal_exports.h	/^  int rx_calibrated;$/;"	m	struct:__anon66	access:public
__anon66::rx_tstamp_counter	wrsw_hal/hal_exports.h	/^  int rx_tstamp_counter;$/;"	m	struct:__anon66	access:public
__anon66::t2_phase_transition	wrsw_hal/hal_exports.h	/^  uint32_t t2_phase_transition; \/\/ approximate DMTD phase value (on slave port) at which RX timestamp (T2) counter transistion occurs (picoseconds)$/;"	m	struct:__anon66	access:public
__anon66::t4_phase_transition	wrsw_hal/hal_exports.h	/^  uint32_t t4_phase_transition; \/\/ approximate phase value (on master port) at which RX timestamp (T4) counter transistion occurs (picoseconds)$/;"	m	struct:__anon66	access:public
__anon66::tx_calibrated	wrsw_hal/hal_exports.h	/^  int tx_calibrated;$/;"	m	struct:__anon66	access:public
__anon66::tx_tstamp_counter	wrsw_hal/hal_exports.h	/^  int tx_tstamp_counter;$/;"	m	struct:__anon66	access:public
__anon66::up	wrsw_hal/hal_exports.h	/^  int up;$/;"	m	struct:__anon66	access:public
__anon66::valid	wrsw_hal/hal_exports.h	/^  int valid;$/;"	m	struct:__anon66	access:public
__anon67::num_physical_ports	wrsw_hal/hal_exports.h	/^  int num_physical_ports; \/* Number of physical ports compiled into the FPGA bitstream *\/$/;"	m	struct:__anon67	access:public
__anon67::num_ports	wrsw_hal/hal_exports.h	/^  int num_ports;					\/* Number of ports in the list *\/$/;"	m	struct:__anon67	access:public
__anon67::port_names	wrsw_hal/hal_exports.h	/^  char port_names[HAL_MAX_PORTS][16];$/;"	m	struct:__anon67	access:public
__anon68::locked_port	wrsw_hal/hal_exports.h	/^  int locked_port;$/;"	m	struct:__anon68	access:public
__anon68::timing_mode	wrsw_hal/hal_exports.h	/^  int timing_mode; \/* Free-running Master\/GM\/BC *\/$/;"	m	struct:__anon68	access:public
__anon6::start_tics	libptpnetif/netif_test.c	/^  uint64_t start_tics;$/;"	m	struct:__anon6	file:	access:public
__anon6::timeout	libptpnetif/netif_test.c	/^  uint64_t timeout;$/;"	m	struct:__anon6	file:	access:public
__anon7::cur_setpoint	libptpnetif/netif_test.c	/^  int32_t cur_setpoint;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_ms	libptpnetif/netif_test.c	/^  int64_t delta_ms;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_ms_prev	libptpnetif/netif_test.c	/^  int64_t delta_ms_prev;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_rx_m	libptpnetif/netif_test.c	/^  int32_t delta_rx_m;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_rx_s	libptpnetif/netif_test.c	/^  int32_t delta_rx_s;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_tx_m	libptpnetif/netif_test.c	/^  int32_t delta_tx_m;$/;"	m	struct:__anon7	file:	access:public
__anon7::delta_tx_s	libptpnetif/netif_test.c	/^  int32_t delta_tx_s;$/;"	m	struct:__anon7	file:	access:public
__anon7::fuckup_cycles	libptpnetif/netif_test.c	/^  int fuckup_cycles;$/;"	m	struct:__anon7	file:	access:public
__anon7::if_name	libptpnetif/netif_test.c	/^  char if_name[16];$/;"	m	struct:__anon7	file:	access:public
__anon7::mu	libptpnetif/netif_test.c	/^  wr_timestamp_t mu;$/;"	m	struct:__anon7	file:	access:public
__anon7::next_state	libptpnetif/netif_test.c	/^  int next_state;$/;"	m	struct:__anon7	file:	access:public
__anon7::nsec_offset	libptpnetif/netif_test.c	/^  wr_timestamp_t nsec_offset;$/;"	m	struct:__anon7	file:	access:public
__anon7::prev_t4	libptpnetif/netif_test.c	/^  wr_timestamp_t t4, prev_t4;$/;"	m	struct:__anon7	file:	access:public
__anon7::state	libptpnetif/netif_test.c	/^  int state;$/;"	m	struct:__anon7	file:	access:public
__anon7::t4	libptpnetif/netif_test.c	/^  wr_timestamp_t t4, prev_t4;$/;"	m	struct:__anon7	file:	access:public
__anon8::start_tics	libptpnetif/ptpd_netif.c	/^	uint64_t start_tics;$/;"	m	struct:__anon8	file:	access:public
__anon8::timeout	libptpnetif/ptpd_netif.c	/^	uint64_t timeout;$/;"	m	struct:__anon8	file:	access:public
__anon9::cur_offset	PTPWRd/ptpd_exports.h	/^	int64_t cur_offset;$/;"	m	struct:__anon9	access:public
__anon9::cur_setpoint	PTPWRd/ptpd_exports.h	/^	int64_t cur_setpoint;$/;"	m	struct:__anon9	access:public
__anon9::cur_skew	PTPWRd/ptpd_exports.h	/^	int64_t cur_skew;$/;"	m	struct:__anon9	access:public
__anon9::delay_ms	PTPWRd/ptpd_exports.h	/^	int64_t delay_ms;$/;"	m	struct:__anon9	access:public
__anon9::delta_rx_m	PTPWRd/ptpd_exports.h	/^	int64_t delta_rx_m;$/;"	m	struct:__anon9	access:public
__anon9::delta_rx_s	PTPWRd/ptpd_exports.h	/^	int64_t delta_rx_s;$/;"	m	struct:__anon9	access:public
__anon9::delta_tx_m	PTPWRd/ptpd_exports.h	/^	int64_t delta_tx_m;$/;"	m	struct:__anon9	access:public
__anon9::delta_tx_s	PTPWRd/ptpd_exports.h	/^	int64_t delta_tx_s;$/;"	m	struct:__anon9	access:public
__anon9::fiber_asymmetry	PTPWRd/ptpd_exports.h	/^	int64_t fiber_asymmetry;$/;"	m	struct:__anon9	access:public
__anon9::mu	PTPWRd/ptpd_exports.h	/^	int64_t mu;$/;"	m	struct:__anon9	access:public
__anon9::slave_servo_state	PTPWRd/ptpd_exports.h	/^	char slave_servo_state[32];$/;"	m	struct:__anon9	access:public
__anon9::sync_source	PTPWRd/ptpd_exports.h	/^	char sync_source[32];$/;"	m	struct:__anon9	access:public
__anon9::total_asymmetry	PTPWRd/ptpd_exports.h	/^	int64_t total_asymmetry;$/;"	m	struct:__anon9	access:public
__anon9::tracking_enabled	PTPWRd/ptpd_exports.h	/^	int tracking_enabled;$/;"	m	struct:__anon9	access:public
__anon9::update_count	PTPWRd/ptpd_exports.h	/^	int64_t update_count;$/;"	m	struct:__anon9	access:public
__anon9::valid	PTPWRd/ptpd_exports.h	/^	int valid;$/;"	m	struct:__anon9	access:public
__minipc_child	libminipc/minipc-core.c	/^void __minipc_child(void *addr, int fd, int flags)$/;"	f	signature:(void *addr, int fd, int flags)
__minipc_link_create	libminipc/minipc-core.c	/^struct minipc_ch *__minipc_link_create(const char *name, int flags)$/;"	f	signature:(const char *name, int flags)
__minipc_link_create	libminipc/minipc-int.h	/^extern struct minipc_ch *__minipc_link_create(const char *name, int flags);$/;"	p	signature:(const char *name, int flags)
__minipc_memlink_create	libminipc/minipc-core.c	/^static struct mpc_link *__minipc_memlink_create(struct mpc_link *link)$/;"	f	file:	signature:(struct mpc_link *link)
__mpc_base	libminipc/minipc-core.c	/^struct mpc_link *__mpc_base;$/;"	v	typeref:struct:mpc_link
__mpc_poll_usec	libminipc/minipc-core.c	/^static int __mpc_poll_usec = MINIPC_DEFAULT_POLL;$/;"	v	file:
__rpcdef_calibration_cmd	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_calibration_cmd = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_check_running	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_check_running = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_cmd	PTPWRd/ptpd_exports.h	/^struct minipc_pd __rpcdef_cmd = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_get_port_state	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_get_port_state = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_get_sync_state	PTPWRd/ptpd_exports.h	/^struct minipc_pd __rpcdef_get_sync_state = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_get_timing_state	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_get_timing_state = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_lock_cmd	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_lock_cmd = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_pps_cmd	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_pps_cmd = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_query_ports	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_query_ports = {$/;"	v	typeref:struct:minipc_pd
__rpcdef_reset_port	wrsw_hal/hal_exports.h	/^struct minipc_pd __rpcdef_reset_port = {$/;"	v	typeref:struct:minipc_pd
_wr_timestamp	libptpnetif/ptpd_netif.h	/^PACKED struct _wr_timestamp {$/;"	s
_wr_timestamp::correct	libptpnetif/ptpd_netif.h	/^	int correct;$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::nsec	libptpnetif/ptpd_netif.h	/^    int32_t nsec;$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::phase	libptpnetif/ptpd_netif.h	/^    int32_t phase; \/\/ phase(picoseconds)$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::raw_ahead	libptpnetif/ptpd_netif.h	/^	int32_t raw_ahead;$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::raw_nsec	libptpnetif/ptpd_netif.h	/^	int32_t raw_nsec;$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::raw_phase	libptpnetif/ptpd_netif.h	/^	int32_t raw_phase;$/;"	m	struct:_wr_timestamp	access:public
_wr_timestamp::utc	libptpnetif/ptpd_netif.h	/^    int64_t utc;$/;"	m	struct:_wr_timestamp	access:public
actionField	PTPWRd/datatypes.h	/^	Enumeration4 actionField;$/;"	m	struct:__anon53	access:public
addForeign	PTPWRd/protocol.c	/^void addForeign(Octet *buf,MsgHeader *header,PtpPortDS *ptpPortDS)$/;"	f	signature:(Octet *buf,MsgHeader *header,PtpPortDS *ptpPortDS)
addForeign	PTPWRd/protocol.c	/^void addForeign(Octet*,MsgHeader*,PtpPortDS*);$/;"	p	file:	signature:(Octet*,MsgHeader*,PtpPortDS*)
addTime	PTPWRd/arith.c	/^void addTime(TimeInternal *r, TimeInternal *x, TimeInternal *y)$/;"	f	signature:(TimeInternal *r, TimeInternal *x, TimeInternal *y)
addTime	PTPWRd/ptpd.h	/^void addTime(TimeInternal*,TimeInternal*,TimeInternal*);$/;"	p	signature:(TimeInternal*,TimeInternal*,TimeInternal*)
addr	libminipc/minipc-int.h	/^	struct sockaddr_un addr;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::sockaddr_un	access:public
adjFreq	PTPWRd/dep/ptpd_dep.h	/^Boolean adjFreq(Integer32);$/;"	p	signature:(Integer32)
adjust_nsec	wrsw_hal/hal_exports.h	/^  int32_t adjust_nsec;$/;"	m	struct:__anon65	access:public
adjust_phase_shift	wrsw_hal/hal_exports.h	/^  int32_t adjust_phase_shift;$/;"	m	struct:__anon65	access:public
adjust_utc	wrsw_hal/hal_exports.h	/^  int64_t adjust_utc;$/;"	m	struct:__anon65	access:public
adressField	PTPWRd/datatypes.h	/^	Octet* adressField;$/;"	m	struct:__anon38	access:public
adressLength	PTPWRd/datatypes.h	/^	UInteger16 adressLength;$/;"	m	struct:__anon38	access:public
ai	PTPWRd/datatypes.h	/^	Integer16	ap, ai;$/;"	m	struct:__anon61	access:public
announce	PTPWRd/datatypes.h	/^		MsgAnnounce  announce;$/;"	m	union:__anon58::__anon59	access:public
announce	PTPWRd/datatypes.h	/^	MsgAnnounce  announce;$/;"	m	struct:__anon56	access:public
announce	libptpnetif/netif_test.c	/^  } announce;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon4	file:	access:public
announceInterval	PTPWRd/datatypes.h	/^		IntervalTimer announceInterval;$/;"	m	struct:__anon58::__anon60	access:public
announceInterval	PTPWRd/datatypes.h	/^	Integer8	announceInterval;$/;"	m	struct:__anon61	access:public
announceReceipt	PTPWRd/datatypes.h	/^		IntervalTimer announceReceipt;$/;"	m	struct:__anon58::__anon60	access:public
announceReceiptTimeout	PTPWRd/datatypes.h	/^	UInteger8 announceReceiptTimeout;$/;"	m	struct:__anon58	access:public
announce_resp	libptpnetif/netif_test.c	/^  } announce_resp;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon5	file:	access:public
ap	PTPWRd/datatypes.h	/^	Integer16	ap, ai;$/;"	m	struct:__anon61	access:public
args	libminipc/minipc-int.h	/^	uint32_t args[MINIPC_MAX_ARGUMENTS];$/;"	m	struct:mpc_req_packet	access:public
args	libminipc/minipc.h	/^	uint32_t args[];		\/* zero-terminated *\/$/;"	m	struct:minipc_pd	access:public
autoDetectPortWrConfig	PTPWRd/dep/net.c	/^Boolean autoDetectPortWrConfig(NetPath *netPath, PtpPortDS *ptpPortDS)$/;"	f	signature:(NetPath *netPath, PtpPortDS *ptpPortDS)
autoDetectPortWrConfig	PTPWRd/dep/ptpd_dep.h	/^Boolean autoDetectPortWrConfig(NetPath*, PtpPortDS*);$/;"	p	signature:(NetPath*, PtpPortDS*)
autoPortDiscovery	PTPWRd/datatypes.h	/^	Boolean 	autoPortDiscovery;$/;"	m	struct:__anon61	access:public
autoPortNumberDiscovery	PTPWRd/dep/net.c	/^UInteger16 autoPortNumberDiscovery(void)$/;"	f	signature:(void)
autoPortNumberDiscovery	PTPWRd/dep/ptpd_dep.h	/^UInteger16 autoPortNumberDiscovery(void);$/;"	p	signature:(void)
bestForeign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *bestForeign;$/;"	m	struct:__anon57	access:public
bind_addr	libposix/wrapper_private.h	/^	wr_sockaddr_t bind_addr;$/;"	m	struct:my_socket	access:public
bind_addr	libptpnetif/ptpd_netif.c	/^	wr_sockaddr_t bind_addr;$/;"	m	struct:my_socket	file:	access:public
bmc	PTPWRd/bmc.c	/^UInteger8 bmc(ForeignMasterRecord *foreignMaster,RunTimeOpts *rtOpts ,PtpPortDS *ptpPortDS )$/;"	f	signature:(ForeignMasterRecord *foreignMaster,RunTimeOpts *rtOpts ,PtpPortDS *ptpPortDS )
bmc	PTPWRd/ptpd.h	/^UInteger8 bmc(ForeignMasterRecord*,RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(ForeignMasterRecord*,RunTimeOpts*,PtpPortDS*)
bmcDataSetComparison	PTPWRd/bmc.c	/^Integer8 bmcDataSetComparison(MsgHeader *headerA, MsgAnnounce *announceA, UInteger16 receptionPortNumberA,$/;"	f	signature:(MsgHeader *headerA, MsgAnnounce *announceA, UInteger16 receptionPortNumberA, MsgHeader *headerB, MsgAnnounce *announceB, UInteger16 receptionPortNumberB, PtpPortDS *ptpPortDS)
bmcDataSetComparison	PTPWRd/ptpd.h	/^Integer8 bmcDataSetComparison(MsgHeader*, MsgAnnounce*, UInteger16, MsgHeader*, \\$/;"	p	signature:(MsgHeader*, MsgAnnounce*, UInteger16, MsgHeader*, \ MsgAnnounce*, UInteger16, PtpPortDS*)
bmcStateDecision	PTPWRd/bmc.c	/^UInteger8 bmcStateDecision (MsgHeader *header,MsgAnnounce *announce, UInteger16 receptionPortNumber, RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,MsgAnnounce *announce, UInteger16 receptionPortNumber, RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
boundaryHops	PTPWRd/datatypes.h	/^	UInteger8 boundaryHops;$/;"	m	struct:__anon53	access:public
buf	libposix/wrapper_private.h	/^  uint8_t buf[SOCKQ_SIZE];$/;"	m	struct:__anon64	access:public
calPeriod	PTPWRd/datatypes.h	/^	UInteger32	calPeriod;$/;"	m	struct:__anon61	access:public
calPeriod	PTPWRd/datatypes.h	/^	UInteger32 calPeriod;\/\/[us]$/;"	m	struct:__anon58	access:public
calRetry	PTPWRd/datatypes.h	/^	UInteger8 calRetry;$/;"	m	struct:__anon58	access:public
calibrated	PTPWRd/datatypes.h	/^	Boolean calibrated;$/;"	m	struct:__anon58	access:public
catch_close	PTPWRd/dep/startup.c	/^void catch_close(int sig)$/;"	f	signature:(int sig)
ch	libminipc/minipc-int.h	/^	struct minipc_ch ch;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::minipc_ch	access:public
checkClockClassValidity	PTPWRd/protocol.c	/^void checkClockClassValidity(PtpClockDS *ptpClockDS)$/;"	f	signature:(PtpClockDS *ptpClockDS)
checkClockClassValidity	PTPWRd/ptpd.h	/^void checkClockClassValidity(PtpClockDS *ptpClockDS);$/;"	p	signature:(PtpClockDS *ptpClockDS)
check_link_up	libptpnetif/netif_test.c	/^int check_link_up(char *iface)$/;"	f	signature:(char *iface)
clearFlag	PTPWRd/dep/ptpd_dep.h	93;"	d
clearForeignMasters	PTPWRd/protocol.c	/^void clearForeignMasters(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
clearForeignMasters	PTPWRd/ptpd.h	/^void clearForeignMasters(PtpPortDS *ptpPortDS);$/;"	p	signature:(PtpPortDS *ptpPortDS)
clockAccuracy	PTPWRd/datatypes.h	/^	Enumeration8 clockAccuracy;$/;"	m	struct:__anon39	access:public
clockClass	PTPWRd/datatypes.h	/^	UInteger8 clockClass;$/;"	m	struct:__anon39	access:public
clockClassValidityTimeout	PTPWRd/datatypes.h	/^	UInteger8 clockClassValidityTimeout;$/;"	m	struct:__anon57	access:public
clockClassValidityTimer	PTPWRd/datatypes.h	/^	IntervalTimer clockClassValidityTimer;$/;"	m	struct:__anon57	access:public
clockIdentity	PTPWRd/datatypes.h	/^	ClockIdentity clockIdentity; \/\/TODO(5): should be in clockDS$/;"	m	struct:__anon58	access:public
clockIdentity	PTPWRd/datatypes.h	/^	ClockIdentity clockIdentity;$/;"	m	struct:__anon37	access:public
clockIdentity_display	PTPWRd/display.c	/^void clockIdentity_display(ClockIdentity clockIdentity){$/;"	f	signature:(ClockIdentity clockIdentity)
clockIdentity_display	PTPWRd/ptpd.h	/^void clockIdentity_display(ClockIdentity);$/;"	p	signature:(ClockIdentity)
clockQuality	PTPWRd/datatypes.h	/^	ClockQuality	clockQuality;$/;"	m	struct:__anon61	access:public
clockQuality	PTPWRd/datatypes.h	/^	ClockQuality clockQuality;$/;"	m	struct:__anon57	access:public
clockQuality_display	PTPWRd/display.c	/^void clockQuality_display (ClockQuality *clockQuality){$/;"	f	signature:(ClockQuality *clockQuality)
clockQuality_display	PTPWRd/ptpd.h	/^void clockQuality_display (ClockQuality*);$/;"	p	signature:(ClockQuality*)
clockUUID_display	PTPWRd/display.c	/^void clockUUID_display(Octet *sourceUuid){$/;"	f	signature:(Octet *sourceUuid)
clock_period	libposix/wrapper_private.h	/^	uint32_t clock_period;$/;"	m	struct:my_socket	access:public
clock_period	libptpnetif/ptpd_netif.c	/^	uint32_t clock_period;$/;"	m	struct:my_socket	file:	access:public
clock_period	wrsw_hal/hal_exports.h	/^  uint32_t clock_period; \/\/ reference lock period in picoseconds$/;"	m	struct:__anon66	access:public
clock_period_ps	PTPWRd/dep/datatypes_dep.h	/^	int32_t clock_period_ps;$/;"	m	struct:__anon17	access:public
container_of	libminipc/minipc-int.h	25;"	d
container_of	libminipc/minipc-int.h	30;"	d
controlField	PTPWRd/datatypes.h	/^	UInteger8 controlField;$/;"	m	struct:__anon43	access:public
copyD0	PTPWRd/bmc.c	/^void copyD0(MsgHeader *header, MsgAnnounce *announce, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, MsgAnnounce *announce, PtpPortDS *ptpPortDS)
correct	PTPWRd/datatypes.h	/^	int correct;$/;"	m	struct:__anon54	access:public
correct	libptpnetif/ptpd_netif.h	/^	int correct;$/;"	m	struct:_wr_timestamp	access:public
correctionfield	PTPWRd/datatypes.h	/^	Integer64 correctionfield;$/;"	m	struct:__anon43	access:public
csvStats	PTPWRd/datatypes.h	/^	Boolean		csvStats;$/;"	m	struct:__anon61	access:public
cur_offset	PTPWRd/ptpd_exports.h	/^	int64_t cur_offset;$/;"	m	struct:__anon9	access:public
cur_servo_state	PTPWRd/dep/wr_servo.c	/^ptpdexp_sync_state_t cur_servo_state;$/;"	v
cur_setpoint	PTPWRd/dep/datatypes_dep.h	/^	int32_t cur_setpoint;$/;"	m	struct:__anon17	access:public
cur_setpoint	PTPWRd/ptpd_exports.h	/^	int64_t cur_setpoint;$/;"	m	struct:__anon9	access:public
cur_setpoint	libptpnetif/netif_test.c	/^  int32_t cur_setpoint;$/;"	m	struct:__anon7	file:	access:public
cur_skew	PTPWRd/ptpd_exports.h	/^	int64_t cur_skew;$/;"	m	struct:__anon9	access:public
currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16	currentUtcOffset;$/;"	m	struct:__anon61	access:public
currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16 currentUtcOffset;$/;"	m	struct:__anon44	access:public
currentUtcOffset	PTPWRd/datatypes.h	/^	Integer16 currentUtcOffset;$/;"	m	struct:__anon57	access:public
currentUtcOffsetValid	PTPWRd/datatypes.h	/^	Boolean currentUtcOffsetValid;$/;"	m	struct:__anon57	access:public
currentWRstateCnt	PTPWRd/datatypes.h	/^	UInteger8 currentWRstateCnt;$/;"	m	struct:__anon58	access:public
current_nsec	wrsw_hal/hal_exports.h	/^  uint32_t current_nsec;$/;"	m	struct:__anon65	access:public
current_phase_shift	wrsw_hal/hal_exports.h	/^  uint32_t current_phase_shift;$/;"	m	struct:__anon65	access:public
current_rx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t current_rx_ts;$/;"	m	struct:__anon58	access:public
current_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t current_tx_ts;$/;"	m	struct:__anon58	access:public
current_utc	wrsw_hal/hal_exports.h	/^  uint64_t current_utc;$/;"	m	struct:__anon65	access:public
data	libptpnetif/ptpd_netif.c	/^	char data[ETHER_MTU];$/;"	m	struct:etherpacket	file:	access:public
delay	libptpnetif/netif_test.c	/^  } delay;$/;"	m	struct:__anon2	typeref:struct:__anon2::__anon3	file:	access:public
delayMS	PTPWRd/datatypes.h	/^	TimeInternal    delayMS;$/;"	m	struct:__anon58	access:public
delayMechanism	PTPWRd/datatypes.h	/^	Enumeration8 delayMechanism;$/;"	m	struct:__anon58	access:public
delayReq	PTPWRd/datatypes.h	/^		IntervalTimer delayReq;$/;"	m	struct:__anon58::__anon60	access:public
delayReqHeader	PTPWRd/datatypes.h	/^	MsgHeader		delayReqHeader;$/;"	m	struct:__anon58	access:public
delayReq_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t delayReq_tx_ts;  \/\/ t3 S (E2E)$/;"	m	struct:__anon58	access:public
delaySM	PTPWRd/datatypes.h	/^	TimeInternal	delaySM;$/;"	m	struct:__anon58	access:public
delay_ms	PTPWRd/ptpd_exports.h	/^	int64_t delay_ms;$/;"	m	struct:__anon9	access:public
delay_req_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  delay_req_receive_time;$/;"	m	struct:__anon58	access:public
delay_req_send_time	PTPWRd/datatypes.h	/^	TimeInternal  delay_req_send_time;$/;"	m	struct:__anon58	access:public
deltaRx	PTPWRd/datatypes.h	/^	FixedDelta deltaRx; $/;"	m	struct:__anon58	access:public
deltaTx	PTPWRd/datatypes.h	/^	FixedDelta deltaTx; $/;"	m	struct:__anon58	access:public
delta_ms	PTPWRd/dep/datatypes_dep.h	/^	int64_t delta_ms;$/;"	m	struct:__anon17	access:public
delta_ms	libptpnetif/netif_test.c	/^  int64_t delta_ms;$/;"	m	struct:__anon7	file:	access:public
delta_ms_prev	PTPWRd/dep/datatypes_dep.h	/^	int64_t delta_ms_prev;$/;"	m	struct:__anon17	access:public
delta_ms_prev	libptpnetif/netif_test.c	/^  int64_t delta_ms_prev;$/;"	m	struct:__anon7	file:	access:public
delta_rx	wrsw_hal/hal_exports.h	/^  uint32_t delta_rx;$/;"	m	struct:__anon66	access:public
delta_rx_m	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_rx_m;$/;"	m	struct:__anon17	access:public
delta_rx_m	PTPWRd/ptpd_exports.h	/^	int64_t delta_rx_m;$/;"	m	struct:__anon9	access:public
delta_rx_m	libptpnetif/netif_test.c	/^  int32_t delta_rx_m;$/;"	m	struct:__anon7	file:	access:public
delta_rx_s	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_rx_s;$/;"	m	struct:__anon17	access:public
delta_rx_s	PTPWRd/ptpd_exports.h	/^	int64_t delta_rx_s;$/;"	m	struct:__anon9	access:public
delta_rx_s	libptpnetif/netif_test.c	/^  int32_t delta_rx_s;$/;"	m	struct:__anon7	file:	access:public
delta_tx	wrsw_hal/hal_exports.h	/^  uint32_t delta_tx;$/;"	m	struct:__anon66	access:public
delta_tx_m	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_tx_m;$/;"	m	struct:__anon17	access:public
delta_tx_m	PTPWRd/ptpd_exports.h	/^	int64_t delta_tx_m;$/;"	m	struct:__anon9	access:public
delta_tx_m	libptpnetif/netif_test.c	/^  int32_t delta_tx_m;$/;"	m	struct:__anon7	file:	access:public
delta_tx_s	PTPWRd/dep/datatypes_dep.h	/^	int32_t delta_tx_s;$/;"	m	struct:__anon17	access:public
delta_tx_s	PTPWRd/ptpd_exports.h	/^	int64_t delta_tx_s;$/;"	m	struct:__anon9	access:public
delta_tx_s	libptpnetif/netif_test.c	/^  int32_t delta_tx_s;$/;"	m	struct:__anon7	file:	access:public
disableFallbackIfWRFails	PTPWRd/datatypes.h	/^	Boolean  disableFallbackIfWRFails;$/;"	m	struct:__anon61	access:public
displayBuffer	PTPWRd/display.c	/^void displayBuffer (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayBuffer	PTPWRd/ptpd.h	/^void displayBuffer (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayConfigINFO	PTPWRd/display.c	/^void displayConfigINFO(RunTimeOpts* rtOpts)$/;"	f	signature:(RunTimeOpts* rtOpts)
displayConfigINFO	PTPWRd/ptpd.h	/^void displayConfigINFO(RunTimeOpts*);$/;"	p	signature:(RunTimeOpts*)
displayConfigINFO	libposix/freestanding-display.c	/^void displayConfigINFO(RunTimeOpts* rtOpts)$/;"	f	signature:(RunTimeOpts* rtOpts)
displayCurrent	PTPWRd/display.c	/^void displayCurrent (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayCurrent	PTPWRd/ptpd.h	/^void displayCurrent (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayDefault	PTPWRd/display.c	/^void displayDefault (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayDefault	PTPWRd/ptpd.h	/^void displayDefault (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayForeignMaster	PTPWRd/display.c	/^void displayForeignMaster (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayForeignMaster	PTPWRd/ptpd.h	/^void displayForeignMaster (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayGlobal	PTPWRd/display.c	/^void displayGlobal (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayGlobal	PTPWRd/ptpd.h	/^void displayGlobal (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayOthers	PTPWRd/display.c	/^void displayOthers (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayOthers	PTPWRd/ptpd.h	/^void displayOthers (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayParent	PTPWRd/display.c	/^void displayParent (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayParent	PTPWRd/ptpd.h	/^void displayParent (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayPort	PTPWRd/display.c	/^void displayPort (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayPort	PTPWRd/ptpd.h	/^void displayPort (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayPtpPortDS	PTPWRd/display.c	/^void displayPtpPortDS (PtpPortDS *ptpPortDS){$/;"	f	signature:(PtpPortDS *ptpPortDS)
displayPtpPortDS	PTPWRd/ptpd.h	/^void displayPtpPortDS (PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
displayRunTimeOpts	PTPWRd/display.c	/^void displayRunTimeOpts(RunTimeOpts* rtOpts){$/;"	f	signature:(RunTimeOpts* rtOpts)
displayRunTimeOpts	PTPWRd/ptpd.h	/^void displayRunTimeOpts(RunTimeOpts*);$/;"	p	signature:(RunTimeOpts*)
displayStats	PTPWRd/datatypes.h	/^	Boolean		displayStats;$/;"	m	struct:__anon61	access:public
displayStats	PTPWRd/dep/ptpd_dep.h	/^void displayStats(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS);$/;"	p	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
displayStats	PTPWRd/dep/sys.c	/^void displayStats(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
dmtd_phase	libposix/wrapper_private.h	/^	uint32_t dmtd_phase;$/;"	m	struct:my_socket	access:public
dmtd_phase	libptpnetif/ptpd_netif.c	/^	uint32_t dmtd_phase;$/;"	m	struct:my_socket	file:	access:public
dmtd_phase_valid	libptpnetif/ptpd_netif.c	/^	int dmtd_phase_valid;$/;"	m	struct:my_socket	file:	access:public
dmtd_update_tmo	libposix/wrapper_private.h	/^	timeout_t dmtd_update_tmo;$/;"	m	struct:my_socket	access:public
dmtd_update_tmo	libptpnetif/ptpd_netif.c	/^	timeout_t dmtd_update_tmo;$/;"	m	struct:my_socket	file:	access:public
doInit	PTPWRd/protocol.c	/^Boolean doInit(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
doInit	PTPWRd/protocol.c	/^Boolean doInit(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
doRestart	PTPWRd/datatypes.h	/^	Boolean doRestart;$/;"	m	struct:__anon58	access:public
doState	PTPWRd/protocol.c	/^void doState(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
doState	PTPWRd/protocol.c	/^void doState(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
doWRState	PTPWRd/wr_protocol.c	/^void doWRState(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
doWRState	PTPWRd/wr_protocol.h	/^    void doWRState(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS);$/;"	p	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
do_irq_less_timing	PTPWRd/ptpd.h	/^extern void do_irq_less_timing(PtpPortDS *ptpPortDS);$/;"	p	signature:(PtpPortDS *ptpPortDS)
domainNumber	PTPWRd/datatypes.h	/^	UInteger8	domainNumber;$/;"	m	struct:__anon61	access:public
domainNumber	PTPWRd/datatypes.h	/^	UInteger8 domainNumber;$/;"	m	struct:__anon43	access:public
domainNumber	PTPWRd/datatypes.h	/^	UInteger8 domainNumber;$/;"	m	struct:__anon57	access:public
dstmac	libposix/wrapper_private.h	/^  uint8_t dstmac[6];$/;"	m	struct:__anon62	access:public
dump_timestamp	PTPWRd/dep/wr_servo.c	/^static void dump_timestamp(char *what, wr_timestamp_t ts)$/;"	f	file:	signature:(char *what, wr_timestamp_t ts)
dump_timestamp	libptpnetif/netif_test.c	/^void dump_timestamp(char *what, wr_timestamp_t ts)$/;"	f	signature:(char *what, wr_timestamp_t ts)
ether	libptpnetif/ptpd_netif.c	/^	struct ethhdr ether;$/;"	m	struct:etherpacket	typeref:struct:etherpacket::ethhdr	file:	access:public
ethernet_mode	PTPWRd/datatypes.h	/^	Boolean		ethernet_mode;$/;"	m	struct:__anon61	access:public
etherpacket	libptpnetif/ptpd_netif.c	/^PACKED struct etherpacket {$/;"	s	file:
etherpacket::data	libptpnetif/ptpd_netif.c	/^	char data[ETHER_MTU];$/;"	m	struct:etherpacket	file:	access:public
etherpacket::ether	libptpnetif/ptpd_netif.c	/^	struct ethhdr ether;$/;"	m	struct:etherpacket	typeref:struct:etherpacket::ethhdr	file:	access:public
ethertype	libptpnetif/ptpd_netif.h	/^    uint16_t ethertype;$/;"	m	struct:__anon1	access:public
ethhdr_t	libposix/wrapper_private.h	/^} ethhdr_t;$/;"	t	typeref:struct:__anon62
ethtype	libposix/wrapper_private.h	/^  uint16_t ethtype;$/;"	m	struct:__anon62	access:public
export_cmd	PTPWRd/ptpd_exports.c	/^static int export_cmd(const struct minipc_pd *pd,$/;"	f	file:	signature:(const struct minipc_pd *pd, uint32_t *args, void *ret)
export_get_sync_state	PTPWRd/ptpd_exports.c	/^static int export_get_sync_state(const struct minipc_pd *pd,$/;"	f	file:	signature:(const struct minipc_pd *pd, uint32_t *args, void *ret)
extsrcLocked	PTPWRd/dep/net.c	/^Boolean extsrcLocked(void)$/;"	f	signature:(void)
extsrcLocked	PTPWRd/dep/ptpd_dep.h	/^Boolean extsrcLocked(void);$/;"	p	signature:(void)
f	libminipc/minipc.h	/^	minipc_f *f;			\/* pointer to the function *\/$/;"	m	struct:minipc_pd	access:public
family	libptpnetif/ptpd_netif.h	/^    int family;$/;"	m	struct:__anon1	access:public
faultDescription	PTPWRd/datatypes.h	/^	PTPText faultDescription;$/;"	m	struct:__anon42	access:public
faultName	PTPWRd/datatypes.h	/^	PTPText faultName;$/;"	m	struct:__anon42	access:public
faultRecordLength	PTPWRd/datatypes.h	/^	UInteger16 faultRecordLength;$/;"	m	struct:__anon42	access:public
faultTime	PTPWRd/datatypes.h	/^	Timestamp faultTime;$/;"	m	struct:__anon42	access:public
faultValue	PTPWRd/datatypes.h	/^	PTPText faultValue;$/;"	m	struct:__anon42	access:public
fd	libminipc/minipc-int.h	/^	int fd[MINIPC_MAX_CLIENTS];$/;"	m	struct:mpc_link	access:public
fd	libminipc/minipc.h	/^	int fd;$/;"	m	struct:minipc_ch	access:public
fd	libptpnetif/ptpd_netif.c	/^	int fd;$/;"	m	struct:my_socket	file:	access:public
fdset	libminipc/minipc-int.h	/^	fd_set fdset;$/;"	m	struct:mpc_link	access:public
fiber_asymmetry	PTPWRd/ptpd_exports.h	/^	int64_t fiber_asymmetry;$/;"	m	struct:__anon9	access:public
fiber_fix_alpha	PTPWRd/dep/datatypes_dep.h	/^	int32_t fiber_fix_alpha;$/;"	m	struct:__anon17	access:public
fiber_fix_alpha	wrsw_hal/hal_exports.h	/^  int32_t fiber_fix_alpha;$/;"	m	struct:__anon66	access:public
flagField	PTPWRd/datatypes.h	/^	Octet flagField[2];$/;"	m	struct:__anon43	access:public
flags	libminipc/minipc-int.h	/^	int flags;$/;"	m	struct:mpc_link	access:public
flags	libminipc/minipc.h	/^	uint32_t flags;$/;"	m	struct:minipc_pd	access:public
flip16	PTPWRd/dep/ptpd_dep.h	60;"	d
flip32	PTPWRd/dep/ptpd_dep.h	61;"	d
flist	libminipc/minipc-int.h	/^	struct mpc_flist *flist;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::mpc_flist	access:public
follow	PTPWRd/datatypes.h	/^		MsgFollowUp  follow;$/;"	m	union:__anon58::__anon59	access:public
foreign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *foreign;$/;"	m	struct:__anon58	access:public
foreign	libposix/freestanding-startup.c	/^static ForeignMasterRecord foreign[MAX_PORT_NUMBER][DEFAULT_MAX_FOREIGN_RECORDS];$/;"	v	file:
foreignMasterAnnounceMessages	PTPWRd/datatypes.h	/^	UInteger16 foreignMasterAnnounceMessages;$/;"	m	struct:__anon56	access:public
foreignMasterPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity foreignMasterPortIdentity;$/;"	m	struct:__anon56	access:public
foreign_record_best	PTPWRd/datatypes.h	/^	Integer16  foreign_record_best;$/;"	m	struct:__anon58	access:public
foreign_record_i	PTPWRd/datatypes.h	/^	Integer16  foreign_record_i;$/;"	m	struct:__anon58	access:public
format_wr_timestamp	PTPWRd/wr_protocol.c	/^char *format_wr_timestamp(wr_timestamp_t ts)$/;"	f	signature:(wr_timestamp_t ts)
format_wr_timestamp	PTPWRd/wr_protocol.h	/^char *format_wr_timestamp(wr_timestamp_t ts);$/;"	p	signature:(wr_timestamp_t ts)
format_wr_timestamp	libposix/freestanding-wrapper.c	/^char* format_wr_timestamp(wr_timestamp_t ts)$/;"	f	signature:(wr_timestamp_t ts)
fprintf	libposix/ptpd-wrappers.h	57;"	d
frequencyTraceable	PTPWRd/datatypes.h	/^	Boolean frequencyTraceable;$/;"	m	struct:__anon57	access:public
fromInternalTime	PTPWRd/arith.c	/^void fromInternalTime(TimeInternal *internal, Timestamp *external)$/;"	f	signature:(TimeInternal *internal, Timestamp *external)
fromInternalTime	PTPWRd/ptpd.h	/^void fromInternalTime(TimeInternal*,Timestamp*);$/;"	p	signature:(TimeInternal*,Timestamp*)
fuckup_cycles	libptpnetif/netif_test.c	/^  int fuckup_cycles;$/;"	m	struct:__anon7	file:	access:public
getFlag	PTPWRd/dep/ptpd_dep.h	91;"	d
getRand	PTPWRd/dep/ptpd_dep.h	/^int getRand();$/;"	p	signature:()
getTime	PTPWRd/dep/ptpd_dep.h	/^void getTime(TimeInternal*);$/;"	p	signature:(TimeInternal*)
get_be16	PTPWRd/dep/msg.c	/^static inline UInteger16 get_be16(void *ptr)$/;"	f	file:	signature:(void *ptr)
get_be32	PTPWRd/dep/msg.c	/^static inline UInteger32 get_be32(void *ptr)$/;"	f	file:	signature:(void *ptr)
get_tics	libptpnetif/netif_test.c	/^uint64_t get_tics()$/;"	f
get_tics	libptpnetif/ptpd_netif.c	/^static uint64_t get_tics()$/;"	f	file:
globalBestForeignMastersUpdate	PTPWRd/protocol.c	/^Boolean globalBestForeignMastersUpdate(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
globalBestForeignMastersUpdate	PTPWRd/ptpd.h	/^Boolean globalBestForeignMastersUpdate(PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
globalSecondSlavesUpdate	PTPWRd/protocol.c	/^Boolean globalSecondSlavesUpdate(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
globalSecondSlavesUpdate	PTPWRd/ptpd.h	/^Boolean globalSecondSlavesUpdate(PtpPortDS *ptpPortDS);$/;"	p	signature:(PtpPortDS *ptpPortDS)
globalStateDecisionEvent	PTPWRd/datatypes.h	/^	Boolean globalStateDecisionEvent;$/;"	m	struct:__anon57	access:public
got_sync	PTPWRd/dep/wr_servo.c	/^static int got_sync = 0;$/;"	v	file:
grandmasterClockQuality	PTPWRd/datatypes.h	/^	ClockQuality grandmasterClockQuality;$/;"	m	struct:__anon44	access:public
grandmasterClockQuality	PTPWRd/datatypes.h	/^	ClockQuality grandmasterClockQuality;$/;"	m	struct:__anon57	access:public
grandmasterIdentity	PTPWRd/datatypes.h	/^	ClockIdentity grandmasterIdentity;$/;"	m	struct:__anon44	access:public
grandmasterIdentity	PTPWRd/datatypes.h	/^	ClockIdentity grandmasterIdentity;$/;"	m	struct:__anon57	access:public
grandmasterPriority1	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority1;$/;"	m	struct:__anon44	access:public
grandmasterPriority1	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority1;$/;"	m	struct:__anon57	access:public
grandmasterPriority2	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority2;$/;"	m	struct:__anon44	access:public
grandmasterPriority2	PTPWRd/datatypes.h	/^	UInteger8 grandmasterPriority2;$/;"	m	struct:__anon57	access:public
hal_ch	libptpnetif/hal_client.c	/^static struct minipc_ch *hal_ch;$/;"	v	typeref:struct:minipc_ch	file:
halexp_calibration_cmd	libptpnetif/hal_client.c	/^int halexp_calibration_cmd(const char *port_name, int command, int on_off)$/;"	f	signature:(const char *port_name, int command, int on_off)
halexp_calibration_cmd	wrsw_hal/hal_exports.h	/^extern int halexp_calibration_cmd(const char *port_name, int command, int on_off);$/;"	p	signature:(const char *port_name, int command, int on_off)
halexp_check_running	libptpnetif/hal_client.c	/^int halexp_check_running()$/;"	f
halexp_check_running	wrsw_hal/hal_exports.h	/^extern int halexp_check_running(void);$/;"	p	signature:(void)
halexp_client_init	libptpnetif/hal_client.c	/^int halexp_client_init()$/;"	f
halexp_client_init	libptpnetif/hal_client.h	/^int halexp_client_init();$/;"	p	signature:()
halexp_client_try_connect	libptpnetif/hal_client.c	/^int halexp_client_try_connect(int retries, int timeout)$/;"	f	signature:(int retries, int timeout)
halexp_client_try_connect	libptpnetif/hal_client.h	/^int halexp_client_try_connect(int retries, int timeout);$/;"	p	signature:(int retries, int timeout)
halexp_get_port_state	libposix/freestanding-wrapper.c	/^int halexp_get_port_state(hexp_port_state_t *state, const char *port_name)$/;"	f	signature:(hexp_port_state_t *state, const char *port_name)
halexp_get_port_state	libptpnetif/hal_client.c	/^int halexp_get_port_state(hexp_port_state_t *state, const char *port_name)$/;"	f	signature:(hexp_port_state_t *state, const char *port_name)
halexp_get_port_state	wrsw_hal/hal_exports.h	/^extern int halexp_get_port_state(hexp_port_state_t *state, const char *port_name);$/;"	p	signature:(hexp_port_state_t *state, const char *port_name)
halexp_get_timing_state	libptpnetif/hal_client.c	/^int halexp_get_timing_state(hexp_timing_state_t *tstate)$/;"	f	signature:(hexp_timing_state_t *tstate)
halexp_get_timing_state	wrsw_hal/hal_exports.h	/^extern int halexp_get_timing_state(hexp_timing_state_t *state);$/;"	p	signature:(hexp_timing_state_t *state)
halexp_lock_cmd	libptpnetif/hal_client.c	/^int halexp_lock_cmd(const char *port_name, int command, int priority)$/;"	f	signature:(const char *port_name, int command, int priority)
halexp_lock_cmd	wrsw_hal/hal_exports.h	/^extern int halexp_lock_cmd(const char *port_name, int command, int priority);$/;"	p	signature:(const char *port_name, int command, int priority)
halexp_pps_cmd	libposix/freestanding-wrapper.c	/^int halexp_pps_cmd(int cmd, hexp_pps_params_t *params)$/;"	f	signature:(int cmd, hexp_pps_params_t *params)
halexp_pps_cmd	libptpnetif/hal_client.c	/^int halexp_pps_cmd(int cmd, hexp_pps_params_t *params)$/;"	f	signature:(int cmd, hexp_pps_params_t *params)
halexp_pps_cmd	wrsw_hal/hal_exports.h	/^extern int halexp_pps_cmd(int cmd, hexp_pps_params_t *params);$/;"	p	signature:(int cmd, hexp_pps_params_t *params)
halexp_query_ports	libptpnetif/hal_client.c	/^int halexp_query_ports(hexp_port_list_t *list)$/;"	f	signature:(hexp_port_list_t *list)
halexp_query_ports	wrsw_hal/hal_exports.h	/^extern int halexp_query_ports(hexp_port_list_t *list);$/;"	p	signature:(hexp_port_list_t *list)
halexp_reset_port	libptpnetif/hal_client.c	/^int halexp_reset_port(const char *port_name)$/;"	f	signature:(const char *port_name)
halexp_reset_port	wrsw_hal/hal_exports.h	/^extern int halexp_reset_port(const char *port_name);$/;"	p	signature:(const char *port_name)
handle	PTPWRd/protocol.c	/^void handle(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handle	PTPWRd/protocol.c	/^void handle(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
handle	PTPWRd/ptpd.h	/^extern void handle(RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(RunTimeOpts*,PtpPortDS*)
handleAnnounce	PTPWRd/protocol.c	/^void handleAnnounce(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleAnnounce	PTPWRd/protocol.c	/^void handleAnnounce(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handleDelayReq	PTPWRd/protocol.c	/^void handleDelayReq(MsgHeader *header,Octet *msgIbuf,ssize_t length,Boolean isFromSelf,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,Octet *msgIbuf,ssize_t length,Boolean isFromSelf,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
handleDelayReq	PTPWRd/protocol.c	/^void handleDelayReq(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handleDelayResp	PTPWRd/protocol.c	/^void handleDelayResp(MsgHeader *header,Octet *msgIbuf,ssize_t length,Boolean isFromSelf,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,Octet *msgIbuf,ssize_t length,Boolean isFromSelf,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
handleDelayResp	PTPWRd/protocol.c	/^void handleDelayResp(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handleFollowUp	PTPWRd/protocol.c	/^void handleFollowUp(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleFollowUp	PTPWRd/ptpd.h	/^extern void handleFollowUp(MsgHeader *header, Octet *msgIbuf,$/;"	p	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleManagement	PTPWRd/protocol.c	/^void handleManagement(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleManagement	PTPWRd/protocol.c	/^void handleManagement(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handlePDelayReq	PTPWRd/protocol.c	/^void handlePDelayReq(MsgHeader *header, Octet *msgIbuf, ssize_t length, TimeInternal *time, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, TimeInternal *time, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handlePDelayReq	PTPWRd/protocol.c	/^void handlePDelayReq(MsgHeader*,Octet*,ssize_t,TimeInternal*,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,TimeInternal*,Boolean,RunTimeOpts*,PtpPortDS*)
handlePDelayResp	PTPWRd/protocol.c	/^void handlePDelayResp(MsgHeader *header, Octet *msgIbuf, TimeInternal *time,ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, TimeInternal *time,ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handlePDelayResp	PTPWRd/protocol.c	/^void handlePDelayResp(MsgHeader*,Octet*,TimeInternal* ,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,TimeInternal* ,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handlePDelayRespFollowUp	PTPWRd/protocol.c	/^void handlePDelayRespFollowUp(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS){$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handlePDelayRespFollowUp	PTPWRd/protocol.c	/^void handlePDelayRespFollowUp(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handleSignaling	PTPWRd/protocol.c	/^void handleSignaling(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS) $/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleSignaling	PTPWRd/protocol.c	/^void handleSignaling(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,Boolean,RunTimeOpts*,PtpPortDS*)
handleSync	PTPWRd/protocol.c	/^void handleSync(MsgHeader *header, Octet *msgIbuf, ssize_t length, TimeInternal *time, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, Octet *msgIbuf, ssize_t length, TimeInternal *time, Boolean isFromSelf, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
handleSync	PTPWRd/protocol.c	/^void handleSync(MsgHeader*,Octet*,ssize_t,TimeInternal*,Boolean,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,Octet*,ssize_t,TimeInternal*,Boolean,RunTimeOpts*,PtpPortDS*)
head	libposix/wrapper_private.h	/^  uint8_t head, tail;$/;"	m	struct:__anon64	access:public
header	PTPWRd/datatypes.h	/^	MsgHeader    header;$/;"	m	struct:__anon56	access:public
hexp_port_list_t	wrsw_hal/hal_exports.h	/^} hexp_port_list_t;$/;"	t	typeref:struct:__anon67
hexp_port_state_t	wrsw_hal/hal_exports.h	/^} hexp_port_state_t;$/;"	t	typeref:struct:__anon66
hexp_pps_params_t	wrsw_hal/hal_exports.h	/^} hexp_pps_params_t;$/;"	t	typeref:struct:__anon65
hexp_timing_state_t	wrsw_hal/hal_exports.h	/^} hexp_timing_state_t;$/;"	t	typeref:struct:__anon68
htonl	libposix/ptpd-wrappers.h	/^static inline uint32_t htonl(uint32_t x) {return x;}$/;"	f	signature:(uint32_t x)
htonl	libposix/ptpd-wrappers.h	/^static inline uint32_t htonl(uint32_t x)$/;"	f	signature:(uint32_t x)
htons	libposix/ptpd-wrappers.h	/^static inline uint16_t htons(uint16_t x) { return (x << 8) | (x >> 8); }$/;"	f	signature:(uint16_t x)
htons	libposix/ptpd-wrappers.h	/^static inline uint16_t htons(uint16_t x) {return x;}$/;"	f	signature:(uint16_t x)
hw_addr	wrsw_hal/hal_exports.h	/^  uint8_t hw_addr[6];$/;"	m	struct:__anon66	access:public
hw_index	wrsw_hal/hal_exports.h	/^  int hw_index;$/;"	m	struct:__anon66	access:public
hwtimeraw	libptpnetif/ptpd_netif.c	/^	struct timespec hwtimeraw;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
hwtimetrans	libptpnetif/ptpd_netif.c	/^	struct timespec hwtimetrans;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
iFaceName_display	PTPWRd/display.c	/^void iFaceName_display(Octet *iFaceName){$/;"	f	signature:(Octet *iFaceName)
iFaceName_display	PTPWRd/ptpd.h	/^void iFaceName_display(Octet*);$/;"	p	signature:(Octet*)
if_index	libposix/wrapper_private.h	/^	int if_index;$/;"	m	struct:my_socket	access:public
if_index	libptpnetif/ptpd_netif.c	/^	int if_index;$/;"	m	struct:my_socket	file:	access:public
if_name	PTPWRd/dep/datatypes_dep.h	/^	char if_name[16];$/;"	m	struct:__anon17	access:public
if_name	libptpnetif/netif_test.c	/^  char if_name[16];$/;"	m	struct:__anon7	file:	access:public
if_name	libptpnetif/ptpd_netif.h	/^    char if_name[IFACE_NAME_LEN];$/;"	m	struct:__anon1	access:public
ifaceName	PTPWRd/datatypes.h	/^	Octet		ifaceName[MAX_PORT_NUMBER][IFACE_NAME_LENGTH];$/;"	m	struct:__anon61	access:public
ifaceName	PTPWRd/dep/datatypes_dep.h	/^	char ifaceName[IFACE_NAME_LENGTH];$/;"	m	struct:__anon16	access:public
in_use	libposix/wrapper_private.h	/^	int in_use;$/;"	m	struct:my_socket	access:public
inboundLatency	PTPWRd/datatypes.h	/^	TimeInternal	inboundLatency, outboundLatency;$/;"	m	struct:__anon61	access:public
initClock	PTPWRd/dep/ptpd_dep.h	/^void initClock(RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(RunTimeOpts*,PtpPortDS*)
initClock	PTPWRd/dep/servo.c	/^void initClock(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
initDataClock	PTPWRd/bmc.c	/^void initDataClock(RunTimeOpts *rtOpts, PtpClockDS *ptpClockDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpClockDS *ptpClockDS)
initDataClock	PTPWRd/ptpd.h	/^void initDataClock(RunTimeOpts*, PtpClockDS*);$/;"	p	signature:(RunTimeOpts*, PtpClockDS*)
initDataPort	PTPWRd/bmc.c	/^void initDataPort(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
initDataPort	PTPWRd/ptpd.h	/^void initDataPort(RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(RunTimeOpts*,PtpPortDS*)
initWrData	PTPWRd/wr_protocol.c	/^void initWrData(PtpPortDS *ptpPortDS, Enumeration8 mode)$/;"	f	signature:(PtpPortDS *ptpPortDS, Enumeration8 mode)
initWrData	PTPWRd/wr_protocol.h	/^void initWrData(PtpPortDS *ptpPortDS, Enumeration8 mode);$/;"	p	signature:(PtpPortDS *ptpPortDS, Enumeration8 mode)
inside_range	libposix/freestanding-wrapper.c	/^static inline int inside_range(int min, int max, int x)$/;"	f	file:	signature:(int min, int max, int x)
inside_range	libptpnetif/ptpd_netif.c	/^static inline int inside_range(int min, int max, int x)$/;"	f	file:	signature:(int min, int max, int x)
integer64_display	PTPWRd/display.c	/^void integer64_display (Integer64 *bigint){$/;"	f	signature:(Integer64 *bigint)
integer64_display	PTPWRd/ptpd.h	/^void integer64_display (Integer64*);$/;"	p	signature:(Integer64*)
integer64_to_internalTime	PTPWRd/arith.c	/^void integer64_to_internalTime(Integer64 bigint,TimeInternal *internal)$/;"	f	signature:(Integer64 bigint,TimeInternal *internal)
integer64_to_internalTime	PTPWRd/ptpd.h	/^void integer64_to_internalTime(Integer64,TimeInternal*);$/;"	p	signature:(Integer64,TimeInternal*)
interval	PTPWRd/datatypes.h	/^	int interval;$/;"	m	struct:__anon55	access:public
intervalTimer_display	PTPWRd/display.c	/^void intervalTimer_display(IntervalTimer *ptimer)$/;"	f	signature:(IntervalTimer *ptimer)
intervalTimer_display	PTPWRd/ptpd.h	/^void intervalTimer_display(IntervalTimer*);$/;"	p	signature:(IntervalTimer*)
ip	libptpnetif/ptpd_netif.h	/^    ipv4_addr_t ip;$/;"	m	struct:__anon1	access:public
ipv4_addr_t	libptpnetif/ptpd_netif.h	/^typedef uint32_t ipv4_addr_t;$/;"	t
isPortUp	PTPWRd/wr_protocol.c	/^Boolean isPortUp(NetPath *netPath)$/;"	f	signature:(NetPath *netPath)
isPortUp	PTPWRd/wr_protocol.h	/^Boolean isPortUp(NetPath *netPath);$/;"	p	signature:(NetPath *netPath)
isSecondarySlave	PTPWRd/datatypes.h	/^	Boolean isSecondarySlave;$/;"	m	struct:__anon58	access:public
is_locked	wrsw_hal/hal_exports.h	/^  int is_locked;$/;"	m	struct:__anon66	access:public
is_master	libptpnetif/netif_test.c	/^    int is_master;$/;"	m	struct:__anon2::__anon4	file:	access:public
issueAnnounce	PTPWRd/protocol.c	/^void issueAnnounce(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueAnnounce	PTPWRd/protocol.c	/^void issueAnnounce(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
issueDelayReq	PTPWRd/protocol.c	/^void issueDelayReq(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueDelayReq	PTPWRd/protocol.c	/^void issueDelayReq(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
issueDelayResp	PTPWRd/protocol.c	/^void issueDelayResp(MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueDelayResp	PTPWRd/protocol.c	/^void issueDelayResp(MsgHeader*,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,RunTimeOpts*,PtpPortDS*)
issueFollowup	PTPWRd/protocol.c	/^void issueFollowup(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueFollowup	PTPWRd/protocol.c	/^void issueFollowup(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
issueManagement	PTPWRd/protocol.c	/^void issueManagement(MsgHeader*,MsgManagement*,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(MsgHeader*,MsgManagement*,RunTimeOpts*,PtpPortDS*)
issuePDelayReq	PTPWRd/protocol.c	/^void issuePDelayReq(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issuePDelayReq	PTPWRd/protocol.c	/^void issuePDelayReq(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
issuePDelayResp	PTPWRd/protocol.c	/^void issuePDelayResp(TimeInternal *time,MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(TimeInternal *time,MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issuePDelayResp	PTPWRd/protocol.c	/^void issuePDelayResp(TimeInternal*,MsgHeader*,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(TimeInternal*,MsgHeader*,RunTimeOpts*,PtpPortDS*)
issuePDelayRespFollowUp	PTPWRd/protocol.c	/^void issuePDelayRespFollowUp(TimeInternal *time,MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(TimeInternal *time,MsgHeader *header,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issuePDelayRespFollowUp	PTPWRd/protocol.c	/^void issuePDelayRespFollowUp(TimeInternal*,MsgHeader*,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(TimeInternal*,MsgHeader*,RunTimeOpts*,PtpPortDS*)
issueSync	PTPWRd/protocol.c	/^void issueSync(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueSync	PTPWRd/protocol.c	/^void issueSync(RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(RunTimeOpts*,PtpPortDS*)
issueWRSignalingMsg	PTPWRd/protocol.c	/^void issueWRSignalingMsg(Enumeration16 wrMessageID,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)$/;"	f	signature:(Enumeration16 wrMessageID,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
issueWRSignalingMsg	PTPWRd/protocol.c	/^void issueWRSignalingMsg(Enumeration16,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(Enumeration16,RunTimeOpts*,PtpPortDS*)
issueWRSignalingMsg	PTPWRd/ptpd.h	/^extern void issueWRSignalingMsg(Enumeration16 wrMessageID,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS);$/;"	p	signature:(Enumeration16 wrMessageID,RunTimeOpts *rtOpts,PtpPortDS *ptpPortDS)
lastSyncCorrectionField	PTPWRd/datatypes.h	/^    TimeInternal    lastSyncCorrectionField;$/;"	m	struct:__anon58	access:public
last_tics	PTPWRd/dep/datatypes_dep.h	/^	uint64_t last_tics;$/;"	m	struct:__anon17	access:public
leap59	PTPWRd/datatypes.h	/^	Boolean leap59;$/;"	m	struct:__anon57	access:public
leap61	PTPWRd/datatypes.h	/^	Boolean leap61;$/;"	m	struct:__anon57	access:public
lengthField	PTPWRd/datatypes.h	/^	UInteger16 lengthField;$/;"	m	struct:__anon40	access:public
lengthField	PTPWRd/datatypes.h	/^	UInteger8 lengthField;$/;"	m	struct:__anon41	access:public
linkUP	PTPWRd/datatypes.h	/^	Boolean linkUP;$/;"	m	struct:__anon58	access:public
local_mac	libposix/wrapper_private.h	/^	mac_addr_t local_mac;$/;"	m	struct:my_socket	access:public
local_mac	libptpnetif/ptpd_netif.c	/^	mac_addr_t local_mac;$/;"	m	struct:my_socket	file:	access:public
lock_priority	wrsw_hal/hal_exports.h	/^  int lock_priority;$/;"	m	struct:__anon66	access:public
locked_port	wrsw_hal/hal_exports.h	/^  int locked_port;$/;"	m	struct:__anon68	access:public
logAnnounceInterval	PTPWRd/datatypes.h	/^	Integer8 logAnnounceInterval;$/;"	m	struct:__anon58	access:public
logMessageInterval	PTPWRd/datatypes.h	/^	Integer8 logMessageInterval;$/;"	m	struct:__anon43	access:public
logMinDelayReqInterval	PTPWRd/datatypes.h	/^	Integer8 logMinDelayReqInterval;$/;"	m	struct:__anon58	access:public
logMinPdelayReqInterval	PTPWRd/datatypes.h	/^	Integer8 logMinPdelayReqInterval;$/;"	m	struct:__anon58	access:public
logSyncInterval	PTPWRd/datatypes.h	/^	Integer8 logSyncInterval;$/;"	m	struct:__anon58	access:public
log_file	libptpnetif/netif_test.c	/^FILE *log_file = NULL;$/;"	v
logf	libminipc/minipc-int.h	/^	FILE *logf;$/;"	m	struct:mpc_link	access:public
lookupCommunicationTechnology	PTPWRd/dep/net.c	/^UInteger8 lookupCommunicationTechnology(UInteger8 communicationTechnology)$/;"	f	signature:(UInteger8 communicationTechnology)
lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon11	access:public
lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon12	access:public
lsb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int lsb;$/;"	m	struct:__anon13	access:public
m1	PTPWRd/bmc.c	/^void m1(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
m1	PTPWRd/ptpd.h	/^void m1(PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
m3	PTPWRd/bmc.c	/^void m3(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
m3	PTPWRd/ptpd.h	/^void m3(PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
mac	libptpnetif/ptpd_netif.h	/^    mac_addr_t mac;$/;"	m	struct:__anon1	access:public
mac_addr_t	libptpnetif/ptpd_netif.h	/^typedef uint8_t mac_addr_t[6];$/;"	t
mac_dest	libptpnetif/ptpd_netif.h	/^    mac_addr_t mac_dest;$/;"	m	struct:__anon1	access:public
magic	libminipc/minipc-int.h	/^	int magic;$/;"	m	struct:mpc_link	access:public
main	PTPWRd/ptpd.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	libptpnetif/netif_test.c	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
manage	PTPWRd/datatypes.h	/^		MsgManagement  manage;$/;"	m	union:__anon58::__anon59	access:public
masterOnly	PTPWRd/datatypes.h	/^	Boolean		masterOnly;$/;"	m	struct:__anon61	access:public
master_delta_rx	libptpnetif/netif_test.c	/^    uint32_t master_delta_rx;$/;"	m	struct:__anon2::__anon3	file:	access:public
master_delta_tx	libptpnetif/netif_test.c	/^    uint32_t master_delta_tx;$/;"	m	struct:__anon2::__anon3	file:	access:public
master_fsm	libptpnetif/netif_test.c	/^void master_fsm(char *if_name)$/;"	f	signature:(char *if_name)
master_to_slave_delay	PTPWRd/datatypes.h	/^	TimeInternal  master_to_slave_delay;$/;"	m	struct:__anon58	access:public
max_foreign_records	PTPWRd/datatypes.h	/^	Integer16	max_foreign_records;$/;"	m	struct:__anon61	access:public
max_foreign_records	PTPWRd/datatypes.h	/^	Integer16  max_foreign_records;$/;"	m	struct:__anon58	access:public
meanPathDelay	PTPWRd/datatypes.h	/^	TimeInternal meanPathDelay;$/;"	m	struct:__anon57	access:public
memaddr	libminipc/minipc-int.h	/^	void *memaddr;$/;"	m	struct:mpc_link	access:public
memsize	libminipc/minipc-int.h	/^	int memsize;$/;"	m	struct:mpc_link	access:public
messageLength	PTPWRd/datatypes.h	/^	UInteger16 messageLength;$/;"	m	struct:__anon43	access:public
messageType	PTPWRd/datatypes.h	/^	Enumeration4 messageType;$/;"	m	struct:__anon43	access:public
message_activity	PTPWRd/datatypes.h	/^	Boolean message_activity;$/;"	m	struct:__anon58	access:public
min	libposix/freestanding-wrapper.c	17;"	d	file:
minipc_at	libminipc/minipc.h	/^enum minipc_at {$/;"	g
minipc_call	libminipc/minipc-client.c	/^int minipc_call(struct minipc_ch *ch, int millisec_timeout,$/;"	f	signature:(struct minipc_ch *ch, int millisec_timeout, const struct minipc_pd *pd, void *ret, ...)
minipc_call	libminipc/minipc.h	/^int minipc_call(struct minipc_ch *ch, int millisec_timeout,$/;"	p	signature:(struct minipc_ch *ch, int millisec_timeout, const struct minipc_pd *pd, void *ret, ...)
minipc_ch	libminipc/minipc.h	/^struct minipc_ch {$/;"	s
minipc_ch::fd	libminipc/minipc.h	/^	int fd;$/;"	m	struct:minipc_ch	access:public
minipc_client_create	libminipc/minipc-client.c	/^struct minipc_ch *minipc_client_create(const char *name, int f)$/;"	f	signature:(const char *name, int f)
minipc_client_create	libminipc/minipc.h	/^struct minipc_ch *minipc_client_create(const char *name, int flags);$/;"	p	signature:(const char *name, int flags)
minipc_close	libminipc/minipc-core.c	/^int minipc_close(struct minipc_ch *ch)$/;"	f	signature:(struct minipc_ch *ch)
minipc_close	libminipc/minipc.h	/^int minipc_close(struct minipc_ch *ch);$/;"	p	signature:(struct minipc_ch *ch)
minipc_export	libminipc/minipc-server.c	/^int minipc_export(struct minipc_ch *ch, const struct minipc_pd *pd)$/;"	f	signature:(struct minipc_ch *ch, const struct minipc_pd *pd)
minipc_export	libminipc/minipc.h	/^int minipc_export(struct minipc_ch *ch, const struct minipc_pd *pd);$/;"	p	signature:(struct minipc_ch *ch, const struct minipc_pd *pd)
minipc_f	libminipc/minipc.h	/^typedef int (minipc_f)(const struct minipc_pd *, uint32_t *args, void *retval);$/;"	t
minipc_fileno	libminipc/minipc.h	/^static inline int minipc_fileno(struct minipc_ch *ch) {return ch->fd;}$/;"	f	signature:(struct minipc_ch *ch)
minipc_get_next_arg	libminipc/minipc-server.c	/^uint32_t *minipc_get_next_arg(uint32_t arg[], uint32_t atype)$/;"	f	signature:(uint32_t arg[], uint32_t atype)
minipc_get_next_arg	libminipc/minipc.h	/^uint32_t *minipc_get_next_arg(uint32_t arg[], uint32_t atype);$/;"	p	signature:(uint32_t arg[], uint32_t atype)
minipc_pd	libminipc/minipc.h	/^struct minipc_pd {$/;"	s
minipc_pd::args	libminipc/minipc.h	/^	uint32_t args[];		\/* zero-terminated *\/$/;"	m	struct:minipc_pd	access:public
minipc_pd::f	libminipc/minipc.h	/^	minipc_f *f;			\/* pointer to the function *\/$/;"	m	struct:minipc_pd	access:public
minipc_pd::flags	libminipc/minipc.h	/^	uint32_t flags;$/;"	m	struct:minipc_pd	access:public
minipc_pd::name	libminipc/minipc.h	/^	char name[MINIPC_MAX_NAME];	\/* name of the function *\/$/;"	m	struct:minipc_pd	access:public
minipc_pd::retval	libminipc/minipc.h	/^	uint32_t retval;		\/* type of return value *\/$/;"	m	struct:minipc_pd	access:public
minipc_server_action	libminipc/minipc-server.c	/^int minipc_server_action(struct minipc_ch *ch, int timeoutms)$/;"	f	signature:(struct minipc_ch *ch, int timeoutms)
minipc_server_action	libminipc/minipc.h	/^int minipc_server_action(struct minipc_ch *ch, int timeoutms);$/;"	p	signature:(struct minipc_ch *ch, int timeoutms)
minipc_server_create	libminipc/minipc-server.c	/^struct minipc_ch *minipc_server_create(const char *name, int f)$/;"	f	signature:(const char *name, int f)
minipc_server_create	libminipc/minipc.h	/^struct minipc_ch *minipc_server_create(const char *name, int flags);$/;"	p	signature:(const char *name, int flags)
minipc_server_get_fdset	libminipc/minipc-server.c	/^int minipc_server_get_fdset(struct minipc_ch *ch, fd_set *setptr)$/;"	f	signature:(struct minipc_ch *ch, fd_set *setptr)
minipc_server_get_fdset	libminipc/minipc.h	/^int minipc_server_get_fdset(struct minipc_ch *ch, fd_set *setptr);$/;"	p	signature:(struct minipc_ch *ch, fd_set *setptr)
minipc_set_logfile	libminipc/minipc-core.c	/^int minipc_set_logfile(struct minipc_ch *ch, FILE *logf)$/;"	f	signature:(struct minipc_ch *ch, FILE *logf)
minipc_set_logfile	libminipc/minipc.h	/^int minipc_set_logfile(struct minipc_ch *ch, FILE *logf);$/;"	p	signature:(struct minipc_ch *ch, FILE *logf)
minipc_set_poll	libminipc/minipc-core.c	/^int minipc_set_poll(int usec)$/;"	f	signature:(int usec)
minipc_set_poll	libminipc/minipc.h	/^int minipc_set_poll(int usec);$/;"	p	signature:(int usec)
minipc_unexport	libminipc/minipc-server.c	/^int minipc_unexport(struct minipc_ch *ch, const struct minipc_pd *pd)$/;"	f	signature:(struct minipc_ch *ch, const struct minipc_pd *pd)
minipc_unexport	libminipc/minipc.h	/^int minipc_unexport(struct minipc_ch *ch, const struct minipc_pd *pd);$/;"	p	signature:(struct minipc_ch *ch, const struct minipc_pd *pd)
missed_iters	PTPWRd/dep/datatypes_dep.h	/^	int missed_iters;$/;"	m	struct:__anon17	access:public
mode	wrsw_hal/hal_exports.h	/^  int mode;$/;"	m	struct:__anon66	access:public
mpc_flist	libminipc/minipc-int.h	/^struct mpc_flist {$/;"	s
mpc_flist::next	libminipc/minipc-int.h	/^	struct mpc_flist *next;$/;"	m	struct:mpc_flist	typeref:struct:mpc_flist::mpc_flist	access:public
mpc_flist::pd	libminipc/minipc-int.h	/^	const struct minipc_pd *pd;$/;"	m	struct:mpc_flist	typeref:struct:mpc_flist::minipc_pd	access:public
mpc_free_flist	libminipc/minipc-core.c	/^void mpc_free_flist(struct mpc_link *link, struct mpc_flist *flist)$/;"	f	signature:(struct mpc_link *link, struct mpc_flist *flist)
mpc_free_flist	libminipc/minipc-int.h	/^extern void mpc_free_flist(struct mpc_link *link, struct mpc_flist *flist);$/;"	p	signature:(struct mpc_link *link, struct mpc_flist *flist)
mpc_get_link	libminipc/minipc-int.h	/^static inline struct mpc_link *mpc_get_link(struct minipc_ch *ch)$/;"	f	signature:(struct minipc_ch *ch)
mpc_handle_client	libminipc/minipc-server.c	/^static void mpc_handle_client(struct mpc_link *link, int pos, int fd)$/;"	f	file:	signature:(struct mpc_link *link, int pos, int fd)
mpc_handle_connection	libminipc/minipc-server.c	/^static void mpc_handle_connection(struct mpc_link *link, int fd)$/;"	f	file:	signature:(struct mpc_link *link, int fd)
mpc_link	libminipc/minipc-int.h	/^struct mpc_link {$/;"	s
mpc_link::addr	libminipc/minipc-int.h	/^	struct sockaddr_un addr;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::sockaddr_un	access:public
mpc_link::ch	libminipc/minipc-int.h	/^	struct minipc_ch ch;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::minipc_ch	access:public
mpc_link::fd	libminipc/minipc-int.h	/^	int fd[MINIPC_MAX_CLIENTS];$/;"	m	struct:mpc_link	access:public
mpc_link::fdset	libminipc/minipc-int.h	/^	fd_set fdset;$/;"	m	struct:mpc_link	access:public
mpc_link::flags	libminipc/minipc-int.h	/^	int flags;$/;"	m	struct:mpc_link	access:public
mpc_link::flist	libminipc/minipc-int.h	/^	struct mpc_flist *flist;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::mpc_flist	access:public
mpc_link::logf	libminipc/minipc-int.h	/^	FILE *logf;$/;"	m	struct:mpc_link	access:public
mpc_link::magic	libminipc/minipc-int.h	/^	int magic;$/;"	m	struct:mpc_link	access:public
mpc_link::memaddr	libminipc/minipc-int.h	/^	void *memaddr;$/;"	m	struct:mpc_link	access:public
mpc_link::memsize	libminipc/minipc-int.h	/^	int memsize;$/;"	m	struct:mpc_link	access:public
mpc_link::name	libminipc/minipc-int.h	/^	char name[MINIPC_MAX_NAME];$/;"	m	struct:mpc_link	access:public
mpc_link::nextl	libminipc/minipc-int.h	/^	struct mpc_link *nextl;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::mpc_link	access:public
mpc_link::pid	libminipc/minipc-int.h	/^	int pid;$/;"	m	struct:mpc_link	access:public
mpc_rep_packet	libminipc/minipc-int.h	/^struct mpc_rep_packet {$/;"	s
mpc_rep_packet::type	libminipc/minipc-int.h	/^	uint32_t type;$/;"	m	struct:mpc_rep_packet	access:public
mpc_rep_packet::val	libminipc/minipc-int.h	/^	uint8_t val[MINIPC_MAX_REPLY];$/;"	m	struct:mpc_rep_packet	access:public
mpc_req_packet	libminipc/minipc-int.h	/^struct mpc_req_packet {$/;"	s
mpc_req_packet::args	libminipc/minipc-int.h	/^	uint32_t args[MINIPC_MAX_ARGUMENTS];$/;"	m	struct:mpc_req_packet	access:public
mpc_req_packet::name	libminipc/minipc-int.h	/^	char name[MINIPC_MAX_NAME];$/;"	m	struct:mpc_req_packet	access:public
mpc_shmem	libminipc/minipc-int.h	/^struct mpc_shmem {$/;"	s
mpc_shmem::nreply	libminipc/minipc-int.h	/^	uint32_t	nreply;		\/* incremented at each reply *\/$/;"	m	struct:mpc_shmem	access:public
mpc_shmem::nrequest	libminipc/minipc-int.h	/^	uint32_t	nrequest;	\/* incremented at each request *\/$/;"	m	struct:mpc_shmem	access:public
mpc_shmem::reply	libminipc/minipc-int.h	/^	struct mpc_rep_packet	reply;$/;"	m	struct:mpc_shmem	typeref:struct:mpc_shmem::mpc_rep_packet	access:public
mpc_shmem::request	libminipc/minipc-int.h	/^	struct mpc_req_packet	request;$/;"	m	struct:mpc_shmem	typeref:struct:mpc_shmem::mpc_req_packet	access:public
msb	PTPWRd/dep/datatypes_dep.h	/^	int msb;$/;"	m	struct:__anon12	access:public
msb	PTPWRd/dep/datatypes_dep.h	/^	unsigned int msb;$/;"	m	struct:__anon13	access:public
msb	PTPWRd/dep/datatypes_dep.h	/^	unsigned short msb;$/;"	m	struct:__anon11	access:public
msgAnnounce_display	PTPWRd/display.c	/^void msgAnnounce_display(MsgAnnounce *announce){$/;"	f	signature:(MsgAnnounce *announce)
msgAnnounce_display	PTPWRd/ptpd.h	/^void msgAnnounce_display(MsgAnnounce*);$/;"	p	signature:(MsgAnnounce*)
msgFollowUp_display	PTPWRd/display.c	/^void msgFollowUp_display(MsgFollowUp *follow){$/;"	f	signature:(MsgFollowUp *follow)
msgFollowUp_display	PTPWRd/ptpd.h	/^void msgFollowUp_display(MsgFollowUp*);$/;"	p	signature:(MsgFollowUp*)
msgHeader_display	PTPWRd/display.c	/^void msgHeader_display(MsgHeader *header){$/;"	f	signature:(MsgHeader *header)
msgHeader_display	PTPWRd/ptpd.h	/^void msgHeader_display(MsgHeader*);$/;"	p	signature:(MsgHeader*)
msgIbuf	PTPWRd/datatypes.h	/^	Octet msgIbuf[PACKET_SIZE];$/;"	m	struct:__anon58	access:public
msgIsFromCurrentParent	PTPWRd/protocol.c	/^Boolean msgIsFromCurrentParent(MsgHeader *, PtpPortDS *);$/;"	p	file:	signature:(MsgHeader *, PtpPortDS *)
msgIsFromCurrentParent	PTPWRd/protocol.c	/^Boolean msgIsFromCurrentParent(MsgHeader *header, PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header, PtpPortDS *ptpPortDS)
msgObuf	PTPWRd/datatypes.h	/^	Octet msgObuf[PACKET_SIZE];$/;"	m	struct:__anon58	access:public
msgPDelayReq_display	PTPWRd/display.c	/^void msgPDelayReq_display(MsgPDelayReq *preq){$/;"	f	signature:(MsgPDelayReq *preq)
msgPDelayReq_display	PTPWRd/ptpd.h	/^void msgPDelayReq_display(MsgPDelayReq*);$/;"	p	signature:(MsgPDelayReq*)
msgPDelayRespFollowUp_display	PTPWRd/display.c	/^void msgPDelayRespFollowUp_display(MsgPDelayRespFollowUp *prespfollow){$/;"	f	signature:(MsgPDelayRespFollowUp *prespfollow)
msgPDelayResp_display	PTPWRd/display.c	/^void msgPDelayResp_display(MsgPDelayResp *presp){$/;"	f	signature:(MsgPDelayResp *presp)
msgPackAnnounce	PTPWRd/dep/msg.c	/^void msgPackAnnounce(void *buf,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,PtpPortDS *ptpPortDS)
msgPackAnnounce	PTPWRd/dep/ptpd_dep.h	/^void msgPackAnnounce(void*,PtpPortDS*);$/;"	p	signature:(void*,PtpPortDS*)
msgPackDelayReq	PTPWRd/dep/msg.c	/^void msgPackDelayReq(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)
msgPackDelayReq	PTPWRd/ptpd.h	/^extern void msgPackDelayReq(void *buf,Timestamp *originTimestamp,$/;"	p	signature:(void *buf,Timestamp *originTimestamp, PtpPortDS *ptpPortDS)
msgPackDelayResp	PTPWRd/dep/msg.c	/^void msgPackDelayResp(void *buf,MsgHeader *header,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,MsgHeader *header,PtpPortDS *ptpPortDS)
msgPackDelayResp	PTPWRd/ptpd.h	/^extern void msgPackDelayResp(void *buf,MsgHeader *header,PtpPortDS *ptpPortDS);$/;"	p	signature:(void *buf,MsgHeader *header,PtpPortDS *ptpPortDS)
msgPackFollowUp	PTPWRd/dep/msg.c	/^void msgPackFollowUp(void *buf,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,PtpPortDS *ptpPortDS)
msgPackFollowUp	PTPWRd/dep/ptpd_dep.h	/^void msgPackFollowUp(void*,PtpPortDS*);$/;"	p	signature:(void*,PtpPortDS*)
msgPackHeader	PTPWRd/dep/msg.c	/^void msgPackHeader(void *buf, PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf, PtpPortDS *ptpPortDS)
msgPackHeader	PTPWRd/dep/ptpd_dep.h	/^void msgPackHeader(void*,PtpPortDS*);$/;"	p	signature:(void*,PtpPortDS*)
msgPackManagement	PTPWRd/dep/ptpd_dep.h	/^UInteger16 msgPackManagement(void*,MsgManagement*,PtpPortDS*);$/;"	p	signature:(void*,MsgManagement*,PtpPortDS*)
msgPackManagementResponse	PTPWRd/dep/ptpd_dep.h	/^UInteger16 msgPackManagementResponse(void*,MsgHeader*,MsgManagement*,PtpPortDS*);$/;"	p	signature:(void*,MsgHeader*,MsgManagement*,PtpPortDS*)
msgPackPDelayReq	PTPWRd/dep/msg.c	/^void msgPackPDelayReq(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)
msgPackPDelayReq	PTPWRd/dep/ptpd_dep.h	/^void msgPackPDelayReq(void*,Timestamp*,PtpPortDS*);$/;"	p	signature:(void*,Timestamp*,PtpPortDS*)
msgPackPDelayResp	PTPWRd/dep/msg.c	/^void msgPackPDelayResp(void *buf,MsgHeader *header,Timestamp *requestReceiptTimestamp,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,MsgHeader *header,Timestamp *requestReceiptTimestamp,PtpPortDS *ptpPortDS)
msgPackPDelayResp	PTPWRd/dep/ptpd_dep.h	/^void msgPackPDelayResp(void*,MsgHeader*,Timestamp*,PtpPortDS*);$/;"	p	signature:(void*,MsgHeader*,Timestamp*,PtpPortDS*)
msgPackPDelayRespFollowUp	PTPWRd/dep/msg.c	/^void msgPackPDelayRespFollowUp(void *buf,MsgHeader *header,Timestamp *responseOriginTimestamp,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,MsgHeader *header,Timestamp *responseOriginTimestamp,PtpPortDS *ptpPortDS)
msgPackPDelayRespFollowUp	PTPWRd/dep/ptpd_dep.h	/^void msgPackPDelayRespFollowUp(void*,MsgHeader*,Timestamp*,PtpPortDS*);$/;"	p	signature:(void*,MsgHeader*,Timestamp*,PtpPortDS*)
msgPackSync	PTPWRd/dep/msg.c	/^void msgPackSync(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)$/;"	f	signature:(void *buf,Timestamp *originTimestamp,PtpPortDS *ptpPortDS)
msgPackSync	PTPWRd/dep/ptpd_dep.h	/^void msgPackSync(void*,Timestamp*,PtpPortDS*);$/;"	p	signature:(void*,Timestamp*,PtpPortDS*)
msgPackWRSignalingMsg	PTPWRd/dep/msg.c	/^UInteger16 msgPackWRSignalingMsg(void *buf,PtpPortDS *ptpPortDS, Enumeration16 wrMessageID)$/;"	f	signature:(void *buf,PtpPortDS *ptpPortDS, Enumeration16 wrMessageID)
msgPackWRSignalingMsg	PTPWRd/ptpd.h	/^extern UInteger16 msgPackWRSignalingMsg(void *buf,PtpPortDS *ptpPortDS, Enumeration16 wrMessageID);$/;"	p	signature:(void *buf,PtpPortDS *ptpPortDS, Enumeration16 wrMessageID)
msgSync_display	PTPWRd/display.c	/^void msgSync_display(MsgSync *sync){$/;"	f	signature:(MsgSync *sync)
msgSync_display	PTPWRd/ptpd.h	/^void msgSync_display(MsgSync *sync);$/;"	p	signature:(MsgSync *sync)
msgTmp	PTPWRd/datatypes.h	/^	} msgTmp;$/;"	m	struct:__anon58	typeref:union:__anon58::__anon59	access:public
msgTmpHeader	PTPWRd/datatypes.h	/^	MsgHeader msgTmpHeader;$/;"	m	struct:__anon58	access:public
msgTmpManagementId	PTPWRd/datatypes.h	/^	Enumeration16 msgTmpManagementId;	$/;"	m	struct:__anon58	access:public
msgTmpWrMessageID	PTPWRd/datatypes.h	/^	Enumeration16 msgTmpWrMessageID;	$/;"	m	struct:__anon58	access:public
msgUnloadManagement	PTPWRd/dep/ptpd_dep.h	/^UInteger8 msgUnloadManagement(void*,MsgManagement*,PtpPortDS*,RunTimeOpts*);$/;"	p	signature:(void*,MsgManagement*,PtpPortDS*,RunTimeOpts*)
msgUnpackAnnounce	PTPWRd/dep/msg.c	/^void msgUnpackAnnounce(void *buf,MsgAnnounce *announce,  MsgHeader *header)$/;"	f	signature:(void *buf,MsgAnnounce *announce, MsgHeader *header)
msgUnpackAnnounce	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackAnnounce (void*,MsgAnnounce*, MsgHeader*);$/;"	p	signature:(void*,MsgAnnounce*, MsgHeader*)
msgUnpackDelayReq	PTPWRd/dep/msg.c	/^void msgUnpackDelayReq(void *buf,MsgDelayReq *delayreq)$/;"	f	signature:(void *buf,MsgDelayReq *delayreq)
msgUnpackDelayResp	PTPWRd/dep/msg.c	/^void msgUnpackDelayResp(void *buf,MsgDelayResp *resp)$/;"	f	signature:(void *buf,MsgDelayResp *resp)
msgUnpackDelayResp	PTPWRd/ptpd.h	/^extern void msgUnpackDelayResp(void *buf,MsgDelayResp *resp);$/;"	p	signature:(void *buf,MsgDelayResp *resp)
msgUnpackFollowUp	PTPWRd/dep/msg.c	/^void msgUnpackFollowUp(void *buf,MsgFollowUp *follow)$/;"	f	signature:(void *buf,MsgFollowUp *follow)
msgUnpackFollowUp	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackFollowUp(void*,MsgFollowUp*);$/;"	p	signature:(void*,MsgFollowUp*)
msgUnpackHeader	PTPWRd/dep/msg.c	/^void msgUnpackHeader(void *buf, MsgHeader *header)$/;"	f	signature:(void *buf, MsgHeader *header)
msgUnpackHeader	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackHeader(void*,MsgHeader*);$/;"	p	signature:(void*,MsgHeader*)
msgUnpackManagement	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackManagement(void*,MsgManagement*);$/;"	p	signature:(void*,MsgManagement*)
msgUnpackManagementPayload	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackManagementPayload(void *buf, MsgManagement *manage);$/;"	p	signature:(void *buf, MsgManagement *manage)
msgUnpackPDelayReq	PTPWRd/dep/msg.c	/^void msgUnpackPDelayReq(void *buf,MsgPDelayReq *pdelayreq)$/;"	f	signature:(void *buf,MsgPDelayReq *pdelayreq)
msgUnpackPDelayReq	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackPDelayReq(void*,MsgPDelayReq*);$/;"	p	signature:(void*,MsgPDelayReq*)
msgUnpackPDelayResp	PTPWRd/dep/msg.c	/^void msgUnpackPDelayResp(void *buf,MsgPDelayResp *presp)$/;"	f	signature:(void *buf,MsgPDelayResp *presp)
msgUnpackPDelayResp	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackPDelayResp(void*,MsgPDelayResp*);$/;"	p	signature:(void*,MsgPDelayResp*)
msgUnpackPDelayRespFollowUp	PTPWRd/dep/msg.c	/^void msgUnpackPDelayRespFollowUp(void *buf,MsgPDelayRespFollowUp *prespfollow)$/;"	f	signature:(void *buf,MsgPDelayRespFollowUp *prespfollow)
msgUnpackPDelayRespFollowUp	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackPDelayRespFollowUp(void*,MsgPDelayRespFollowUp*);$/;"	p	signature:(void*,MsgPDelayRespFollowUp*)
msgUnpackSync	PTPWRd/dep/msg.c	/^void msgUnpackSync(void *buf,MsgSync *sync)$/;"	f	signature:(void *buf,MsgSync *sync)
msgUnpackSync	PTPWRd/dep/ptpd_dep.h	/^void msgUnpackSync(void*,MsgSync*);$/;"	p	signature:(void*,MsgSync*)
msgUnpackWRSignalingMsg	PTPWRd/dep/msg.c	/^void msgUnpackWRSignalingMsg(void *buf,MsgSignaling *signalingMsg, Enumeration16 *wrMessageID, PtpPortDS *ptpPortDS )$/;"	f	signature:(void *buf,MsgSignaling *signalingMsg, Enumeration16 *wrMessageID, PtpPortDS *ptpPortDS )
msgUnpackWRSignalingMsg	PTPWRd/ptpd.h	/^void msgUnpackWRSignalingMsg(void *buf,MsgSignaling *signalingMsg, Enumeration16 *wrMessageID, $/;"	p	signature:(void *buf,MsgSignaling *signalingMsg, Enumeration16 *wrMessageID, PtpPortDS *ptpPortDS )
mu	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t mu;$/;"	m	struct:__anon17	access:public
mu	PTPWRd/ptpd_exports.h	/^	int64_t mu;$/;"	m	struct:__anon9	access:public
mu	libptpnetif/netif_test.c	/^  wr_timestamp_t mu;$/;"	m	struct:__anon7	file:	access:public
multiProtocol	PTPWRd/protocol.c	/^void multiProtocol(RunTimeOpts *rtOpts,)$/;"	f	signature:(RunTimeOpts *rtOpts,)
multiProtocol	PTPWRd/ptpd.h	/^void multiProtocol(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS);$/;"	p	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
multicastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t multicastAddr;$/;"	m	struct:__anon16	access:public
my_socket	libposix/wrapper_private.h	/^struct my_socket {$/;"	s
my_socket	libptpnetif/ptpd_netif.c	/^struct my_socket {$/;"	s	file:
my_socket::bind_addr	libposix/wrapper_private.h	/^	wr_sockaddr_t bind_addr;$/;"	m	struct:my_socket	access:public
my_socket::bind_addr	libptpnetif/ptpd_netif.c	/^	wr_sockaddr_t bind_addr;$/;"	m	struct:my_socket	file:	access:public
my_socket::clock_period	libposix/wrapper_private.h	/^	uint32_t clock_period;$/;"	m	struct:my_socket	access:public
my_socket::clock_period	libptpnetif/ptpd_netif.c	/^	uint32_t clock_period;$/;"	m	struct:my_socket	file:	access:public
my_socket::dmtd_phase	libposix/wrapper_private.h	/^	uint32_t dmtd_phase;$/;"	m	struct:my_socket	access:public
my_socket::dmtd_phase	libptpnetif/ptpd_netif.c	/^	uint32_t dmtd_phase;$/;"	m	struct:my_socket	file:	access:public
my_socket::dmtd_phase_valid	libptpnetif/ptpd_netif.c	/^	int dmtd_phase_valid;$/;"	m	struct:my_socket	file:	access:public
my_socket::dmtd_update_tmo	libposix/wrapper_private.h	/^	timeout_t dmtd_update_tmo;$/;"	m	struct:my_socket	access:public
my_socket::dmtd_update_tmo	libptpnetif/ptpd_netif.c	/^	timeout_t dmtd_update_tmo;$/;"	m	struct:my_socket	file:	access:public
my_socket::fd	libptpnetif/ptpd_netif.c	/^	int fd;$/;"	m	struct:my_socket	file:	access:public
my_socket::if_index	libposix/wrapper_private.h	/^	int if_index;$/;"	m	struct:my_socket	access:public
my_socket::if_index	libptpnetif/ptpd_netif.c	/^	int if_index;$/;"	m	struct:my_socket	file:	access:public
my_socket::in_use	libposix/wrapper_private.h	/^	int in_use;$/;"	m	struct:my_socket	access:public
my_socket::local_mac	libposix/wrapper_private.h	/^	mac_addr_t local_mac;$/;"	m	struct:my_socket	access:public
my_socket::local_mac	libptpnetif/ptpd_netif.c	/^	mac_addr_t local_mac;$/;"	m	struct:my_socket	file:	access:public
my_socket::phase_transition	libposix/wrapper_private.h	/^	uint32_t phase_transition;$/;"	m	struct:my_socket	access:public
my_socket::phase_transition	libptpnetif/ptpd_netif.c	/^	uint32_t phase_transition;$/;"	m	struct:my_socket	file:	access:public
my_socket::queue	libposix/wrapper_private.h	/^  sockq_t queue;$/;"	m	struct:my_socket	access:public
n	libposix/wrapper_private.h	/^  uint8_t n;$/;"	m	struct:__anon64	access:public
name	PTPWRd/datatypes.h	/^	char name [16];$/;"	m	struct:__anon55	access:public
name	libminipc/minipc-int.h	/^	char name[MINIPC_MAX_NAME];$/;"	m	struct:mpc_link	access:public
name	libminipc/minipc-int.h	/^	char name[MINIPC_MAX_NAME];$/;"	m	struct:mpc_req_packet	access:public
name	libminipc/minipc.h	/^	char name[MINIPC_MAX_NAME];	\/* name of the function *\/$/;"	m	struct:minipc_pd	access:public
nanoSleep	PTPWRd/dep/ptpd_dep.h	/^Boolean nanoSleep(TimeInternal*);$/;"	p	signature:(TimeInternal*)
nanoseconds	PTPWRd/datatypes.h	/^	Integer32 nanoseconds;$/;"	m	struct:__anon54	access:public
nanosecondsField	PTPWRd/datatypes.h	/^	UInteger32 nanosecondsField;$/;"	m	struct:__anon36	access:public
netEnablePhaseTracking	PTPWRd/dep/net.c	/^int netEnablePhaseTracking(NetPath *netPath)$/;"	f	signature:(NetPath *netPath)
netEnablePhaseTracking	PTPWRd/dep/ptpd_dep.h	/^int netEnablePhaseTracking(NetPath*);$/;"	p	signature:(NetPath*)
netInit	PTPWRd/dep/net.c	/^Boolean netInit(NetPath *netPath, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(NetPath *netPath, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
netInit	PTPWRd/dep/ptpd_dep.h	/^Boolean netInit(NetPath*,RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(NetPath*,RunTimeOpts*,PtpPortDS*)
netPath	PTPWRd/datatypes.h	/^	NetPath netPath;$/;"	m	struct:__anon58	access:public
netPath_display	PTPWRd/display.c	/^void netPath_display(NetPath *net)$/;"	f	signature:(NetPath *net)
netPath_display	PTPWRd/ptpd.h	/^void netPath_display(NetPath*);$/;"	p	signature:(NetPath*)
netRecvMsg	PTPWRd/dep/net.c	/^ssize_t netRecvMsg(Octet *buf, NetPath *netPath, wr_timestamp_t *current_rx_ts)$/;"	f	signature:(Octet *buf, NetPath *netPath, wr_timestamp_t *current_rx_ts)
netRecvMsg	PTPWRd/dep/ptpd_dep.h	/^ssize_t netRecvMsg(Octet*, NetPath*, wr_timestamp_t*);$/;"	p	signature:(Octet*, NetPath*, wr_timestamp_t*)
netSelect	PTPWRd/dep/net.c	/^int netSelect(TimeInternal *timeout, NetPath *netPath)$/;"	f	signature:(TimeInternal *timeout, NetPath *netPath)
netSelect	PTPWRd/dep/ptpd_dep.h	/^int netSelect(TimeInternal*,NetPath*);$/;"	p	signature:(TimeInternal*,NetPath*)
netSendEvent	PTPWRd/dep/net.c	/^ssize_t netSendEvent(Octet *buf, UInteger16 length, NetPath *netPath, wr_timestamp_t *current_tx_ts)$/;"	f	signature:(Octet *buf, UInteger16 length, NetPath *netPath, wr_timestamp_t *current_tx_ts)
netSendEvent	PTPWRd/dep/ptpd_dep.h	/^ssize_t netSendEvent(Octet*, UInteger16, NetPath*, wr_timestamp_t*);$/;"	p	signature:(Octet*, UInteger16, NetPath*, wr_timestamp_t*)
netSendGeneral	PTPWRd/dep/net.c	/^ssize_t netSendGeneral(Octet *buf, UInteger16 length, NetPath *netPath)$/;"	f	signature:(Octet *buf, UInteger16 length, NetPath *netPath)
netSendGeneral	PTPWRd/dep/ptpd_dep.h	/^ssize_t netSendGeneral(Octet*,UInteger16,NetPath*);$/;"	p	signature:(Octet*,UInteger16,NetPath*)
netSendPeerEvent	PTPWRd/dep/net.c	/^ssize_t netSendPeerEvent(Octet *buf,UInteger16 length,NetPath *netPath,wr_timestamp_t *current_tx_ts)$/;"	f	signature:(Octet *buf,UInteger16 length,NetPath *netPath,wr_timestamp_t *current_tx_ts)
netSendPeerEvent	PTPWRd/dep/ptpd_dep.h	/^ssize_t netSendPeerEvent(Octet*,UInteger16,NetPath*,wr_timestamp_t*);$/;"	p	signature:(Octet*,UInteger16,NetPath*,wr_timestamp_t*)
netSendPeerGeneral	PTPWRd/dep/net.c	/^ssize_t netSendPeerGeneral(Octet *buf,UInteger16 length,NetPath *netPath)$/;"	f	signature:(Octet *buf,UInteger16 length,NetPath *netPath)
netSendPeerGeneral	PTPWRd/dep/ptpd_dep.h	/^ssize_t netSendPeerGeneral(Octet*,UInteger16,NetPath*);$/;"	p	signature:(Octet*,UInteger16,NetPath*)
netStartup	PTPWRd/dep/net.c	/^Boolean netStartup()$/;"	f
netStartup	PTPWRd/dep/ptpd_dep.h	/^Boolean netStartup();$/;"	p	signature:()
netif_dbg	libptpnetif/ptpd_netif.c	30;"	d	file:
netif_dbg	libptpnetif/ptpd_netif.c	32;"	d	file:
networkProtocol	PTPWRd/datatypes.h	/^	Enumeration16 networkProtocol;$/;"	m	struct:__anon38	access:public
next	libminipc/minipc-int.h	/^	struct mpc_flist *next;$/;"	m	struct:mpc_flist	typeref:struct:mpc_flist::mpc_flist	access:public
next_state	PTPWRd/dep/datatypes_dep.h	/^	int next_state;$/;"	m	struct:__anon17	access:public
next_state	libptpnetif/netif_test.c	/^  int next_state;$/;"	m	struct:__anon7	file:	access:public
nextl	libminipc/minipc-int.h	/^	struct mpc_link *nextl;$/;"	m	struct:mpc_link	typeref:struct:mpc_link::mpc_link	access:public
noAdjust	PTPWRd/datatypes.h	/^	Boolean		noAdjust;$/;"	m	struct:__anon61	access:public
noResetClock	PTPWRd/datatypes.h	/^	Boolean		noResetClock;$/;"	m	struct:__anon61	access:public
normalizeTime	PTPWRd/arith.c	/^void normalizeTime(TimeInternal *r)$/;"	f	signature:(TimeInternal *r)
normalizeTime	PTPWRd/ptpd.h	/^void normalizeTime(TimeInternal*);$/;"	p	signature:(TimeInternal*)
nreply	libminipc/minipc-int.h	/^	uint32_t	nreply;		\/* incremented at each reply *\/$/;"	m	struct:mpc_shmem	access:public
nrequest	libminipc/minipc-int.h	/^	uint32_t	nrequest;	\/* incremented at each request *\/$/;"	m	struct:mpc_shmem	access:public
nsec	libptpnetif/ptpd_netif.h	/^    int32_t nsec;$/;"	m	struct:_wr_timestamp	access:public
nsec_offset	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t nsec_offset;$/;"	m	struct:__anon17	access:public
nsec_offset	libptpnetif/netif_test.c	/^  wr_timestamp_t nsec_offset;$/;"	m	struct:__anon7	file:	access:public
nsec_prev	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon14	access:public
nsec_prev	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon15	access:public
ntohs	libposix/ptpd-wrappers.h	/^static inline uint16_t ntohs(uint16_t x) {return x;}$/;"	f	signature:(uint16_t x)
num_physical_ports	wrsw_hal/hal_exports.h	/^  int num_physical_ports; \/* Number of physical ports compiled into the FPGA bitstream *\/$/;"	m	struct:__anon67	access:public
num_ports	wrsw_hal/hal_exports.h	/^  int num_ports;					\/* Number of ports in the list *\/$/;"	m	struct:__anon67	access:public
numberPorts	PTPWRd/datatypes.h	/^	UInteger16 numberPorts;$/;"	m	struct:__anon57	access:public
number_foreign_records	PTPWRd/datatypes.h	/^	UInteger16 number_foreign_records;$/;"	m	struct:__anon58	access:public
observedParentClockPhaseChangeRate	PTPWRd/datatypes.h	/^	Integer32 observedParentClockPhaseChangeRate;$/;"	m	struct:__anon57	access:public
observedParentOffsetScaledLogVariance	PTPWRd/datatypes.h	/^	UInteger16 observedParentOffsetScaledLogVariance;$/;"	m	struct:__anon57	access:public
observed_drift	PTPWRd/datatypes.h	/^	Integer32 	observed_drift;$/;"	m	struct:__anon58	access:public
offsetFromMaster	PTPWRd/datatypes.h	/^	TimeInternal offsetFromMaster;$/;"	m	struct:__anon57	access:public
offsetScaledLogVariance	PTPWRd/datatypes.h	/^	UInteger16 offsetScaledLogVariance;$/;"	m	struct:__anon39	access:public
offset_first_updated	PTPWRd/datatypes.h	/^	Boolean		offset_first_updated;$/;"	m	struct:__anon61	access:public
offset_from_master_filter	PTPWRd/dep/datatypes_dep.h	/^} offset_from_master_filter;$/;"	t	typeref:struct:__anon14
offsetof	libminipc/minipc-int.h	26;"	d
offsetof	libminipc/minipc-int.h	34;"	d
ofm_filt	PTPWRd/datatypes.h	/^	offset_from_master_filter  ofm_filt;$/;"	m	struct:__anon58	access:public
ok	libptpnetif/netif_test.c	/^    int ok;$/;"	m	struct:__anon2::__anon5	file:	access:public
one_way_delay_filter	PTPWRd/dep/datatypes_dep.h	/^} one_way_delay_filter;$/;"	t	typeref:struct:__anon15
originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon44	access:public
originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon45	access:public
originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon46	access:public
originTimestamp	PTPWRd/datatypes.h	/^	Timestamp originTimestamp;$/;"	m	struct:__anon49	access:public
otherNodeCalPeriod	PTPWRd/datatypes.h	/^	UInteger32 otherNodeCalPeriod;   $/;"	m	struct:__anon58	access:public
otherNodeCalRetry	PTPWRd/datatypes.h	/^	UInteger8 otherNodeCalRetry;$/;"	m	struct:__anon58	access:public
otherNodeCalSendPattern	PTPWRd/datatypes.h	/^	UInteger16 otherNodeCalSendPattern; $/;"	m	struct:__anon58	access:public
otherNodeDeltaRx	PTPWRd/datatypes.h	/^	FixedDelta otherNodeDeltaRx; 	$/;"	m	struct:__anon58	access:public
otherNodeDeltaTx	PTPWRd/datatypes.h	/^	FixedDelta otherNodeDeltaTx; $/;"	m	struct:__anon58	access:public
outboundLatency	PTPWRd/datatypes.h	/^	TimeInternal	inboundLatency, outboundLatency;$/;"	m	struct:__anon61	access:public
overrideClockIdentity	PTPWRd/datatypes.h	/^	UInteger8	overrideClockIdentity;$/;"	m	struct:__anon61	access:public
owd_filt	PTPWRd/datatypes.h	/^	one_way_delay_filter  owd_filt;$/;"	m	struct:__anon58	access:public
p1	PTPWRd/bmc.c	/^void p1(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
p1	PTPWRd/ptpd.h	/^void p1(PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
pDelayReq_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t pDelayReq_tx_ts; \/\/ t3 S (P2P)$/;"	m	struct:__anon58	access:public
pDelayResp_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t pDelayResp_tx_ts;\/\/ t5 M (P2P)$/;"	m	struct:__anon58	access:public
parentCalibrated	PTPWRd/datatypes.h	/^	Boolean parentCalibrated;$/;"	m	struct:__anon58	access:public
parentIsWRnode	PTPWRd/datatypes.h	/^	Boolean parentIsWRnode;$/;"	m	struct:__anon58	access:public
parentPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity parentPortIdentity;$/;"	m	struct:__anon57	access:public
parentStats	PTPWRd/datatypes.h	/^	Boolean parentStats;$/;"	m	struct:__anon57	access:public
parentWrConfig	PTPWRd/datatypes.h	/^	Enumeration8 parentWrConfig; $/;"	m	struct:__anon58	access:public
parentWrModeON	PTPWRd/datatypes.h	/^	Boolean parentWrModeON; $/;"	m	struct:__anon58	access:public
parentWrNodeMode	PTPWRd/datatypes.h	/^	Enumeration8 parentWrNodeMode; $/;"	m	struct:__anon58	access:public
pd	libminipc/minipc-int.h	/^	const struct minipc_pd *pd;$/;"	m	struct:mpc_flist	typeref:struct:mpc_flist::minipc_pd	access:public
pdelayMS	PTPWRd/datatypes.h	/^	TimeInternal	pdelayMS;$/;"	m	struct:__anon58	access:public
pdelayReq	PTPWRd/datatypes.h	/^		IntervalTimer pdelayReq;$/;"	m	struct:__anon58::__anon60	access:public
pdelayResp	PTPWRd/datatypes.h	/^        IntervalTimer pdelayResp;$/;"	m	struct:__anon58::__anon60	access:public
pdelaySM	PTPWRd/datatypes.h	/^	TimeInternal	pdelaySM;$/;"	m	struct:__anon58	access:public
pdelay_req_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_req_receive_time;$/;"	m	struct:__anon58	access:public
pdelay_req_send_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_req_send_time;$/;"	m	struct:__anon58	access:public
pdelay_resp_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_resp_receive_time;$/;"	m	struct:__anon58	access:public
pdelay_resp_send_time	PTPWRd/datatypes.h	/^	TimeInternal  pdelay_resp_send_time;$/;"	m	struct:__anon58	access:public
peerMeanPathDelay	PTPWRd/datatypes.h	/^	TimeInternal peerMeanPathDelay;$/;"	m	struct:__anon58	access:public
peerMulticastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t peerMulticastAddr;$/;"	m	struct:__anon16	access:public
ph_adjust	PTPWRd/dep/wr_servo.c	/^static int ph_adjust = 0;$/;"	v	file:
phase	PTPWRd/datatypes.h	/^	Integer32 phase;$/;"	m	struct:__anon54	access:public
phase	libptpnetif/ptpd_netif.h	/^    int32_t phase; \/\/ phase(picoseconds)$/;"	m	struct:_wr_timestamp	access:public
phase_setpoint	wrsw_hal/hal_exports.h	/^  uint32_t phase_setpoint; \/\/ DMPLL phase setpoint (picoseconds)$/;"	m	struct:__anon66	access:public
phase_to_cf_units	PTPWRd/protocol.c	/^static Integer32 phase_to_cf_units(Integer32 phase)$/;"	f	file:	signature:(Integer32 phase)
phase_transition	libposix/wrapper_private.h	/^	uint32_t phase_transition;$/;"	m	struct:my_socket	access:public
phase_transition	libptpnetif/ptpd_netif.c	/^	uint32_t phase_transition;$/;"	m	struct:my_socket	file:	access:public
phase_val	wrsw_hal/hal_exports.h	/^  uint32_t phase_val;$/;"	m	struct:__anon66	access:public
phase_val_valid	wrsw_hal/hal_exports.h	/^  int phase_val_valid;$/;"	m	struct:__anon66	access:public
phyCalibrationRequired	PTPWRd/datatypes.h	/^	Boolean 	phyCalibrationRequired;$/;"	m	struct:__anon61	access:public
phyCalibrationRequired	PTPWRd/datatypes.h	/^	Boolean phyCalibrationRequired;$/;"	m	struct:__anon58	access:public
physical_port	libptpnetif/ptpd_netif.h	/^    uint16_t physical_port;$/;"	m	struct:__anon1	access:public
picos_to_ts	PTPWRd/dep/wr_servo.c	/^static wr_timestamp_t picos_to_ts(int64_t picos)$/;"	f	file:	signature:(int64_t picos)
picos_to_ts	libptpnetif/netif_test.c	/^wr_timestamp_t picos_to_ts(int64_t picos)$/;"	f	signature:(int64_t picos)
pid	libminipc/minipc-int.h	/^	int pid;$/;"	m	struct:mpc_link	access:public
pkg	libposix/freestanding-wrapper.c	/^static uint8_t pkg[sizeof(uint8_t)+ETH_HEADER_SIZE+MAX_PAYLOAD+sizeof(struct hw_timestamp)];$/;"	v	file:
poll_tx_timestamp	libptpnetif/ptpd_netif.c	/^static void poll_tx_timestamp(wr_socket_t *sock, wr_timestamp_t *tx_timestamp)$/;"	f	file:	signature:(wr_socket_t *sock, wr_timestamp_t *tx_timestamp)
poll_tx_timestamp	libptpnetif/ptpd_netif.c	/^static void poll_tx_timestamp(wr_socket_t *sock, wr_timestamp_t *tx_timestamp);$/;"	p	file:	signature:(wr_socket_t *sock, wr_timestamp_t *tx_timestamp)
port	libptpnetif/ptpd_netif.h	/^    uint16_t port;$/;"	m	struct:__anon1	access:public
portIdentity	PTPWRd/datatypes.h	/^	PortIdentity portIdentity;$/;"	m	struct:__anon58	access:public
portIdentity_display	PTPWRd/display.c	/^void portIdentity_display(PortIdentity *portIdentity){$/;"	f	signature:(PortIdentity *portIdentity)
portIdentity_display	PTPWRd/ptpd.h	/^void portIdentity_display(PortIdentity*);$/;"	p	signature:(PortIdentity*)
portNumber	PTPWRd/datatypes.h	/^	UInteger16	portNumber;$/;"	m	struct:__anon61	access:public
portNumber	PTPWRd/datatypes.h	/^	UInteger16 portNumber;$/;"	m	struct:__anon37	access:public
portState	PTPWRd/datatypes.h	/^	Enumeration8 portState;$/;"	m	struct:__anon58	access:public
port_communication_technology	PTPWRd/datatypes.h	/^	UInteger8 port_communication_technology;$/;"	m	struct:__anon58	access:public
port_name	wrsw_hal/hal_exports.h	/^  char port_name[16];$/;"	m	struct:__anon65	access:public
port_names	wrsw_hal/hal_exports.h	/^  char port_names[HAL_MAX_PORTS][16];$/;"	m	struct:__anon67	access:public
port_uuid_field	PTPWRd/datatypes.h	/^	Octet port_uuid_field[PTP_UUID_LENGTH];$/;"	m	struct:__anon58	access:public
pow_2	PTPWRd/ptpd.h	/^static inline unsigned long pow_2(int exp)$/;"	f	signature:(int exp)
pps_valid	wrsw_hal/hal_exports.h	/^	int pps_valid;$/;"	m	struct:__anon65	access:public
preciseOriginTimestamp	PTPWRd/datatypes.h	/^	Timestamp preciseOriginTimestamp;$/;"	m	struct:__anon48	access:public
preq	PTPWRd/datatypes.h	/^		MsgPDelayReq  preq;$/;"	m	union:__anon58::__anon59	access:public
presp	PTPWRd/datatypes.h	/^		MsgPDelayResp  presp;$/;"	m	union:__anon58::__anon59	access:public
prespfollow	PTPWRd/datatypes.h	/^		MsgPDelayRespFollowUp  prespfollow;$/;"	m	union:__anon58::__anon59	access:public
prev_t4	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t prev_t4;$/;"	m	struct:__anon17	access:public
prev_t4	libptpnetif/netif_test.c	/^  wr_timestamp_t t4, prev_t4;$/;"	m	struct:__anon7	file:	access:public
primarySlavePortNumber	PTPWRd/datatypes.h	/^	UInteger16 primarySlavePortNumber;$/;"	m	struct:__anon57	access:public
primarySource	PTPWRd/datatypes.h	/^	Boolean		primarySource;$/;"	m	struct:__anon61	access:public
printf	libposix/ptpd-wrappers.h	56;"	d
printf_bits	PTPWRd/wr_protocol.c	/^char *printf_bits(UInteger32 bits)$/;"	f	signature:(UInteger32 bits)
printf_bits	PTPWRd/wr_protocol.h	/^char *printf_bits(UInteger32 bits);$/;"	p	signature:(UInteger32 bits)
priority1	PTPWRd/datatypes.h	/^	UInteger8	priority1;$/;"	m	struct:__anon61	access:public
priority1	PTPWRd/datatypes.h	/^	UInteger8 priority1;$/;"	m	struct:__anon57	access:public
priority2	PTPWRd/datatypes.h	/^	UInteger8	priority2;$/;"	m	struct:__anon61	access:public
priority2	PTPWRd/datatypes.h	/^	UInteger8 priority2;$/;"	m	struct:__anon57	access:public
protocol	PTPWRd/protocol.c	/^void protocol(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
protocol	PTPWRd/ptpd.h	/^void protocol(RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(RunTimeOpts*,PtpPortDS*)
ptpClockDS	PTPWRd/datatypes.h	/^	PtpClockDS *ptpClockDS;$/;"	m	struct:__anon58	access:public
ptpPortDS	PTPWRd/dep/startup.c	/^PtpPortDS *ptpPortDS;$/;"	v
ptpPortDS	libposix/freestanding-startup.c	/^static PtpPortDS ptpPortDS[MAX_PORT_NUMBER];$/;"	v	file:
ptpTimescale	PTPWRd/datatypes.h	/^	Boolean ptpTimescale;$/;"	m	struct:__anon57	access:public
ptp_ch	PTPWRd/ptpd_exports.c	/^static struct minipc_ch *ptp_ch;$/;"	v	typeref:struct:minipc_ch	file:
ptpdShutdown	PTPWRd/dep/ptpd_dep.h	/^void ptpdShutdown(void);$/;"	p	signature:(void)
ptpdShutdown	PTPWRd/dep/startup.c	/^void ptpdShutdown()$/;"	f
ptpdShutdown	libposix/freestanding-startup.c	/^void ptpdShutdown(void)$/;"	f	signature:(void)
ptpdStartup	PTPWRd/dep/ptpd_dep.h	/^PtpPortDS * ptpdStartup(int,char**,Integer16*,RunTimeOpts*,PtpClockDS*);$/;"	p	signature:(int,char**,Integer16*,RunTimeOpts*,PtpClockDS*)
ptpdStartup	PTPWRd/dep/startup.c	/^PtpPortDS * ptpdStartup(int argc, char **argv, Integer16 *ret, RunTimeOpts *rtOpts,PtpClockDS *ptpClockDS)$/;"	f	signature:(int argc, char **argv, Integer16 *ret, RunTimeOpts *rtOpts,PtpClockDS *ptpClockDS)
ptpdStartup	libposix/freestanding-startup.c	/^PtpPortDS * ptpdStartup(int argc, char **argv, Integer16 *ret,$/;"	f	signature:(int argc, char **argv, Integer16 *ret, RunTimeOpts *rtOpts,PtpClockDS *ptpClockDS)
ptpd_handle_wripc	PTPWRd/ptpd.h	/^	extern void ptpd_handle_wripc(void);$/;"	p	signature:(void)
ptpd_handle_wripc	PTPWRd/ptpd_exports.c	/^void ptpd_handle_wripc()$/;"	f
ptpd_handle_wripc	libposix/ptpd-wrappers.h	/^static inline void ptpd_handle_wripc() {}$/;"	f	signature:()
ptpd_init_exports	PTPWRd/ptpd.h	/^	extern void ptpd_init_exports(void);$/;"	p	signature:(void)
ptpd_init_exports	PTPWRd/ptpd_exports.c	/^void ptpd_init_exports(void)$/;"	f	signature:(void)
ptpd_init_exports	libposix/ptpd-wrappers.h	/^static inline void ptpd_init_exports() {}$/;"	f	signature:()
ptpd_netif_adjust_counters	libposix/freestanding-wrapper.c	/^int ptpd_netif_adjust_counters(int64_t adjust_utc, int32_t adjust_nsec)$/;"	f	signature:(int64_t adjust_utc, int32_t adjust_nsec)
ptpd_netif_adjust_counters	libptpnetif/ptpd_netif.c	/^int ptpd_netif_adjust_counters(int64_t adjust_utc, int32_t adjust_nsec)$/;"	f	signature:(int64_t adjust_utc, int32_t adjust_nsec)
ptpd_netif_adjust_counters	libptpnetif/ptpd_netif.h	/^int ptpd_netif_adjust_counters(int64_t adjust_utc, int32_t adjust_nsec);$/;"	p	signature:(int64_t adjust_utc, int32_t adjust_nsec)
ptpd_netif_adjust_in_progress	libposix/freestanding-wrapper.c	/^int ptpd_netif_adjust_in_progress()$/;"	f
ptpd_netif_adjust_in_progress	libptpnetif/ptpd_netif.c	/^int ptpd_netif_adjust_in_progress()$/;"	f
ptpd_netif_adjust_in_progress	libptpnetif/ptpd_netif.h	/^int ptpd_netif_adjust_in_progress();$/;"	p	signature:()
ptpd_netif_adjust_phase	libposix/freestanding-wrapper.c	/^int ptpd_netif_adjust_phase(int32_t phase_ps)$/;"	f	signature:(int32_t phase_ps)
ptpd_netif_adjust_phase	libptpnetif/ptpd_netif.c	/^int ptpd_netif_adjust_phase(int32_t phase_ps)$/;"	f	signature:(int32_t phase_ps)
ptpd_netif_adjust_phase	libptpnetif/ptpd_netif.h	/^int ptpd_netif_adjust_phase(int32_t phase_ps);$/;"	p	signature:(int32_t phase_ps)
ptpd_netif_calibrating_disable	libposix/freestanding-wrapper.c	/^int ptpd_netif_calibrating_disable(int txrx, const char *ifaceName)$/;"	f	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_disable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_calibrating_disable(int txrx, const char *ifaceName)$/;"	f	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_disable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_calibrating_disable(int txrx, const char *ifaceName);$/;"	p	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_enable	libposix/freestanding-wrapper.c	/^int ptpd_netif_calibrating_enable(int txrx, const char *ifaceName)$/;"	f	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_enable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_calibrating_enable(int txrx, const char *ifaceName)$/;"	f	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_enable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_calibrating_enable(int txrx, const char *ifaceName);$/;"	p	signature:(int txrx, const char *ifaceName)
ptpd_netif_calibrating_poll	libposix/freestanding-wrapper.c	/^int ptpd_netif_calibrating_poll(int txrx, const char *ifaceName,$/;"	f	signature:(int txrx, const char *ifaceName, uint64_t *delta)
ptpd_netif_calibrating_poll	libptpnetif/ptpd_netif.c	/^int ptpd_netif_calibrating_poll(int txrx, const char *ifaceName,$/;"	f	signature:(int txrx, const char *ifaceName, uint64_t *delta)
ptpd_netif_calibrating_poll	libptpnetif/ptpd_netif.h	/^int ptpd_netif_calibrating_poll(int txrx, const char *ifaceName, uint64_t *delta);$/;"	p	signature:(int txrx, const char *ifaceName, uint64_t *delta)
ptpd_netif_calibration_pattern_disable	libposix/freestanding-wrapper.c	/^int ptpd_netif_calibration_pattern_disable(const char *ifaceName)$/;"	f	signature:(const char *ifaceName)
ptpd_netif_calibration_pattern_disable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_calibration_pattern_disable(const char *ifaceName)$/;"	f	signature:(const char *ifaceName)
ptpd_netif_calibration_pattern_disable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_calibration_pattern_disable(const char *ifaceName);$/;"	p	signature:(const char *ifaceName)
ptpd_netif_calibration_pattern_enable	libposix/freestanding-wrapper.c	/^int ptpd_netif_calibration_pattern_enable(const char *ifaceName,$/;"	f	signature:(const char *ifaceName, unsigned int calibrationPeriod, unsigned int calibrationPattern, unsigned int calibrationPatternLen)
ptpd_netif_calibration_pattern_enable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_calibration_pattern_enable(const char *ifaceName,$/;"	f	signature:(const char *ifaceName, unsigned int calibrationPeriod, unsigned int calibrationPattern, unsigned int calibrationPatternLen)
ptpd_netif_calibration_pattern_enable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_calibration_pattern_enable(const char *ifaceName, unsigned int calibrationPeriod, unsigned int calibrationPattern, unsigned int calibrationPatternLen);$/;"	p	signature:(const char *ifaceName, unsigned int calibrationPeriod, unsigned int calibrationPattern, unsigned int calibrationPatternLen)
ptpd_netif_close_socket	libposix/freestanding-wrapper.c	/^int ptpd_netif_close_socket(wr_socket_t *sock)$/;"	f	signature:(wr_socket_t *sock)
ptpd_netif_close_socket	libptpnetif/ptpd_netif.c	/^int ptpd_netif_close_socket(wr_socket_t *sock)$/;"	f	signature:(wr_socket_t *sock)
ptpd_netif_close_socket	libptpnetif/ptpd_netif.h	/^int ptpd_netif_close_socket(wr_socket_t *sock);$/;"	p	signature:(wr_socket_t *sock)
ptpd_netif_create_socket	libposix/freestanding-wrapper.c	/^wr_socket_t *ptpd_netif_create_socket(int sock_type, int flags, wr_sockaddr_t *bind_addr)$/;"	f	signature:(int sock_type, int flags, wr_sockaddr_t *bind_addr)
ptpd_netif_create_socket	libptpnetif/ptpd_netif.c	/^wr_socket_t *ptpd_netif_create_socket(int sock_type, int flags,$/;"	f	signature:(int sock_type, int flags, wr_sockaddr_t *bind_addr)
ptpd_netif_create_socket	libptpnetif/ptpd_netif.h	/^wr_socket_t *ptpd_netif_create_socket(int sock_type, int flags, wr_sockaddr_t *bind_addr);$/;"	p	signature:(int sock_type, int flags, wr_sockaddr_t *bind_addr)
ptpd_netif_enable_phase_tracking	libposix/freestanding-wrapper.c	/^int ptpd_netif_enable_phase_tracking(const char *if_name) $/;"	f	signature:(const char *if_name)
ptpd_netif_enable_phase_tracking	libptpnetif/ptpd_netif.c	/^int ptpd_netif_enable_phase_tracking(const char *if_name)$/;"	f	signature:(const char *if_name)
ptpd_netif_enable_phase_tracking	libptpnetif/ptpd_netif.h	/^int ptpd_netif_enable_phase_tracking(const char *if_name);$/;"	p	signature:(const char *if_name)
ptpd_netif_enable_timing_output	libposix/freestanding-wrapper.c	/^int ptpd_netif_enable_timing_output(int enable)$/;"	f	signature:(int enable)
ptpd_netif_enable_timing_output	libptpnetif/ptpd_netif.c	/^int ptpd_netif_enable_timing_output(int enable)$/;"	f	signature:(int enable)
ptpd_netif_enable_timing_output	libptpnetif/ptpd_netif.h	/^int ptpd_netif_enable_timing_output(int enable);$/;"	p	signature:(int enable)
ptpd_netif_extsrc_detection	libposix/freestanding-wrapper.c	/^int ptpd_netif_extsrc_detection()$/;"	f
ptpd_netif_extsrc_detection	libptpnetif/ptpd_netif.c	/^int ptpd_netif_extsrc_detection()$/;"	f
ptpd_netif_extsrc_detection	libptpnetif/ptpd_netif.h	/^int ptpd_netif_extsrc_detection();$/;"	p	signature:()
ptpd_netif_get_dmtd_phase	libposix/freestanding-wrapper.c	/^int ptpd_netif_get_dmtd_phase(wr_socket_t *sock, int32_t *phase)$/;"	f	signature:(wr_socket_t *sock, int32_t *phase)
ptpd_netif_get_dmtd_phase	libptpnetif/ptpd_netif.c	/^int ptpd_netif_get_dmtd_phase(wr_socket_t *sock, int32_t *phase)$/;"	f	signature:(wr_socket_t *sock, int32_t *phase)
ptpd_netif_get_dmtd_phase	libptpnetif/ptpd_netif.h	/^int ptpd_netif_get_dmtd_phase(wr_socket_t *sock, int32_t *phase);$/;"	p	signature:(wr_socket_t *sock, int32_t *phase)
ptpd_netif_get_hw_addr	libposix/freestanding-wrapper.c	/^int ptpd_netif_get_hw_addr(wr_socket_t *sock, mac_addr_t *mac)$/;"	f	signature:(wr_socket_t *sock, mac_addr_t *mac)
ptpd_netif_get_hw_addr	libptpnetif/ptpd_netif.c	/^int ptpd_netif_get_hw_addr(wr_socket_t *sock, mac_addr_t *mac)$/;"	f	signature:(wr_socket_t *sock, mac_addr_t *mac)
ptpd_netif_get_hw_addr	libptpnetif/ptpd_netif.h	/^int ptpd_netif_get_hw_addr(wr_socket_t *sock, mac_addr_t *mac);$/;"	p	signature:(wr_socket_t *sock, mac_addr_t *mac)
ptpd_netif_get_ifName	libposix/freestanding-wrapper.c	/^int ptpd_netif_get_ifName(char *ifname, int number)$/;"	f	signature:(char *ifname, int number)
ptpd_netif_get_ifName	libptpnetif/ptpd_netif.c	/^int ptpd_netif_get_ifName(char *ifname, int number)$/;"	f	signature:(char *ifname, int number)
ptpd_netif_get_ifName	libptpnetif/ptpd_netif.h	/^int ptpd_netif_get_ifName(char *ifname, int number);$/;"	p	signature:(char *ifname, int number)
ptpd_netif_get_msec_tics	libposix/freestanding-wrapper.c	/^uint64_t ptpd_netif_get_msec_tics(void)$/;"	f	signature:(void)
ptpd_netif_get_msec_tics	libptpnetif/ptpd_netif.c	/^uint64_t ptpd_netif_get_msec_tics()$/;"	f
ptpd_netif_get_msec_tics	libptpnetif/ptpd_netif.h	/^uint64_t ptpd_netif_get_msec_tics();$/;"	p	signature:()
ptpd_netif_get_port_state	libposix/freestanding-wrapper.c	/^int ptpd_netif_get_port_state(const char *ifaceName)$/;"	f	signature:(const char *ifaceName)
ptpd_netif_get_port_state	libptpnetif/ptpd_netif.c	/^int ptpd_netif_get_port_state(const char *ifaceName)$/;"	f	signature:(const char *ifaceName)
ptpd_netif_get_port_state	libptpnetif/ptpd_netif.h	/^int ptpd_netif_get_port_state(const char *ifaceName);$/;"	p	signature:(const char *ifaceName)
ptpd_netif_init	libposix/freestanding-wrapper.c	/^int ptpd_netif_init()$/;"	f
ptpd_netif_init	libptpnetif/ptpd_netif.c	/^int ptpd_netif_init()$/;"	f
ptpd_netif_init	libptpnetif/ptpd_netif.h	/^int ptpd_netif_init();$/;"	p	signature:()
ptpd_netif_linearize_rx_timestamp	libposix/freestanding-wrapper.c	/^void ptpd_netif_linearize_rx_timestamp(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period)$/;"	f	signature:(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period)
ptpd_netif_linearize_rx_timestamp	libptpnetif/ptpd_netif.c	/^void ptpd_netif_linearize_rx_timestamp(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period)$/;"	f	signature:(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period)
ptpd_netif_linearize_rx_timestamp	libptpnetif/ptpd_netif.h	/^void ptpd_netif_linearize_rx_timestamp(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period);$/;"	p	signature:(wr_timestamp_t *ts, int32_t dmtd_phase, int cntr_ahead, int transition_point, int clock_period)
ptpd_netif_locking_disable	libposix/freestanding-wrapper.c	/^int ptpd_netif_locking_disable(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_disable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_locking_disable(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_disable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_locking_disable(int txrx, const char *ifaceName, int priority);$/;"	p	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_enable	libposix/freestanding-wrapper.c	/^int ptpd_netif_locking_enable(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_enable	libptpnetif/ptpd_netif.c	/^int ptpd_netif_locking_enable(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_enable	libptpnetif/ptpd_netif.h	/^int ptpd_netif_locking_enable(int txrx, const char *ifaceName, int priority);$/;"	p	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_poll	libposix/freestanding-wrapper.c	/^int ptpd_netif_locking_poll(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_poll	libptpnetif/ptpd_netif.c	/^int ptpd_netif_locking_poll(int txrx, const char *ifaceName, int priority)$/;"	f	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_locking_poll	libptpnetif/ptpd_netif.h	/^int ptpd_netif_locking_poll(int txrx, const char *ifaceName, int priority);$/;"	p	signature:(int txrx, const char *ifaceName, int priority)
ptpd_netif_poll	libptpnetif/ptpd_netif.h	/^int ptpd_netif_poll(wr_socket_t*);$/;"	p	signature:(wr_socket_t*)
ptpd_netif_read_calibration_data	libposix/freestanding-wrapper.c	/^int ptpd_netif_read_calibration_data(const char *ifaceName, uint64_t *deltaTx,$/;"	f	signature:(const char *ifaceName, uint64_t *deltaTx, uint64_t *deltaRx, int32_t *fix_alpha, int32_t *clock_period)
ptpd_netif_read_calibration_data	libptpnetif/ptpd_netif.c	/^int ptpd_netif_read_calibration_data(const char *ifaceName, uint64_t *deltaTx,$/;"	f	signature:(const char *ifaceName, uint64_t *deltaTx, uint64_t *deltaRx, int32_t *fix_alpha, int32_t *clock_period)
ptpd_netif_read_calibration_data	libptpnetif/ptpd_netif.h	/^int ptpd_netif_read_calibration_data(const char *ifaceName, uint64_t *deltaTx,$/;"	p	signature:(const char *ifaceName, uint64_t *deltaTx, uint64_t *deltaRx, int32_t *fix_alpha, int32_t *clock_period)
ptpd_netif_recvfrom	libposix/freestanding-wrapper.c	/^int ptpd_netif_recvfrom(wr_socket_t *sock, wr_sockaddr_t *from, void *data,$/;"	f	signature:(wr_socket_t *sock, wr_sockaddr_t *from, void *data, size_t data_length, wr_timestamp_t *rx_timestamp)
ptpd_netif_recvfrom	libptpnetif/ptpd_netif.c	/^int ptpd_netif_recvfrom(wr_socket_t *sock, wr_sockaddr_t *from, void *data,$/;"	f	signature:(wr_socket_t *sock, wr_sockaddr_t *from, void *data, size_t data_length, wr_timestamp_t *rx_timestamp)
ptpd_netif_recvfrom	libptpnetif/ptpd_netif.h	/^int ptpd_netif_recvfrom(wr_socket_t *sock, wr_sockaddr_t *from, void *data, size_t data_length, wr_timestamp_t *rx_timestamp);$/;"	p	signature:(wr_socket_t *sock, wr_sockaddr_t *from, void *data, size_t data_length, wr_timestamp_t *rx_timestamp)
ptpd_netif_select	libposix/freestanding-wrapper.c	/^int ptpd_netif_select( wr_socket_t *wrSock)$/;"	f	signature:( wr_socket_t *wrSock)
ptpd_netif_select	libptpnetif/ptpd_netif.c	/^int ptpd_netif_select( wr_socket_t *wrSock)$/;"	f	signature:( wr_socket_t *wrSock)
ptpd_netif_select	libptpnetif/ptpd_netif.h	/^int ptpd_netif_select(wr_socket_t*);$/;"	p	signature:(wr_socket_t*)
ptpd_netif_sendto	libposix/freestanding-wrapper.c	/^int ptpd_netif_sendto(wr_socket_t *sock, wr_sockaddr_t *to, void *data,$/;"	f	signature:(wr_socket_t *sock, wr_sockaddr_t *to, void *data, size_t data_length, wr_timestamp_t *tx_ts)
ptpd_netif_sendto	libptpnetif/ptpd_netif.c	/^int ptpd_netif_sendto(wr_socket_t *sock, wr_sockaddr_t *to, void *data,$/;"	f	signature:(wr_socket_t *sock, wr_sockaddr_t *to, void *data, size_t data_length, wr_timestamp_t *tx_ts)
ptpd_netif_sendto	libptpnetif/ptpd_netif.h	/^int ptpd_netif_sendto(wr_socket_t *sock, wr_sockaddr_t *to, void *data, size_t data_length, wr_timestamp_t *tx_ts);$/;"	p	signature:(wr_socket_t *sock, wr_sockaddr_t *to, void *data, size_t data_length, wr_timestamp_t *tx_ts)
ptpd_netif_set_phase_transition	libposix/freestanding-wrapper.c	/^void ptpd_netif_set_phase_transition(wr_socket_t *sock, int phase)$/;"	f	signature:(wr_socket_t *sock, int phase)
ptpdexp_cmd	PTPWRd/ptpd_exports.c	/^int ptpdexp_cmd(int cmd, int value)$/;"	f	signature:(int cmd, int value)
ptpdexp_cmd	PTPWRd/ptpd_exports.h	/^extern int ptpdexp_cmd(int cmd, int value);$/;"	p	signature:(int cmd, int value)
ptpdexp_get_sync_state	PTPWRd/ptpd_exports.c	/^int ptpdexp_get_sync_state(ptpdexp_sync_state_t *state)$/;"	f	signature:(ptpdexp_sync_state_t *state)
ptpdexp_get_sync_state	PTPWRd/ptpd_exports.h	/^extern int ptpdexp_get_sync_state(ptpdexp_sync_state_t *state);$/;"	p	signature:(ptpdexp_sync_state_t *state)
ptpdexp_sync_state_t	PTPWRd/ptpd_exports.h	/^}  ptpdexp_sync_state_t ;$/;"	t	typeref:struct:__anon9
ptype	libptpnetif/netif_test.c	/^  int ptype;$/;"	m	struct:__anon2	file:	access:public
put_be16	PTPWRd/dep/msg.c	/^static inline void put_be16(void *ptr, UInteger16 x)$/;"	f	file:	signature:(void *ptr, UInteger16 x)
put_be32	PTPWRd/dep/msg.c	/^static inline void put_be32(void *ptr, UInteger32 x)$/;"	f	file:	signature:(void *ptr, UInteger32 x)
queue	libposix/wrapper_private.h	/^  sockq_t queue;$/;"	m	struct:my_socket	access:public
raw_ahead	libptpnetif/ptpd_netif.h	/^	int32_t raw_ahead;$/;"	m	struct:_wr_timestamp	access:public
raw_nsec	libptpnetif/ptpd_netif.h	/^	int32_t raw_nsec;$/;"	m	struct:_wr_timestamp	access:public
raw_phase	libptpnetif/ptpd_netif.h	/^	int32_t raw_phase;$/;"	m	struct:_wr_timestamp	access:public
read_phase_val	libposix/freestanding-wrapper.c	/^int read_phase_val(hexp_port_state_t *state)$/;"	f	signature:(hexp_port_state_t *state)
receiveTimestamp	PTPWRd/datatypes.h	/^	Timestamp receiveTimestamp;$/;"	m	struct:__anon47	access:public
receptionPortNumber	PTPWRd/datatypes.h	/^	UInteger16 receptionPortNumber;$/;"	m	struct:__anon56	access:public
record_update	PTPWRd/datatypes.h	/^	Boolean  record_update;$/;"	m	struct:__anon58	access:public
recvPDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  recvPDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
recvPDelayRespSequenceId	PTPWRd/datatypes.h	/^    UInteger16  recvPDelayRespSequenceId;$/;"	m	struct:__anon58	access:public
recvSyncSequenceId	PTPWRd/datatypes.h	/^	UInteger16  recvSyncSequenceId;$/;"	m	struct:__anon58	access:public
reply	libminipc/minipc-int.h	/^	struct mpc_rep_packet	reply;$/;"	m	struct:mpc_shmem	typeref:struct:mpc_shmem::mpc_rep_packet	access:public
req	PTPWRd/datatypes.h	/^		MsgDelayReq  req;$/;"	m	union:__anon58::__anon59	access:public
request	libminipc/minipc-int.h	/^	struct mpc_req_packet	request;$/;"	m	struct:mpc_shmem	typeref:struct:mpc_shmem::mpc_req_packet	access:public
requestReceiptTimestamp	PTPWRd/datatypes.h	/^	Timestamp requestReceiptTimestamp;$/;"	m	struct:__anon50	access:public
requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon47	access:public
requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon50	access:public
requestingPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity requestingPortIdentity;$/;"	m	struct:__anon51	access:public
resp	PTPWRd/datatypes.h	/^		MsgDelayResp resp;$/;"	m	union:__anon58::__anon59	access:public
responseOriginTimestamp	PTPWRd/datatypes.h	/^	Timestamp responseOriginTimestamp;$/;"	m	struct:__anon51	access:public
returnCurrentWRMainState	PTPWRd/wr_protocol.c	/^UInteger8 returnCurrentWRMainState( PtpPortDS *ptpPortDS)$/;"	f	signature:( PtpPortDS *ptpPortDS)
returnCurrentWRMainState	PTPWRd/wr_protocol.h	/^UInteger8 returnCurrentWRMainState(PtpPortDS*);$/;"	p	signature:(PtpPortDS*)
retval	libminipc/minipc.h	/^	uint32_t retval;		\/* type of return value *\/$/;"	m	struct:minipc_pd	access:public
rtOpts	PTPWRd/ptpd.c	/^RunTimeOpts rtOpts = {$/;"	v
rx_calibrated	wrsw_hal/hal_exports.h	/^  int rx_calibrated;$/;"	m	struct:__anon66	access:public
rx_tstamp_counter	wrsw_hal/hal_exports.h	/^  int rx_tstamp_counter;$/;"	m	struct:__anon66	access:public
s	PTPWRd/datatypes.h	/^	Integer16	s;$/;"	m	struct:__anon61	access:public
s1	PTPWRd/bmc.c	/^void s1(MsgHeader *header,MsgAnnounce *announce,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,MsgAnnounce *announce,PtpPortDS *ptpPortDS)
s1	PTPWRd/ptpd.h	/^void s1(MsgHeader*,MsgAnnounce*,PtpPortDS*);$/;"	p	signature:(MsgHeader*,MsgAnnounce*,PtpPortDS*)
s2	PTPWRd/bmc.c	/^void s2(MsgHeader *header,MsgAnnounce *announce,PtpPortDS *ptpPortDS)$/;"	f	signature:(MsgHeader *header,MsgAnnounce *announce,PtpPortDS *ptpPortDS)
s2	PTPWRd/ptpd.h	/^void s2(MsgHeader*,MsgAnnounce*,PtpPortDS*);$/;"	p	signature:(MsgHeader*,MsgAnnounce*,PtpPortDS*)
s_exp	PTPWRd/dep/datatypes_dep.h	/^	Integer32  s_exp;$/;"	m	struct:__anon15	access:public
scaledNanoseconds	PTPWRd/datatypes.h	/^	Integer64 scaledNanoseconds;$/;"	m	struct:__anon34	access:public
scaledPicoseconds	PTPWRd/datatypes.h	/^	UInteger64 scaledPicoseconds;$/;"	m	struct:__anon35	access:public
scalled_alpha	PTPWRd/datatypes.h	/^	UInteger32 scalled_alpha;	 \/\/ not used :-($/;"	m	struct:__anon58	access:public
scm_timestamping	libptpnetif/ptpd_netif.c	/^struct scm_timestamping {$/;"	s	file:
scm_timestamping::hwtimeraw	libptpnetif/ptpd_netif.c	/^	struct timespec hwtimeraw;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
scm_timestamping::hwtimetrans	libptpnetif/ptpd_netif.c	/^	struct timespec hwtimetrans;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
scm_timestamping::systime	libptpnetif/ptpd_netif.c	/^	struct timespec systime;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
secondBestForeign	PTPWRd/datatypes.h	/^	ForeignMasterRecord *secondBestForeign;$/;"	m	struct:__anon57	access:public
secondaryForeignMaster	PTPWRd/datatypes.h	/^	ForeignMasterRecord secondaryForeignMaster;$/;"	m	struct:__anon58	access:public
secondarySlavePortNumber	PTPWRd/datatypes.h	/^	UInteger16 secondarySlavePortNumber;$/;"	m	struct:__anon57	access:public
seconds	PTPWRd/datatypes.h	/^	Integer32 seconds;$/;"	m	struct:__anon54	access:public
secondsField	PTPWRd/datatypes.h	/^	UInteger48 secondsField;$/;"	m	struct:__anon36	access:public
selfAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t selfAddr;$/;"	m	struct:__anon16	access:public
sentAnnounceSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentAnnounceSequenceId;$/;"	m	struct:__anon58	access:public
sentDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
sentPDelayReq	PTPWRd/datatypes.h	/^	Boolean     sentPDelayReq;$/;"	m	struct:__anon58	access:public
sentPDelayReqSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentPDelayReqSequenceId;$/;"	m	struct:__anon58	access:public
sentPDelayRespSequenceId	PTPWRd/datatypes.h	/^    UInteger16  sentPDelayRespSequenceId;$/;"	m	struct:__anon58	access:public
sentSyncSequenceId	PTPWRd/datatypes.h	/^	UInteger16  sentSyncSequenceId;$/;"	m	struct:__anon58	access:public
seq	libptpnetif/netif_test.c	/^  int seq;$/;"	m	struct:__anon2	file:	access:public
sequenceId	PTPWRd/datatypes.h	/^	UInteger16 sequenceId;$/;"	m	struct:__anon43	access:public
servo_state_valid	PTPWRd/dep/wr_servo.c	/^int servo_state_valid = 0;$/;"	v
setFlag	PTPWRd/dep/ptpd_dep.h	92;"	d
setTime	PTPWRd/dep/ptpd_dep.h	/^void setTime(TimeInternal*);$/;"	p	signature:(TimeInternal*)
severityCode	PTPWRd/datatypes.h	/^	Enumeration8 severityCode;$/;"	m	struct:__anon42	access:public
sharedPortsLoop	PTPWRd/protocol.c	/^void sharedPortsLoop(PtpPortDS *ptpPortDS)$/;"	f	signature:(PtpPortDS *ptpPortDS)
shift16	PTPWRd/dep/ptpd_dep.h	54;"	d
shift16	PTPWRd/dep/ptpd_dep.h	57;"	d
shift8	PTPWRd/dep/ptpd_dep.h	53;"	d
shift8	PTPWRd/dep/ptpd_dep.h	56;"	d
signaling	PTPWRd/datatypes.h	/^		MsgSignaling signaling;$/;"	m	union:__anon58::__anon59	access:public
singlePortLoop	PTPWRd/protocol.c	/^void singlePortLoop(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS, int portIndex)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS, int portIndex)
slave_current_offset	libptpnetif/netif_test.c	/^wr_timestamp_t slave_current_offset;$/;"	v
slave_fsm	libptpnetif/netif_test.c	/^void slave_fsm(char *if_name)$/;"	f	signature:(char *if_name)
slave_phase_setpoint	libptpnetif/netif_test.c	/^int32_t slave_phase_setpoint;$/;"	v
slave_phase_track	libptpnetif/netif_test.c	/^int slave_phase_track ;$/;"	v
slave_servo_init	libptpnetif/netif_test.c	/^void slave_servo_init(wr_servo_state_t *s, const char *if_name, $/;"	f	signature:(wr_servo_state_t *s, const char *if_name, int32_t delta_tx_m, int32_t delta_rx_m, int32_t delta_tx_s, int32_t delta_rx_s)
slave_servo_state	PTPWRd/ptpd_exports.h	/^	char slave_servo_state[32];$/;"	m	struct:__anon9	access:public
slave_to_master_delay	PTPWRd/datatypes.h	/^	TimeInternal  slave_to_master_delay;$/;"	m	struct:__anon58	access:public
slave_update_clock	libptpnetif/netif_test.c	/^void slave_update_clock(wr_servo_state_t *s, wr_timestamp_t t1, wr_timestamp_t t2, wr_timestamp_t t3, wr_timestamp_t t4)$/;"	f	signature:(wr_servo_state_t *s, wr_timestamp_t t1, wr_timestamp_t t2, wr_timestamp_t t3, wr_timestamp_t t4)
sockq_t	libposix/wrapper_private.h	/^} sockq_t;$/;"	t	typeref:struct:__anon64
sourcePortIdentity	PTPWRd/datatypes.h	/^	PortIdentity sourcePortIdentity;$/;"	m	struct:__anon43	access:public
sprintf	libposix/ptpd-wrappers.h	58;"	d
srcmac	libposix/wrapper_private.h	/^  uint8_t srcmac[6];$/;"	m	struct:__anon62	access:public
start_tics	libposix/wrapper_private.h	/^	uint64_t start_tics;$/;"	m	struct:__anon63	access:public
start_tics	libptpnetif/netif_test.c	/^  uint64_t start_tics;$/;"	m	struct:__anon6	file:	access:public
start_tics	libptpnetif/ptpd_netif.c	/^	uint64_t start_tics;$/;"	m	struct:__anon8	file:	access:public
startingBoundaryHops	PTPWRd/datatypes.h	/^	UInteger8 startingBoundaryHops;$/;"	m	struct:__anon53	access:public
state	PTPWRd/dep/datatypes_dep.h	/^	int state;$/;"	m	struct:__anon17	access:public
state	libptpnetif/netif_test.c	/^  int state;$/;"	m	struct:__anon7	file:	access:public
stepsRemoved	PTPWRd/datatypes.h	/^	UInteger16 stepsRemoved;$/;"	m	struct:__anon44	access:public
stepsRemoved	PTPWRd/datatypes.h	/^	UInteger16 stepsRemoved;$/;"	m	struct:__anon57	access:public
subTime	PTPWRd/arith.c	/^void subTime(TimeInternal *r, TimeInternal *x, TimeInternal *y)$/;"	f	signature:(TimeInternal *r, TimeInternal *x, TimeInternal *y)
subTime	PTPWRd/ptpd.h	/^void subTime(TimeInternal*,TimeInternal*,TimeInternal*);$/;"	p	signature:(TimeInternal*,TimeInternal*,TimeInternal*)
sync	PTPWRd/datatypes.h	/^		IntervalTimer sync;$/;"	m	struct:__anon58::__anon60	access:public
sync	PTPWRd/datatypes.h	/^		MsgSync  sync;$/;"	m	union:__anon58::__anon59	access:public
syncInterval	PTPWRd/datatypes.h	/^	Integer8	syncInterval;$/;"	m	struct:__anon61	access:public
sync_packet_t	libptpnetif/netif_test.c	/^} sync_packet_t;$/;"	t	typeref:struct:__anon2	file:
sync_pkt_receive	libptpnetif/netif_test.c	/^int sync_pkt_receive(wr_socket_t *sock, sync_packet_t *pkt, wr_timestamp_t *ts)$/;"	f	signature:(wr_socket_t *sock, sync_packet_t *pkt, wr_timestamp_t *ts)
sync_pkt_send	libptpnetif/netif_test.c	/^void sync_pkt_send(wr_socket_t *sock, sync_packet_t *pkt, wr_timestamp_t *tx_ts)$/;"	f	signature:(wr_socket_t *sock, sync_packet_t *pkt, wr_timestamp_t *tx_ts)
sync_receive_time	PTPWRd/datatypes.h	/^	TimeInternal  sync_receive_time;$/;"	m	struct:__anon58	access:public
sync_source	PTPWRd/ptpd_exports.h	/^	char sync_source[32];$/;"	m	struct:__anon9	access:public
synch_tx_ts	PTPWRd/datatypes.h	/^	wr_timestamp_t synch_tx_ts;     \/\/ t1 M$/;"	m	struct:__anon58	access:public
systime	libptpnetif/ptpd_netif.c	/^	struct timespec systime;$/;"	m	struct:scm_timestamping	typeref:struct:scm_timestamping::timespec	file:	access:public
t1	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
t1	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
t2	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
t2	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
t2_phase_transition	wrsw_hal/hal_exports.h	/^  uint32_t t2_phase_transition; \/\/ approximate DMTD phase value (on slave port) at which RX timestamp (T2) counter transistion occurs (picoseconds)$/;"	m	struct:__anon66	access:public
t3	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
t3	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
t4	PTPWRd/dep/datatypes_dep.h	/^	wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon17	access:public
t4	libptpnetif/netif_test.c	/^    wr_timestamp_t t1, t2, t3, t4;$/;"	m	struct:__anon2::__anon3	file:	access:public
t4	libptpnetif/netif_test.c	/^  wr_timestamp_t t4, prev_t4;$/;"	m	struct:__anon7	file:	access:public
t4_phase_transition	wrsw_hal/hal_exports.h	/^  uint32_t t4_phase_transition; \/\/ approximate phase value (on master port) at which RX timestamp (T4) counter transistion occurs (picoseconds)$/;"	m	struct:__anon66	access:public
t_start	PTPWRd/datatypes.h	/^	unsigned long long t_start;$/;"	m	struct:__anon55	access:public
tail	libposix/wrapper_private.h	/^  uint8_t head, tail;$/;"	m	struct:__anon64	access:public
targetPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity targetPortIdentity;$/;"	m	struct:__anon52	access:public
targetPortIdentity	PTPWRd/datatypes.h	/^	PortIdentity targetPortIdentity;$/;"	m	struct:__anon53	access:public
textField	PTPWRd/datatypes.h	/^	Octet* textField;$/;"	m	struct:__anon41	access:public
timeInternal_display	PTPWRd/display.c	/^void timeInternal_display(TimeInternal *timeInternal) {$/;"	f	signature:(TimeInternal *timeInternal)
timeInternal_display	PTPWRd/ptpd.h	/^void timeInternal_display(TimeInternal*);$/;"	p	signature:(TimeInternal*)
timeInternal_display	libposix/freestanding-display.c	/^void timeInternal_display(TimeInternal *timeInternal) {$/;"	f	signature:(TimeInternal *timeInternal)
timeInterval_display	PTPWRd/display.c	/^void timeInterval_display(TimeInterval *timeInterval){$/;"	f	signature:(TimeInterval *timeInterval)
timeInterval_display	PTPWRd/ptpd.h	/^void timeInterval_display(TimeInterval*);$/;"	p	signature:(TimeInterval*)
timeSource	PTPWRd/datatypes.h	/^	Enumeration8 timeSource;$/;"	m	struct:__anon44	access:public
timeSource	PTPWRd/datatypes.h	/^	Enumeration8 timeSource;$/;"	m	struct:__anon57	access:public
timeTraceable	PTPWRd/datatypes.h	/^	Boolean timeTraceable;$/;"	m	struct:__anon57	access:public
timeint_to_wr	PTPWRd/dep/wr_servo.c	/^wr_timestamp_t timeint_to_wr(TimeInternal t)$/;"	f	signature:(TimeInternal t)
timeout	libposix/wrapper_private.h	/^	uint64_t timeout;$/;"	m	struct:__anon63	access:public
timeout	libptpnetif/netif_test.c	/^  uint64_t timeout;$/;"	m	struct:__anon6	file:	access:public
timeout	libptpnetif/ptpd_netif.c	/^	uint64_t timeout;$/;"	m	struct:__anon8	file:	access:public
timeout_t	libposix/wrapper_private.h	/^} timeout_t ;$/;"	t	typeref:struct:__anon63
timeout_t	libptpnetif/netif_test.c	/^} timeout_t ;$/;"	t	typeref:struct:__anon6	file:
timeout_t	libptpnetif/ptpd_netif.c	/^} timeout_t ;$/;"	t	typeref:struct:__anon8	file:
timerExpired	PTPWRd/dep/ptpd_dep.h	/^Boolean timerExpired(IntervalTimer *itimer);$/;"	p	signature:(IntervalTimer *itimer)
timerExpired	PTPWRd/dep/timer.c	/^Boolean timerExpired(IntervalTimer *itimer)$/;"	f	signature:(IntervalTimer *itimer)
timerInit	PTPWRd/dep/ptpd_dep.h	/^void timerInit(IntervalTimer *itimer, const char *name);$/;"	p	signature:(IntervalTimer *itimer, const char *name)
timerInit	PTPWRd/dep/timer.c	/^void timerInit(IntervalTimer *itimer, const char *name)$/;"	f	signature:(IntervalTimer *itimer, const char *name)
timerStart	PTPWRd/dep/ptpd_dep.h	/^void timerStart(IntervalTimer *itimer, int interval);$/;"	p	signature:(IntervalTimer *itimer, int interval)
timerStart	PTPWRd/dep/timer.c	/^void timerStart(IntervalTimer *itimer, int interval)$/;"	f	signature:(IntervalTimer *itimer, int interval)
timerStop	PTPWRd/dep/ptpd_dep.h	/^void timerStop(IntervalTimer *itimer);$/;"	p	signature:(IntervalTimer *itimer)
timerStop	PTPWRd/dep/timer.c	/^void timerStop(IntervalTimer *itimer)$/;"	f	signature:(IntervalTimer *itimer)
timers	PTPWRd/datatypes.h	/^	} timers;$/;"	m	struct:__anon58	typeref:struct:__anon58::__anon60	access:public
timestamp_display	PTPWRd/display.c	/^void timestamp_display(Timestamp *timestamp) {$/;"	f	signature:(Timestamp *timestamp)
timing_mode	wrsw_hal/hal_exports.h	/^  int timing_mode; \/* Free-running Master\/GM\/BC *\/$/;"	m	struct:__anon68	access:public
tlv	PTPWRd/datatypes.h	/^	char* tlv;$/;"	m	struct:__anon52	access:public
tlv	PTPWRd/datatypes.h	/^	char* tlv;$/;"	m	struct:__anon53	access:public
tlvType	PTPWRd/datatypes.h	/^	Enumeration16 tlvType;$/;"	m	struct:__anon40	access:public
tmo_expired	libptpnetif/netif_test.c	/^static inline int tmo_expired(timeout_t *tmo)$/;"	f	file:	signature:(timeout_t *tmo)
tmo_expired	libptpnetif/ptpd_netif.c	/^static inline int tmo_expired(timeout_t *tmo)$/;"	f	file:	signature:(timeout_t *tmo)
tmo_init	libptpnetif/netif_test.c	/^static inline int tmo_init(timeout_t *tmo, uint32_t milliseconds)$/;"	f	file:	signature:(timeout_t *tmo, uint32_t milliseconds)
tmo_init	libptpnetif/ptpd_netif.c	/^static inline int tmo_init(timeout_t *tmo, uint32_t milliseconds)$/;"	f	file:	signature:(timeout_t *tmo, uint32_t milliseconds)
tmo_restart	libptpnetif/netif_test.c	/^static inline int tmo_restart(timeout_t *tmo)$/;"	f	file:	signature:(timeout_t *tmo)
tmo_restart	libptpnetif/ptpd_netif.c	/^static inline int tmo_restart(timeout_t *tmo)$/;"	f	file:	signature:(timeout_t *tmo)
toInternalTime	PTPWRd/arith.c	/^void toInternalTime(TimeInternal *internal, Timestamp *external)$/;"	f	signature:(TimeInternal *internal, Timestamp *external)
toInternalTime	PTPWRd/ptpd.h	/^void toInternalTime(TimeInternal*,Timestamp*);$/;"	p	signature:(TimeInternal*,Timestamp*)
toState	PTPWRd/protocol.c	/^void toState(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
toState	PTPWRd/protocol.c	/^void toState(UInteger8,RunTimeOpts*,PtpPortDS*);$/;"	p	file:	signature:(UInteger8,RunTimeOpts*,PtpPortDS*)
toState	PTPWRd/ptpd.h	/^extern void toState(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS);$/;"	p	signature:(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
toWRState	PTPWRd/wr_protocol.c	/^void toWRState(UInteger8 enteringState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(UInteger8 enteringState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
toWRState	PTPWRd/wr_protocol.h	/^    void toWRState(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS);$/;"	p	signature:(UInteger8 state, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
total_asymmetry	PTPWRd/ptpd_exports.h	/^	int64_t total_asymmetry;$/;"	m	struct:__anon9	access:public
tracking_enabled	PTPWRd/dep/wr_servo.c	/^static int tracking_enabled = 1;$/;"	v	file:
tracking_enabled	PTPWRd/ptpd_exports.h	/^	int tracking_enabled;$/;"	m	struct:__anon9	access:public
transportSpecific	PTPWRd/datatypes.h	/^	Nibble transportSpecific;$/;"	m	struct:__anon43	access:public
ts_add	PTPWRd/dep/wr_servo.c	/^static wr_timestamp_t ts_add(wr_timestamp_t a, wr_timestamp_t b)$/;"	f	file:	signature:(wr_timestamp_t a, wr_timestamp_t b)
ts_add	libptpnetif/netif_test.c	/^wr_timestamp_t ts_add(wr_timestamp_t a, wr_timestamp_t b)$/;"	f	signature:(wr_timestamp_t a, wr_timestamp_t b)
ts_div2	libptpnetif/netif_test.c	/^wr_timestamp_t ts_div2(wr_timestamp_t a)$/;"	f	signature:(wr_timestamp_t a)
ts_hardwarize	PTPWRd/dep/wr_servo.c	/^static wr_timestamp_t ts_hardwarize(wr_timestamp_t ts, int clock_period_ps)$/;"	f	file:	signature:(wr_timestamp_t ts, int clock_period_ps)
ts_hardwarize	libptpnetif/netif_test.c	/^wr_timestamp_t ts_hardwarize(wr_timestamp_t ts)$/;"	f	signature:(wr_timestamp_t ts)
ts_sub	PTPWRd/dep/wr_servo.c	/^static wr_timestamp_t ts_sub(wr_timestamp_t a, wr_timestamp_t b)$/;"	f	file:	signature:(wr_timestamp_t a, wr_timestamp_t b)
ts_sub	libptpnetif/netif_test.c	/^wr_timestamp_t ts_sub(wr_timestamp_t a, wr_timestamp_t b)$/;"	f	signature:(wr_timestamp_t a, wr_timestamp_t b)
ts_to_picos	PTPWRd/dep/wr_servo.c	/^static int64_t ts_to_picos(wr_timestamp_t ts)$/;"	f	file:	signature:(wr_timestamp_t ts)
ts_to_picos	libptpnetif/netif_test.c	/^int64_t ts_to_picos(wr_timestamp_t ts)$/;"	f	signature:(wr_timestamp_t ts)
ts_zero	libptpnetif/netif_test.c	/^wr_timestamp_t ts_zero()$/;"	f
twoStepFlag	PTPWRd/datatypes.h	/^	Boolean twoStepFlag;$/;"	m	struct:__anon57	access:public
tx_calibrated	wrsw_hal/hal_exports.h	/^  int tx_calibrated;$/;"	m	struct:__anon66	access:public
tx_tstamp_counter	wrsw_hal/hal_exports.h	/^  int tx_tstamp_counter;$/;"	m	struct:__anon66	access:public
type	libminipc/minipc-int.h	/^	uint32_t type;$/;"	m	struct:mpc_rep_packet	access:public
uInteger48_display	PTPWRd/display.c	/^void uInteger48_display(UInteger48 *bigint){$/;"	f	signature:(UInteger48 *bigint)
unicastAddr	PTPWRd/dep/datatypes_dep.h	/^	wr_sockaddr_t unicastAddr;$/;"	m	struct:__anon16	access:public
unicastAddress	PTPWRd/datatypes.h	/^	Octet		unicastAddress[NET_ADDRESS_LENGTH];$/;"	m	struct:__anon61	access:public
unicast_display	PTPWRd/display.c	/^void unicast_display(Octet *unicast){$/;"	f	signature:(Octet *unicast)
unicast_display	PTPWRd/ptpd.h	/^void unicast_display(Octet*);$/;"	p	signature:(Octet*)
up	wrsw_hal/hal_exports.h	/^  int up;$/;"	m	struct:__anon66	access:public
updateClock	PTPWRd/dep/ptpd_dep.h	/^void updateClock(RunTimeOpts*,PtpPortDS*);$/;"	p	signature:(RunTimeOpts*,PtpPortDS*)
updateClock	PTPWRd/dep/servo.c	/^void updateClock(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
updateDelay	PTPWRd/dep/ptpd_dep.h	/^void updateDelay (one_way_delay_filter*, RunTimeOpts*, PtpPortDS*,TimeInternal*);$/;"	p	signature:(one_way_delay_filter*, RunTimeOpts*, PtpPortDS*,TimeInternal*)
updateDelay	PTPWRd/dep/servo.c	/^void updateDelay (one_way_delay_filter *owd_filt, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS,TimeInternal *correctionField)$/;"	f	signature:(one_way_delay_filter *owd_filt, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS,TimeInternal *correctionField)
updateOffset	PTPWRd/dep/ptpd_dep.h	/^void updateOffset(TimeInternal*,TimeInternal*,$/;"	p	signature:(TimeInternal*,TimeInternal*, offset_from_master_filter*,RunTimeOpts*,PtpPortDS*,TimeInternal*)
updateOffset	PTPWRd/dep/servo.c	/^void updateOffset(TimeInternal *send_time, TimeInternal *recv_time,$/;"	f	signature:(TimeInternal *send_time, TimeInternal *recv_time, offset_from_master_filter *ofm_filt, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS,TimeInternal *correctionField)
updatePeerDelay	PTPWRd/dep/ptpd_dep.h	/^void updatePeerDelay (one_way_delay_filter*, RunTimeOpts*,PtpPortDS*,TimeInternal*,Boolean);$/;"	p	signature:(one_way_delay_filter*, RunTimeOpts*,PtpPortDS*,TimeInternal*,Boolean)
updatePeerDelay	PTPWRd/dep/servo.c	/^void updatePeerDelay (one_way_delay_filter *owd_filt, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS,TimeInternal *correctionField,Boolean twoStep)$/;"	f	signature:(one_way_delay_filter *owd_filt, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS,TimeInternal *correctionField,Boolean twoStep)
update_count	PTPWRd/ptpd_exports.h	/^	int64_t update_count;$/;"	m	struct:__anon9	access:public
update_dmtd	libposix/freestanding-wrapper.c	/^static void update_dmtd(wr_socket_t *sock)$/;"	f	file:	signature:(wr_socket_t *sock)
update_dmtd	libptpnetif/ptpd_netif.c	/^static void update_dmtd(wr_socket_t *sock)$/;"	f	file:	signature:(wr_socket_t *sock)
update_rx_queues	libposix/freestanding-wrapper.c	/^int update_rx_queues(void)$/;"	f	signature:(void)
usleep	libposix/freestanding-wrapper.c	/^int usleep(useconds_t useconds)$/;"	f	signature:(useconds_t useconds)
usleep	libposix/ptpd-wrappers.h	/^extern int usleep(useconds_t usec);$/;"	p	signature:(useconds_t usec)
utc	libptpnetif/ptpd_netif.h	/^    int64_t utc;$/;"	m	struct:_wr_timestamp	access:public
val	libminipc/minipc-int.h	/^	uint8_t val[MINIPC_MAX_REPLY];$/;"	m	struct:mpc_rep_packet	access:public
valid	PTPWRd/ptpd_exports.h	/^	int valid;$/;"	m	struct:__anon9	access:public
valid	wrsw_hal/hal_exports.h	/^  int valid;$/;"	m	struct:__anon66	access:public
valueField	PTPWRd/datatypes.h	/^	Octet* valueField;$/;"	m	struct:__anon40	access:public
versionNumber	PTPWRd/datatypes.h	/^	UInteger4 versionNumber;$/;"	m	struct:__anon58	access:public
versionPTP	PTPWRd/datatypes.h	/^	UInteger4 versionPTP;$/;"	m	struct:__anon43	access:public
waitingForDelayFollowUp	PTPWRd/datatypes.h	/^    Boolean  waitingForDelayFollowUp;$/;"	m	struct:__anon58	access:public
waitingForFollow	PTPWRd/datatypes.h	/^	Boolean  waitingForFollow;$/;"	m	struct:__anon58	access:public
wrConfig	PTPWRd/datatypes.h	/^	Enumeration8 	wrConfig;	$/;"	m	struct:__anon61	access:public
wrConfig	PTPWRd/datatypes.h	/^	Enumeration8 wrConfig;	$/;"	m	struct:__anon58	access:public
wrMode	PTPWRd/datatypes.h	/^	Enumeration8 wrMode; $/;"	m	struct:__anon58	access:public
wrModeON	PTPWRd/datatypes.h	/^	Boolean wrModeON; $/;"	m	struct:__anon58	access:public
wrPortState	PTPWRd/datatypes.h	/^	Enumeration8  wrPortState;$/;"	m	struct:__anon58	access:public
wrSlaveRole	PTPWRd/datatypes.h	/^	Enumeration8 wrSlaveRole;$/;"	m	struct:__anon58	access:public
wrSock	PTPWRd/dep/datatypes_dep.h	/^	wr_socket_t *wrSock;$/;"	m	struct:__anon16	access:public
wrStateRetry	PTPWRd/datatypes.h	/^	UInteger8 	wrStateRetry;$/;"	m	struct:__anon61	access:public
wrStateRetry	PTPWRd/datatypes.h	/^	UInteger8 wrStateRetry;$/;"	m	struct:__anon58	access:public
wrStateTimeout	PTPWRd/datatypes.h	/^	UInteger32 	wrStateTimeout;$/;"	m	struct:__anon61	access:public
wrStateTimeout	PTPWRd/datatypes.h	/^	UInteger32 wrStateTimeout; $/;"	m	struct:__anon58	access:public
wrTimeouts	PTPWRd/datatypes.h	/^	int wrTimeouts[WR_TIMER_ARRAY_SIZE];$/;"	m	struct:__anon58	access:public
wrTimerExpired	PTPWRd/wr_protocol.c	/^void wrTimerExpired(UInteger8 currentState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS, Enumeration8 wrMode)$/;"	f	signature:(UInteger8 currentState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS, Enumeration8 wrMode)
wrTimerExpired	PTPWRd/wr_protocol.h	/^void wrTimerExpired(UInteger8 currentState, RunTimeOpts *rtOpts,$/;"	p	signature:(UInteger8 currentState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS, Enumeration8 wrMode)
wrTimers	PTPWRd/datatypes.h	/^	IntervalTimer wrTimers[WR_TIMER_ARRAY_SIZE];$/;"	m	struct:__anon58	access:public
wrTimetoutManage	PTPWRd/wr_protocol.c	/^void wrTimetoutManage(UInteger8 enteringState, UInteger8 exitingState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)$/;"	f	signature:(UInteger8 enteringState, UInteger8 exitingState, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
wrTimetoutManage	PTPWRd/wr_protocol.h	/^void wrTimetoutManage(UInteger8,UInteger8, RunTimeOpts *rtOpts,$/;"	p	signature:(UInteger8,UInteger8, RunTimeOpts *rtOpts, PtpPortDS *ptpPortDS)
wr_flags	PTPWRd/datatypes.h	/^	UInteger8 wr_flags;$/;"	m	struct:__anon44	access:public
wr_servo	PTPWRd/datatypes.h	/^	wr_servo_state_t wr_servo;$/;"	m	struct:__anon58	access:public
wr_servo_enable_tracking	PTPWRd/dep/wr_servo.c	/^void wr_servo_enable_tracking(int enable)$/;"	f	signature:(int enable)
wr_servo_enable_tracking	PTPWRd/ptpd.h	/^extern void wr_servo_enable_tracking(int enable);$/;"	p	signature:(int enable)
wr_servo_got_delay	PTPWRd/dep/wr_servo.c	/^int wr_servo_got_delay(PtpPortDS *clock, Integer32 cf)$/;"	f	signature:(PtpPortDS *clock, Integer32 cf)
wr_servo_got_delay	PTPWRd/ptpd.h	/^int wr_servo_got_delay(PtpPortDS *clock, Integer32 cf);$/;"	p	signature:(PtpPortDS *clock, Integer32 cf)
wr_servo_got_sync	PTPWRd/dep/wr_servo.c	/^int wr_servo_got_sync(PtpPortDS *clock, TimeInternal t1, TimeInternal t2)$/;"	f	signature:(PtpPortDS *clock, TimeInternal t1, TimeInternal t2)
wr_servo_got_sync	PTPWRd/ptpd.h	/^int wr_servo_got_sync(PtpPortDS *clock, TimeInternal t1, TimeInternal t2);$/;"	p	signature:(PtpPortDS *clock, TimeInternal t1, TimeInternal t2)
wr_servo_init	PTPWRd/dep/wr_servo.c	/^int wr_servo_init(PtpPortDS *clock)$/;"	f	signature:(PtpPortDS *clock)
wr_servo_init	PTPWRd/ptpd.h	/^int wr_servo_init(PtpPortDS *clock);$/;"	p	signature:(PtpPortDS *clock)
wr_servo_man_adjust_phase	PTPWRd/dep/wr_servo.c	/^int wr_servo_man_adjust_phase(int phase)$/;"	f	signature:(int phase)
wr_servo_man_adjust_phase	PTPWRd/ptpd.h	/^extern int wr_servo_man_adjust_phase(int phase);$/;"	p	signature:(int phase)
wr_servo_reset	PTPWRd/dep/wr_servo.c	/^void wr_servo_reset()$/;"	f
wr_servo_state_t	PTPWRd/dep/datatypes_dep.h	/^} wr_servo_state_t;$/;"	t	typeref:struct:__anon17
wr_servo_state_t	libptpnetif/netif_test.c	/^} wr_servo_state_t;$/;"	t	typeref:struct:__anon7	file:
wr_servo_update	PTPWRd/dep/wr_servo.c	/^int wr_servo_update(PtpPortDS *clock)$/;"	f	signature:(PtpPortDS *clock)
wr_servo_update	PTPWRd/ptpd.h	/^int wr_servo_update(PtpPortDS *clock);$/;"	p	signature:(PtpPortDS *clock)
wr_sockaddr_t	libptpnetif/ptpd_netif.h	/^} wr_sockaddr_t;$/;"	t	typeref:struct:__anon1
wr_socket_t	libptpnetif/ptpd_netif.h	/^typedef void *wr_socket_t;$/;"	t
wr_sockets	libposix/freestanding-wrapper.c	/^static struct my_socket wr_sockets[SOCKS_NUM];$/;"	v	typeref:struct:my_socket	file:
wr_timestamp_t	libptpnetif/ptpd_netif.h	/^typedef struct _wr_timestamp wr_timestamp_t;$/;"	t	typeref:struct:_wr_timestamp
wrc_debug_printf	PTPWRd/dep/trace.h	/^extern void wrc_debug_printf(int subsys, const char *fmt, ...);$/;"	p	signature:(int subsys, const char *fmt, ...)
y	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon14	access:public
y	PTPWRd/dep/datatypes_dep.h	/^	Integer32  nsec_prev, y;$/;"	m	struct:__anon15	access:public
